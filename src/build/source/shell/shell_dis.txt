
E:/CppProject/Tinyos/src/build/source/shell/shell.elf:     file format elf32-i386
E:/CppProject/Tinyos/src/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000a90

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00008df0 memsz 0x000093a0 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007ccf  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000070c  81007ce0  81007ce0  00008ce0  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81008400  81008400  00009400  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000005a0  81008e00  81008e00  00009df0  2**5
                  ALLOC
  4 .debug_info   00028d7a  00000000  00000000  00009df0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00009198  00000000  00000000  00032b6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000928  00000000  00000000  0003bd08  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_ranges 00000018  00000000  00000000  0003c630  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000058c0  00000000  00000000  0003c648  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001789  00000000  00000000  00041f08  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .comment      00000023  00000000  00000000  00043691  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001d80  00000000  00000000  000436b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line_str 000013b0  00000000  00000000  00045434  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_rnglists 0000004e  00000000  00000000  000467e4  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
81000000 l    d  .text	00000000 .text
81007ce0 l    d  .rodata	00000000 .rodata
81008400 l    d  .data	00000000 .data
81008e00 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    df *ABS*	00000000 main.c
81008e00 l     O .bss	0000040c cli
81008400 l     O .data	00000004 prompt
81000000 l     F .text	00000042 do_help
81000042 l     F .text	00000033 do_clear
81000075 l     F .text	0000019d do_echo
81000212 l     F .text	00000010 do_exit
81000222 l     F .text	00000098 do_ls
810002ba l     F .text	0000028b do_less
81000545 l     F .text	00000039 find_exec_path
8100057e l     F .text	0000011b do_cp
81000699 l     F .text	00000078 do_rm
81007f20 l     O .rodata	00000060 cmd_list
81000711 l     F .text	00000048 cli_init
81000759 l     F .text	00000044 find_builtin
8100079d l     F .text	00000042 run_builtin
810007df l     F .text	000000bb run_exec_file
8100089a l     F .text	00000033 show_prompt
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
81000adb l     F .text	0000004c sys_call
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgetc.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
81001591 l     F .text	000000ad std
8100163e l     F .text	0000001b stdin_init
81001659 l     F .text	0000001b stdout_init
81001674 l     F .text	0000001b stderr_init
8100920c l     O .bss	00000004 __sfp_recursive_mutex
81009210 l     O .bss	00000004 __sinit_recursive_mutex
81001937 l     F .text	0000000a __fp_lock
81001941 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getopt.c
8100921c l     O .bss	00000004 optwhere
81009220 l     O .bss	00000004 permute_from
81009224 l     O .bss	00000004 num_nonopts
81002f16 l     F .text	0000007b reverse_argv_elements
81002f91 l     F .text	00000036 permute
81002fc7 l     F .text	00000031 is_option
81002ff8 l     F .text	00000059 read_globals
81003051 l     F .text	00000052 write_globals
810030a3 l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 impure.c
81008420 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
81003ebd l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81004a0d l       .text	00000000 L20
810049c4 l       .text	00000000 L5
81004a0a l       .text	00000000 L15
810049d0 l       .text	00000000 L8
810049f1 l       .text	00000000 L9
81004a00 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
81004a5f l       .text	00000000 L4
81004a51 l       .text	00000000 BYTECMP
81004a4c l       .text	00000000 L5
81004a53 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81009288 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81004cad l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 refill.c
8100632b l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
810069eb l       .text	00000000 L25
81006992 l       .text	00000000 L5
810069de l       .text	00000000 L14
810069e4 l       .text	00000000 L19
810069a3 l       .text	00000000 L10
810069d0 l       .text	00000000 L9
810069d3 l       .text	00000000 L15
81006a1e l       .text	00000000 L26
81006a21 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81006b26 l       .text	00000000 L5
81006b5e l       .text	00000000 L15
81006b30 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
81006c6c l     F .text	0000000a __locale_ctype_ptr_l
81006c76 l     F .text	0000000a __get_global_locale
81006c80 l     F .text	0000000a __get_current_locale
81006c8a l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
81009290 l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputwc.c
81007450 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
81008c70 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
8100778f l     F .text	0000000a __get_global_locale
81007799 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
8100787b l     F .text	0000000a __get_global_locale
81007885 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 putc.c
81007911 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
81007b3e l     F .text	0000000a __get_global_locale
81007b48 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
81007c48 l     F .text	0000000a __get_global_locale
81007c52 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81009298 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
8100929c l     O .bss	00000004 __env_recursive_mutex
8100774f g     F .text	00000040 _isatty_r
81006194 g     F .text	00000037 cleanup_glue
810057c8 g     F .text	000000d6 _puts_r
81007835 g     F .text	00000046 _lseek_r
81000bdd g     F .text	0000001b yield
81007302 g     F .text	000000ba __sflags
81000e83 g     F .text	00000033 ioctl
81006c52 g     F .text	0000001a strtok_r
81005793 g     F .text	00000035 printf
81007b52 g     F .text	00000077 _wcrtomb_r
810068ce g     F .text	0000004a __sseek
81001886 g     F .text	00000099 __sinit
81006ecf g     F .text	00000112 __swbuf_r
810077a3 g     F .text	0000005f _setlocale_r
8100168f g     F .text	0000006f __sfmoreglue
81004bcb g     F .text	00000006 __malloc_unlock
81004ab0 g       .text	00000000 memmove
81003bff g     F .text	00000049 getopt_long
8100186c g     F .text	0000001a _cleanup
81006b92 g     F .text	000000c0 __strtok_r
810072f8 g     F .text	0000000a __errno
81007625 g     F .text	00000020 getenv
81002885 g     F .text	00000043 _fstat_r
8100928c g     O .bss	00000004 errno
810065bc g     F .text	0000001d __srget
81006869 g     F .text	0000000a __seofread
81000baf g     F .text	0000002e execve
81000b51 g     F .text	0000001b getpid
81001572 g     F .text	0000001f fgets
81004a68 g       .text	00000000 memcpy
81006619 g     F .text	0000020c setvbuf
8100184b g     F .text	00000021 _cleanup_r
8100589e g     F .text	0000001c puts
81003e84 g     F .text	0000001c malloc
81005766 g     F .text	0000002d _printf_r
81000cc7 g     F .text	00000021 isatty
81009214 g     O .bss	00000004 optarg
81009240 g     O .bss	00000004 __malloc_top_pad
81008e00 g       .bss	00000000 __bss_start__
810028c8 g     F .text	0000049e __sfvwrite_r
810065d9 g     F .text	00000040 _sbrk_r
81008404 g     O .data	00000004 opterr
81000dff g     F .text	00000040 readdir
81007a15 g     F .text	00000046 _read_r
81000f4f g     F .text	00000107 _fclose_r
810012f1 g     F .text	00000039 fflush
81009244 g     O .bss	00000004 __malloc_max_sbrked_mem
8100132a g     F .text	00000071 _fgetc_r
81000c9a g     F .text	0000002d lseek
81008084 g     O .rodata	00000004 _global_impure_ptr
810058ba g     F .text	000008da _realloc_r
81006e81 g     F .text	00000025 strtol_l
81007566 g     F .text	00000057 _fputwc_r
8100194b g     F .text	00000024 __fp_lock_all
81006ea6 g     F .text	00000029 strtol
810023b4 g     F .text	000004b1 _fseeko_r
810061cb g     F .text	00000160 _reclaim_reent
810073bc g     F .text	00000046 _fputc_r
81000c4c g     F .text	0000002d write
81007977 g     F .text	0000004b _putc_r
81008dec g     O .data	00000004 environ
81000ce8 g     F .text	00000027 fstat
81001ab0 g     F .text	0000002c fprintf
81003cdd g     F .text	00000027 __getopt_long_only_r
81002865 g     F .text	00000020 fseeko
81000ef1 g     F .text	0000001a _atoi_r
81002394 g     F .text	00000020 fseek
81004d13 g     F .text	000000a8 __sfputs_r
81009218 g     O .bss	00000004 optind
8100191f g     F .text	00000006 __sfp_lock_acquire
81004980 g       .text	00000000 memchr
810092a0 g       .bss	00000000 __bss_end__
81001e3b g     F .text	000003db _free_r
81000d73 g     F .text	00000021 wait
81008160 g     O .rodata	00000180 _ctype_b
81007802 g     F .text	00000014 __locale_mb_cur_max
81006559 g     F .text	00000063 __srget_r
810071a3 g     F .text	00000115 __call_exitprocs
81008c6c g     O .data	00000004 __malloc_sbrk_base
81000a90 g       .text	00000000 _start
81000c1f g     F .text	0000002d read
81005720 g     F .text	00000046 _open_r
81007a5b g     F .text	000000e3 strncmp
81003cb6 g     F .text	00000027 __getopt_long_r
81009260 g     O .bss	00000028 __malloc_current_mallinfo
81000eb6 g     F .text	00000021 unlink
81005766 g     F .text	0000002d _iprintf_r
810072b8 g     F .text	00000040 _close_r
81006b69 g     F .text	00000029 strtok
81004a15 g       .text	00000000 memcmp
81002e39 g     F .text	000000b8 _fwrite_r
81000b94 g     F .text	0000001b fork
81007048 g     F .text	0000015b __swsetup_r
810016fe g     F .text	0000014d __sfp
81008860 g     O .data	00000408 __malloc_av_
81001931 g     F .text	00000006 __sinit_lock_release
81006825 g     F .text	00000044 __sread
81001e16 g     F .text	00000025 fread
81004bc5 g     F .text	00000006 __malloc_lock
81001a87 g     F .text	00000029 _fprintf_r
81000d0f g     F .text	00000021 sbrk
81001299 g     F .text	00000058 _fflush_r
81000aa0 g     F .text	0000003b cstart
81001a68 g     F .text	0000001f fopen
81003bb8 g     F .text	00000047 getopt
81004b3d g       .text	00000000 memset
810008cd g     F .text	000001c3 main
81009248 g     O .bss	00000004 __malloc_max_total_mem
81006fe1 g     F .text	00000021 __swbuf
81001ba1 g     F .text	00000275 _fread_r
81006918 g     F .text	00000025 __sclose
81001056 g     F .text	0000001d fclose
81006e5c g     F .text	00000025 _strtol_r
81007645 g     F .text	000000ed _findenv_r
81004150 g     F .text	00000822 _malloc_r
81007c80 g     F .text	00000043 __ascii_wctomb
81000d94 g     F .text	0000006b opendir
81001a87 g     F .text	00000029 _fiprintf_r
810092a0 g     O .bss	00000100 cmd_buf
81007cc9 g     F .text	00000006 __env_unlock
81007605 g     F .text	00000020 _findenv
81002d66 g     F .text	00000068 _fwalk
81001414 g     F .text	0000015e _fgets_r
8100788f g     F .text	0000002a _mbtowc_r
810079c2 g     F .text	00000053 putc
81003c48 g     F .text	00000049 getopt_long_only
81002216 g     F .text	00000161 _malloc_trim_r
81006a3c g     F .text	000000a5 strcmp
81004dbb g     F .text	00000025 vfiprintf
81000d30 g     F .text	00000021 dup
81005793 g     F .text	00000035 iprintf
8100139b g     F .text	00000079 fgetc
81009294 g     O .bss	00000004 _PathLocale
81007002 g     F .text	00000046 _write_r
81007816 g     F .text	0000001f setlocale
81005136 g     F .text	0000019b _printf_common
81008844 g     O .data	00000004 _impure_ptr
81001073 g     F .text	00000226 __sflush_r
81002377 g     F .text	0000001d _fseek_r
81006358 g     F .text	00000201 __srefill_r
810078b9 g     F .text	00000058 __ascii_mbtowc
8100196f g     F .text	00000024 __fp_unlock_all
81007402 g     F .text	0000004e fputc
81000b6c g     F .text	00000028 print_msg
81008408 g     O .data	00000004 optopt
81003df1 g     F .text	00000093 __swhatbuf_r
81002ef1 g     F .text	00000025 fwrite
810074b6 g     F .text	000000b0 __fputwc
81001adc g     F .text	000000a6 _fputs_r
81006873 g     F .text	0000005b __swrite
81008c68 g     O .data	00000004 __malloc_trim_threshold
81000f0b g     F .text	00000044 exit
81001ab0 g     F .text	0000002c fiprintf
81004de0 g     F .text	00000356 _vfiprintf_r
81002dce g     F .text	0000006b _fwalk_reent
81001925 g     F .text	00000006 __sfp_lock_release
81000ed7 g     F .text	0000001a atoi
810082e0 g     O .rodata	00000101 _ctype_
81003c91 g     F .text	00000025 __getopt_r
81001993 g     F .text	000000d5 _fopen_r
81000d51 g     F .text	00000022 _exit
81003d04 g     F .text	000000ed __smakebuf_r
81006af0 g       .text	00000000 strlen
810052d1 g     F .text	0000044f _printf_i
81000bf8 g     F .text	00000027 open
81004bd1 g     F .text	000000dc __sprint_r
81006940 g       .text	00000000 strchr
81001b82 g     F .text	0000001f fputs
81000e3f g     F .text	00000044 closedir
81007c5c g     F .text	00000024 _wctomb_r
81007cc3 g     F .text	00000006 __env_lock
81004de0 g     F .text	00000356 _vfprintf_r
81000b27 g     F .text	0000002a msleep
81007bc9 g     F .text	0000007f wcrtomb
81000c79 g     F .text	00000021 close
81008c80 g     O .data	0000016c __global_locale
81004dbb g     F .text	00000025 vfprintf
810075bd g     F .text	00000048 fputwc
81003ea0 g     F .text	0000001d free
8100192b g     F .text	00000006 __sinit_lock_acquire
81007732 g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <do_help>:
/**
 * @brief help命令
 * @param argc 参数数量
 * @param argv 参数的字符串 
 */
static int do_help(int argc,char** argv){
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
    const cli_cmd_t* start=cli.cmd_start;
81000006:	a1 00 92 00 81       	mov    0x81009200,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)

    while(start<cli.cmd_end){
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
        printf("%s %s\n",start->name,start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 e6 7c 00 81       	push   $0x81007ce6
81000025:	e8 69 57 00 00       	call   81005793 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
        start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
    while(start<cli.cmd_end){
81000031:	a1 04 92 00 81       	mov    0x81009204,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
    }

    return 0;
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <do_clear>:

/**
 * @brief 实现清屏的函数
 */
static int do_clear(int argc,char** argv){
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
    printf("%s",ESC_CLEAR_SCREEN);
81000048:	83 ec 08             	sub    $0x8,%esp
8100004b:	68 ed 7c 00 81       	push   $0x81007ced
81000050:	68 f2 7c 00 81       	push   $0x81007cf2
81000055:	e8 39 57 00 00       	call   81005793 <iprintf>
8100005a:	83 c4 10             	add    $0x10,%esp
    printf("%s",ESC_MOVE_CURSOR(0,0));
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	68 f5 7c 00 81       	push   $0x81007cf5
81000065:	68 f2 7c 00 81       	push   $0x81007cf2
8100006a:	e8 24 57 00 00       	call   81005793 <iprintf>
8100006f:	83 c4 10             	add    $0x10,%esp

}
81000072:	90                   	nop
81000073:	c9                   	leave  
81000074:	c3                   	ret    

81000075 <do_echo>:
/**
 * @brief echo命令执行的函数
 * @param argc 参数数量
 * @param argv 参数的字符串 
 */
static int do_echo(int argc,char** argv){
81000075:	55                   	push   %ebp
81000076:	89 e5                	mov    %esp,%ebp
81000078:	81 ec 98 00 00 00    	sub    $0x98,%esp

    // 当只输入echo命令是等待输入字符串打印
    if(argc == 1){
8100007e:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000082:	75 40                	jne    810000c4 <do_echo+0x4f>
        char msg_buf[128];
        fgets(msg_buf,sizeof(msg_buf),stdin);
81000084:	a1 44 88 00 81       	mov    0x81008844,%eax
81000089:	8b 40 04             	mov    0x4(%eax),%eax
8100008c:	83 ec 04             	sub    $0x4,%esp
8100008f:	50                   	push   %eax
81000090:	68 80 00 00 00       	push   $0x80
81000095:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
8100009b:	50                   	push   %eax
8100009c:	e8 d1 14 00 00       	call   81001572 <fgets>
810000a1:	83 c4 10             	add    $0x10,%esp
        msg_buf[sizeof(msg_buf)-1]='\0';
810000a4:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
        puts(msg_buf);
810000a8:	83 ec 0c             	sub    $0xc,%esp
810000ab:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000b1:	50                   	push   %eax
810000b2:	e8 e7 57 00 00       	call   8100589e <puts>
810000b7:	83 c4 10             	add    $0x10,%esp
        return 0;
810000ba:	b8 00 00 00 00       	mov    $0x0,%eax
810000bf:	e9 4c 01 00 00       	jmp    81000210 <do_echo+0x19b>
    }

    int count = 0;
810000c4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    int ch;
    while((ch=getopt(argc,argv,"n:h")) != -1){
810000cb:	e9 9b 00 00 00       	jmp    8100016b <do_echo+0xf6>
        switch(ch){
810000d0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810000d3:	83 f8 68             	cmp    $0x68,%eax
810000d6:	74 0f                	je     810000e7 <do_echo+0x72>
810000d8:	83 f8 6e             	cmp    $0x6e,%eax
810000db:	74 3e                	je     8100011b <do_echo+0xa6>
810000dd:	83 f8 3f             	cmp    $0x3f,%eax
810000e0:	74 4f                	je     81000131 <do_echo+0xbc>
810000e2:	e9 83 00 00 00       	jmp    8100016a <do_echo+0xf5>
            case 'h':
                puts("echo: any message");
810000e7:	83 ec 0c             	sub    $0xc,%esp
810000ea:	68 fc 7c 00 81       	push   $0x81007cfc
810000ef:	e8 aa 57 00 00       	call   8100589e <puts>
810000f4:	83 c4 10             	add    $0x10,%esp
                puts("Usage: echo [-n count] msg");
810000f7:	83 ec 0c             	sub    $0xc,%esp
810000fa:	68 0e 7d 00 81       	push   $0x81007d0e
810000ff:	e8 9a 57 00 00       	call   8100589e <puts>
81000104:	83 c4 10             	add    $0x10,%esp
                optind = 1;
81000107:	c7 05 18 92 00 81 01 	movl   $0x1,0x81009218
8100010e:	00 00 00 
                return 0;
81000111:	b8 00 00 00 00       	mov    $0x0,%eax
81000116:	e9 f5 00 00 00       	jmp    81000210 <do_echo+0x19b>
            case 'n':
                count = atoi(optarg);
8100011b:	a1 14 92 00 81       	mov    0x81009214,%eax
81000120:	83 ec 0c             	sub    $0xc,%esp
81000123:	50                   	push   %eax
81000124:	e8 ae 0d 00 00       	call   81000ed7 <atoi>
81000129:	83 c4 10             	add    $0x10,%esp
8100012c:	89 45 f4             	mov    %eax,-0xc(%ebp)
                break;
8100012f:	eb 3a                	jmp    8100016b <do_echo+0xf6>
            case '?':
                if(optarg){
81000131:	a1 14 92 00 81       	mov    0x81009214,%eax
81000136:	85 c0                	test   %eax,%eax
81000138:	74 1c                	je     81000156 <do_echo+0xe1>
                    fprintf(stderr,"Unknown option: %c\n",ch);
8100013a:	a1 44 88 00 81       	mov    0x81008844,%eax
8100013f:	8b 40 0c             	mov    0xc(%eax),%eax
81000142:	83 ec 04             	sub    $0x4,%esp
81000145:	ff 75 ec             	pushl  -0x14(%ebp)
81000148:	68 29 7d 00 81       	push   $0x81007d29
8100014d:	50                   	push   %eax
8100014e:	e8 5d 19 00 00       	call   81001ab0 <fiprintf>
81000153:	83 c4 10             	add    $0x10,%esp
                }
                optind = 1;
81000156:	c7 05 18 92 00 81 01 	movl   $0x1,0x81009218
8100015d:	00 00 00 
                return -1;
81000160:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000165:	e9 a6 00 00 00       	jmp    81000210 <do_echo+0x19b>
            default:
               break;
8100016a:	90                   	nop
    while((ch=getopt(argc,argv,"n:h")) != -1){
8100016b:	83 ec 04             	sub    $0x4,%esp
8100016e:	68 3d 7d 00 81       	push   $0x81007d3d
81000173:	ff 75 0c             	pushl  0xc(%ebp)
81000176:	ff 75 08             	pushl  0x8(%ebp)
81000179:	e8 3a 3a 00 00       	call   81003bb8 <getopt>
8100017e:	83 c4 10             	add    $0x10,%esp
81000181:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000184:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
81000188:	0f 85 42 ff ff ff    	jne    810000d0 <do_echo+0x5b>
        }
    }

    if(optind > argc -1){
8100018e:	8b 45 08             	mov    0x8(%ebp),%eax
81000191:	8d 50 ff             	lea    -0x1(%eax),%edx
81000194:	a1 18 92 00 81       	mov    0x81009218,%eax
81000199:	39 c2                	cmp    %eax,%edx
8100019b:	7d 2b                	jge    810001c8 <do_echo+0x153>
        fprintf(stderr,"Message is empty\n");
8100019d:	a1 44 88 00 81       	mov    0x81008844,%eax
810001a2:	8b 40 0c             	mov    0xc(%eax),%eax
810001a5:	50                   	push   %eax
810001a6:	6a 11                	push   $0x11
810001a8:	6a 01                	push   $0x1
810001aa:	68 41 7d 00 81       	push   $0x81007d41
810001af:	e8 3d 2d 00 00       	call   81002ef1 <fwrite>
810001b4:	83 c4 10             	add    $0x10,%esp
        optind = 1;
810001b7:	c7 05 18 92 00 81 01 	movl   $0x1,0x81009218
810001be:	00 00 00 
        return -1;
810001c1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001c6:	eb 48                	jmp    81000210 <do_echo+0x19b>
    }

    char* msg=argv[optind];
810001c8:	a1 18 92 00 81       	mov    0x81009218,%eax
810001cd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810001d4:	8b 45 0c             	mov    0xc(%ebp),%eax
810001d7:	01 d0                	add    %edx,%eax
810001d9:	8b 00                	mov    (%eax),%eax
810001db:	89 45 e8             	mov    %eax,-0x18(%ebp)
    for(int i=0;i<count;i++){
810001de:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810001e5:	eb 12                	jmp    810001f9 <do_echo+0x184>
        puts(msg);
810001e7:	83 ec 0c             	sub    $0xc,%esp
810001ea:	ff 75 e8             	pushl  -0x18(%ebp)
810001ed:	e8 ac 56 00 00       	call   8100589e <puts>
810001f2:	83 c4 10             	add    $0x10,%esp
    for(int i=0;i<count;i++){
810001f5:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810001f9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810001fc:	3b 45 f4             	cmp    -0xc(%ebp),%eax
810001ff:	7c e6                	jl     810001e7 <do_echo+0x172>
    }
    optind = 1;
81000201:	c7 05 18 92 00 81 01 	movl   $0x1,0x81009218
81000208:	00 00 00 

    return 0;
8100020b:	b8 00 00 00 00       	mov    $0x0,%eax

}
81000210:	c9                   	leave  
81000211:	c3                   	ret    

81000212 <do_exit>:
/**
 * @brief 退出命令行的函数
 * @param argc 参数数量
 * @param argv 参数的字符串 
 */
static int do_exit(int argc,char** argv){
81000212:	55                   	push   %ebp
81000213:	89 e5                	mov    %esp,%ebp
81000215:	83 ec 08             	sub    $0x8,%esp
    exit(0);
81000218:	83 ec 0c             	sub    $0xc,%esp
8100021b:	6a 00                	push   $0x0
8100021d:	e8 e9 0c 00 00       	call   81000f0b <exit>

81000222 <do_ls>:
/**
 * @brief ls命令实现的函数
 * @param argc 参数数量
 * @param argv 参数的字符串
 */
static int do_ls(int argc,char** argv){
81000222:	55                   	push   %ebp
81000223:	89 e5                	mov    %esp,%ebp
81000225:	83 ec 18             	sub    $0x18,%esp
    DIR* p_dir=opendir("temp");
81000228:	83 ec 0c             	sub    $0xc,%esp
8100022b:	68 53 7d 00 81       	push   $0x81007d53
81000230:	e8 5f 0b 00 00       	call   81000d94 <opendir>
81000235:	83 c4 10             	add    $0x10,%esp
81000238:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if(p_dir == NULL){
8100023b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100023f:	75 4d                	jne    8100028e <do_ls+0x6c>
        printf("open dir failed\n");
81000241:	83 ec 0c             	sub    $0xc,%esp
81000244:	68 58 7d 00 81       	push   $0x81007d58
81000249:	e8 50 56 00 00       	call   8100589e <puts>
8100024e:	83 c4 10             	add    $0x10,%esp
        return -1;
81000251:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000256:	eb 60                	jmp    810002b8 <do_ls+0x96>
    }

    struct dirent* entry;
    while((entry=readdir(p_dir))!=NULL){
        printf("%c %s %d\n",
81000258:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100025b:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
            entry->type == FILE_DIR ? 'd' : 'f',
            entry->name,
81000261:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000264:	8d 4a 08             	lea    0x8(%edx),%ecx
            entry->type == FILE_DIR ? 'd' : 'f',
81000267:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100026a:	8b 52 04             	mov    0x4(%edx),%edx
        printf("%c %s %d\n",
8100026d:	83 fa 02             	cmp    $0x2,%edx
81000270:	75 07                	jne    81000279 <do_ls+0x57>
81000272:	ba 64 00 00 00       	mov    $0x64,%edx
81000277:	eb 05                	jmp    8100027e <do_ls+0x5c>
81000279:	ba 66 00 00 00       	mov    $0x66,%edx
8100027e:	50                   	push   %eax
8100027f:	51                   	push   %ecx
81000280:	52                   	push   %edx
81000281:	68 68 7d 00 81       	push   $0x81007d68
81000286:	e8 08 55 00 00       	call   81005793 <iprintf>
8100028b:	83 c4 10             	add    $0x10,%esp
    while((entry=readdir(p_dir))!=NULL){
8100028e:	83 ec 0c             	sub    $0xc,%esp
81000291:	ff 75 f4             	pushl  -0xc(%ebp)
81000294:	e8 66 0b 00 00       	call   81000dff <readdir>
81000299:	83 c4 10             	add    $0x10,%esp
8100029c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100029f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810002a3:	75 b3                	jne    81000258 <do_ls+0x36>
            entry->size
        );
    }

    closedir(p_dir);
810002a5:	83 ec 0c             	sub    $0xc,%esp
810002a8:	ff 75 f4             	pushl  -0xc(%ebp)
810002ab:	e8 8f 0b 00 00       	call   81000e3f <closedir>
810002b0:	83 c4 10             	add    $0x10,%esp
    return 0;
810002b3:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002b8:	c9                   	leave  
810002b9:	c3                   	ret    

810002ba <do_less>:
/**
 * @brief less命令实现的函数
 * @param argc 参数数量
 * @param argv 参数的字符串
 */
static int do_less(int argc,char **argv){
810002ba:	55                   	push   %ebp
810002bb:	89 e5                	mov    %esp,%ebp
810002bd:	83 ec 28             	sub    $0x28,%esp
    int line_mode=0;
810002c0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

    int ch;
    while((ch=getopt(argc,argv,"lh"))!=-1){
810002c7:	e9 8f 00 00 00       	jmp    8100035b <do_less+0xa1>
        switch(ch){
810002cc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810002cf:	83 f8 68             	cmp    $0x68,%eax
810002d2:	74 0c                	je     810002e0 <do_less+0x26>
810002d4:	83 f8 6c             	cmp    $0x6c,%eax
810002d7:	74 3b                	je     81000314 <do_less+0x5a>
810002d9:	83 f8 3f             	cmp    $0x3f,%eax
810002dc:	74 3f                	je     8100031d <do_less+0x63>
810002de:	eb 7a                	jmp    8100035a <do_less+0xa0>
            case 'h':
                puts("show file content");
810002e0:	83 ec 0c             	sub    $0xc,%esp
810002e3:	68 72 7d 00 81       	push   $0x81007d72
810002e8:	e8 b1 55 00 00       	call   8100589e <puts>
810002ed:	83 c4 10             	add    $0x10,%esp
                puts("Usage: less [-l] file");
810002f0:	83 ec 0c             	sub    $0xc,%esp
810002f3:	68 84 7d 00 81       	push   $0x81007d84
810002f8:	e8 a1 55 00 00       	call   8100589e <puts>
810002fd:	83 c4 10             	add    $0x10,%esp
                optind = 1;
81000300:	c7 05 18 92 00 81 01 	movl   $0x1,0x81009218
81000307:	00 00 00 
                return 0;
8100030a:	b8 00 00 00 00       	mov    $0x0,%eax
8100030f:	e9 2f 02 00 00       	jmp    81000543 <do_less+0x289>
            case 'l':
                line_mode = 1;
81000314:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
                break;
8100031b:	eb 3e                	jmp    8100035b <do_less+0xa1>
            case '?':
                if(optarg){
8100031d:	a1 14 92 00 81       	mov    0x81009214,%eax
81000322:	85 c0                	test   %eax,%eax
81000324:	74 20                	je     81000346 <do_less+0x8c>
                    fprintf(stderr,"Unknown option: -%s\n",optarg);
81000326:	8b 15 14 92 00 81    	mov    0x81009214,%edx
8100032c:	a1 44 88 00 81       	mov    0x81008844,%eax
81000331:	8b 40 0c             	mov    0xc(%eax),%eax
81000334:	83 ec 04             	sub    $0x4,%esp
81000337:	52                   	push   %edx
81000338:	68 9a 7d 00 81       	push   $0x81007d9a
8100033d:	50                   	push   %eax
8100033e:	e8 6d 17 00 00       	call   81001ab0 <fiprintf>
81000343:	83 c4 10             	add    $0x10,%esp
                }
                optind = 1;
81000346:	c7 05 18 92 00 81 01 	movl   $0x1,0x81009218
8100034d:	00 00 00 
                return -1;
81000350:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000355:	e9 e9 01 00 00       	jmp    81000543 <do_less+0x289>
            default:
                break;
8100035a:	90                   	nop
    while((ch=getopt(argc,argv,"lh"))!=-1){
8100035b:	83 ec 04             	sub    $0x4,%esp
8100035e:	68 af 7d 00 81       	push   $0x81007daf
81000363:	ff 75 0c             	pushl  0xc(%ebp)
81000366:	ff 75 08             	pushl  0x8(%ebp)
81000369:	e8 4a 38 00 00       	call   81003bb8 <getopt>
8100036e:	83 c4 10             	add    $0x10,%esp
81000371:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000374:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81000378:	0f 85 4e ff ff ff    	jne    810002cc <do_less+0x12>
        }
    }

    if(optind > argc - 1){
8100037e:	8b 45 08             	mov    0x8(%ebp),%eax
81000381:	8d 50 ff             	lea    -0x1(%eax),%edx
81000384:	a1 18 92 00 81       	mov    0x81009218,%eax
81000389:	39 c2                	cmp    %eax,%edx
8100038b:	7d 1a                	jge    810003a7 <do_less+0xed>
        fprintf(stderr,"no file\n");
8100038d:	a1 44 88 00 81       	mov    0x81008844,%eax
81000392:	8b 40 0c             	mov    0xc(%eax),%eax
81000395:	50                   	push   %eax
81000396:	6a 08                	push   $0x8
81000398:	6a 01                	push   $0x1
8100039a:	68 b2 7d 00 81       	push   $0x81007db2
8100039f:	e8 4d 2b 00 00       	call   81002ef1 <fwrite>
810003a4:	83 c4 10             	add    $0x10,%esp
    }

    FILE* file=fopen(argv[optind],"r");
810003a7:	a1 18 92 00 81       	mov    0x81009218,%eax
810003ac:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810003b3:	8b 45 0c             	mov    0xc(%ebp),%eax
810003b6:	01 d0                	add    %edx,%eax
810003b8:	8b 00                	mov    (%eax),%eax
810003ba:	83 ec 08             	sub    $0x8,%esp
810003bd:	68 bb 7d 00 81       	push   $0x81007dbb
810003c2:	50                   	push   %eax
810003c3:	e8 a0 16 00 00       	call   81001a68 <fopen>
810003c8:	83 c4 10             	add    $0x10,%esp
810003cb:	89 45 ec             	mov    %eax,-0x14(%ebp)

    if(file == NULL){
810003ce:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810003d2:	75 41                	jne    81000415 <do_less+0x15b>
        fprintf(stderr,"open file %s failed\n",argv[optind]);
810003d4:	a1 18 92 00 81       	mov    0x81009218,%eax
810003d9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810003e0:	8b 45 0c             	mov    0xc(%ebp),%eax
810003e3:	01 d0                	add    %edx,%eax
810003e5:	8b 10                	mov    (%eax),%edx
810003e7:	a1 44 88 00 81       	mov    0x81008844,%eax
810003ec:	8b 40 0c             	mov    0xc(%eax),%eax
810003ef:	83 ec 04             	sub    $0x4,%esp
810003f2:	52                   	push   %edx
810003f3:	68 bd 7d 00 81       	push   $0x81007dbd
810003f8:	50                   	push   %eax
810003f9:	e8 b2 16 00 00       	call   81001ab0 <fiprintf>
810003fe:	83 c4 10             	add    $0x10,%esp
        optind =1;
81000401:	c7 05 18 92 00 81 01 	movl   $0x1,0x81009218
81000408:	00 00 00 
        return -1;
8100040b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000410:	e9 2e 01 00 00       	jmp    81000543 <do_less+0x289>
    }

    char* buf=(char*)malloc(256);
81000415:	83 ec 0c             	sub    $0xc,%esp
81000418:	68 00 01 00 00       	push   $0x100
8100041d:	e8 62 3a 00 00       	call   81003e84 <malloc>
81000422:	83 c4 10             	add    $0x10,%esp
81000425:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if(line_mode == 0){
81000428:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100042c:	75 38                	jne    81000466 <do_less+0x1ac>
        while(fgets(buf,256,file) != NULL){
8100042e:	eb 17                	jmp    81000447 <do_less+0x18d>
            fputs(buf,stdout);
81000430:	a1 44 88 00 81       	mov    0x81008844,%eax
81000435:	8b 40 08             	mov    0x8(%eax),%eax
81000438:	83 ec 08             	sub    $0x8,%esp
8100043b:	50                   	push   %eax
8100043c:	ff 75 e8             	pushl  -0x18(%ebp)
8100043f:	e8 3e 17 00 00       	call   81001b82 <fputs>
81000444:	83 c4 10             	add    $0x10,%esp
        while(fgets(buf,256,file) != NULL){
81000447:	83 ec 04             	sub    $0x4,%esp
8100044a:	ff 75 ec             	pushl  -0x14(%ebp)
8100044d:	68 00 01 00 00       	push   $0x100
81000452:	ff 75 e8             	pushl  -0x18(%ebp)
81000455:	e8 18 11 00 00       	call   81001572 <fgets>
8100045a:	83 c4 10             	add    $0x10,%esp
8100045d:	85 c0                	test   %eax,%eax
8100045f:	75 cf                	jne    81000430 <do_less+0x176>
81000461:	e9 b2 00 00 00       	jmp    81000518 <do_less+0x25e>
        }
    }
    else{
        // 设置stdin为无缓冲模式
        // 这样可以实时读取用户输入的字符
        setvbuf(stdin,NULL,_IONBF,0);
81000466:	a1 44 88 00 81       	mov    0x81008844,%eax
8100046b:	8b 40 04             	mov    0x4(%eax),%eax
8100046e:	6a 00                	push   $0x0
81000470:	6a 02                	push   $0x2
81000472:	6a 00                	push   $0x0
81000474:	50                   	push   %eax
81000475:	e8 9f 61 00 00       	call   81006619 <setvbuf>
8100047a:	83 c4 10             	add    $0x10,%esp

         // 关闭回显,0x1表示关闭回显TTY_CMD_ECHO这里有些问题就用0x1代替
        ioctl(0,0x1,0,0);
8100047d:	6a 00                	push   $0x0
8100047f:	6a 00                	push   $0x0
81000481:	6a 01                	push   $0x1
81000483:	6a 00                	push   $0x0
81000485:	e8 f9 09 00 00       	call   81000e83 <ioctl>
8100048a:	83 c4 10             	add    $0x10,%esp
        while(1){
            char *b=fgets(buf,256,file);
8100048d:	83 ec 04             	sub    $0x4,%esp
81000490:	ff 75 ec             	pushl  -0x14(%ebp)
81000493:	68 00 01 00 00       	push   $0x100
81000498:	ff 75 e8             	pushl  -0x18(%ebp)
8100049b:	e8 d2 10 00 00       	call   81001572 <fgets>
810004a0:	83 c4 10             	add    $0x10,%esp
810004a3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
            if(b == NULL){
810004a6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810004aa:	74 3e                	je     810004ea <do_less+0x230>
                break;
            }

            fputs(buf,stdout);
810004ac:	a1 44 88 00 81       	mov    0x81008844,%eax
810004b1:	8b 40 08             	mov    0x8(%eax),%eax
810004b4:	83 ec 08             	sub    $0x8,%esp
810004b7:	50                   	push   %eax
810004b8:	ff 75 e8             	pushl  -0x18(%ebp)
810004bb:	e8 c2 16 00 00       	call   81001b82 <fputs>
810004c0:	83 c4 10             	add    $0x10,%esp

            int ch;
            while((ch=fgetc(stdin))!='n'){
810004c3:	eb 06                	jmp    810004cb <do_less+0x211>
                if(ch == 'q'){
810004c5:	83 7d e0 71          	cmpl   $0x71,-0x20(%ebp)
810004c9:	74 22                	je     810004ed <do_less+0x233>
            while((ch=fgetc(stdin))!='n'){
810004cb:	a1 44 88 00 81       	mov    0x81008844,%eax
810004d0:	8b 40 04             	mov    0x4(%eax),%eax
810004d3:	83 ec 0c             	sub    $0xc,%esp
810004d6:	50                   	push   %eax
810004d7:	e8 bf 0e 00 00       	call   8100139b <fgetc>
810004dc:	83 c4 10             	add    $0x10,%esp
810004df:	89 45 e0             	mov    %eax,-0x20(%ebp)
810004e2:	83 7d e0 6e          	cmpl   $0x6e,-0x20(%ebp)
810004e6:	75 dd                	jne    810004c5 <do_less+0x20b>
        while(1){
810004e8:	eb a3                	jmp    8100048d <do_less+0x1d3>
                break;
810004ea:	90                   	nop
810004eb:	eb 01                	jmp    810004ee <do_less+0x234>
                    goto less_quit;
810004ed:	90                   	nop
                }
            }
        }
less_quit:
        setvbuf(stdin,NULL,_IOFBF,BUFSIZ); // 恢复stdin的缓冲模式
810004ee:	a1 44 88 00 81       	mov    0x81008844,%eax
810004f3:	8b 40 04             	mov    0x4(%eax),%eax
810004f6:	68 00 04 00 00       	push   $0x400
810004fb:	6a 00                	push   $0x0
810004fd:	6a 00                	push   $0x0
810004ff:	50                   	push   %eax
81000500:	e8 14 61 00 00       	call   81006619 <setvbuf>
81000505:	83 c4 10             	add    $0x10,%esp
        ioctl(0,0x1,1,0);
81000508:	6a 00                	push   $0x0
8100050a:	6a 01                	push   $0x1
8100050c:	6a 01                	push   $0x1
8100050e:	6a 00                	push   $0x0
81000510:	e8 6e 09 00 00       	call   81000e83 <ioctl>
81000515:	83 c4 10             	add    $0x10,%esp
    }

    free(buf);
81000518:	83 ec 0c             	sub    $0xc,%esp
8100051b:	ff 75 e8             	pushl  -0x18(%ebp)
8100051e:	e8 7d 39 00 00       	call   81003ea0 <free>
81000523:	83 c4 10             	add    $0x10,%esp

    fclose(file);
81000526:	83 ec 0c             	sub    $0xc,%esp
81000529:	ff 75 ec             	pushl  -0x14(%ebp)
8100052c:	e8 25 0b 00 00       	call   81001056 <fclose>
81000531:	83 c4 10             	add    $0x10,%esp
    optind = 1;
81000534:	c7 05 18 92 00 81 01 	movl   $0x1,0x81009218
8100053b:	00 00 00 
    return 0;
8100053e:	b8 00 00 00 00       	mov    $0x0,%eax

}
81000543:	c9                   	leave  
81000544:	c3                   	ret    

81000545 <find_exec_path>:
/**
 * @brief 查找可执行文件的路径
 * @param filename 文件名
 * @return 返回文件的路径，如果没有找到则返回NULL
 */
static const char* find_exec_path(const char* filename){
81000545:	55                   	push   %ebp
81000546:	89 e5                	mov    %esp,%ebp
81000548:	83 ec 18             	sub    $0x18,%esp
    int fd=open(filename,0);
8100054b:	83 ec 08             	sub    $0x8,%esp
8100054e:	6a 00                	push   $0x0
81000550:	ff 75 08             	pushl  0x8(%ebp)
81000553:	e8 a0 06 00 00       	call   81000bf8 <open>
81000558:	83 c4 10             	add    $0x10,%esp
8100055b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if(fd<0){
8100055e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000562:	79 07                	jns    8100056b <find_exec_path+0x26>
        return (const char*)0;
81000564:	b8 00 00 00 00       	mov    $0x0,%eax
81000569:	eb 11                	jmp    8100057c <find_exec_path+0x37>
    }

    close(fd);
8100056b:	83 ec 0c             	sub    $0xc,%esp
8100056e:	ff 75 f4             	pushl  -0xc(%ebp)
81000571:	e8 03 07 00 00       	call   81000c79 <close>
81000576:	83 c4 10             	add    $0x10,%esp
    return filename;
81000579:	8b 45 08             	mov    0x8(%ebp),%eax
}
8100057c:	c9                   	leave  
8100057d:	c3                   	ret    

8100057e <do_cp>:
/**
 * @brief 复制文件的函数
 * @param argc 参数数量
 * @param argv 参数的字符串
 */
static int do_cp(int argc,char** argv){
8100057e:	55                   	push   %ebp
8100057f:	89 e5                	mov    %esp,%ebp
81000581:	83 ec 18             	sub    $0x18,%esp
    if(argc < 3){
81000584:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)
81000588:	7f 24                	jg     810005ae <do_cp+0x30>
        fprintf(stderr,"no [from] or [to] file\n");
8100058a:	a1 44 88 00 81       	mov    0x81008844,%eax
8100058f:	8b 40 0c             	mov    0xc(%eax),%eax
81000592:	50                   	push   %eax
81000593:	6a 17                	push   $0x17
81000595:	6a 01                	push   $0x1
81000597:	68 d2 7d 00 81       	push   $0x81007dd2
8100059c:	e8 50 29 00 00       	call   81002ef1 <fwrite>
810005a1:	83 c4 10             	add    $0x10,%esp
        return -1;
810005a4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810005a9:	e9 e9 00 00 00       	jmp    81000697 <do_cp+0x119>
    }

    FILE *from,*to;

    from=fopen(argv[1],"rb");
810005ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810005b1:	83 c0 04             	add    $0x4,%eax
810005b4:	8b 00                	mov    (%eax),%eax
810005b6:	83 ec 08             	sub    $0x8,%esp
810005b9:	68 ea 7d 00 81       	push   $0x81007dea
810005be:	50                   	push   %eax
810005bf:	e8 a4 14 00 00       	call   81001a68 <fopen>
810005c4:	83 c4 10             	add    $0x10,%esp
810005c7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    to=fopen(argv[2],"wb");
810005ca:	8b 45 0c             	mov    0xc(%ebp),%eax
810005cd:	83 c0 08             	add    $0x8,%eax
810005d0:	8b 00                	mov    (%eax),%eax
810005d2:	83 ec 08             	sub    $0x8,%esp
810005d5:	68 ed 7d 00 81       	push   $0x81007ded
810005da:	50                   	push   %eax
810005db:	e8 88 14 00 00       	call   81001a68 <fopen>
810005e0:	83 c4 10             	add    $0x10,%esp
810005e3:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if(!from || !to){
810005e6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810005ea:	74 06                	je     810005f2 <do_cp+0x74>
810005ec:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810005f0:	75 1c                	jne    8100060e <do_cp+0x90>
        fprintf(stderr,"open file failed\n");
810005f2:	a1 44 88 00 81       	mov    0x81008844,%eax
810005f7:	8b 40 0c             	mov    0xc(%eax),%eax
810005fa:	50                   	push   %eax
810005fb:	6a 11                	push   $0x11
810005fd:	6a 01                	push   $0x1
810005ff:	68 f0 7d 00 81       	push   $0x81007df0
81000604:	e8 e8 28 00 00       	call   81002ef1 <fwrite>
81000609:	83 c4 10             	add    $0x10,%esp
        goto cp_failed;
8100060c:	eb 5c                	jmp    8100066a <do_cp+0xec>
    }

    char *buf=(char*)malloc(256);
8100060e:	83 ec 0c             	sub    $0xc,%esp
81000611:	68 00 01 00 00       	push   $0x100
81000616:	e8 69 38 00 00       	call   81003e84 <malloc>
8100061b:	83 c4 10             	add    $0x10,%esp
8100061e:	89 45 ec             	mov    %eax,-0x14(%ebp)
    int size=0;
81000621:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
    while((size=fread(buf,1,256,from))>0){
81000628:	eb 14                	jmp    8100063e <do_cp+0xc0>
        fwrite(buf,1,size,to);
8100062a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100062d:	ff 75 f0             	pushl  -0x10(%ebp)
81000630:	50                   	push   %eax
81000631:	6a 01                	push   $0x1
81000633:	ff 75 ec             	pushl  -0x14(%ebp)
81000636:	e8 b6 28 00 00       	call   81002ef1 <fwrite>
8100063b:	83 c4 10             	add    $0x10,%esp
    while((size=fread(buf,1,256,from))>0){
8100063e:	ff 75 f4             	pushl  -0xc(%ebp)
81000641:	68 00 01 00 00       	push   $0x100
81000646:	6a 01                	push   $0x1
81000648:	ff 75 ec             	pushl  -0x14(%ebp)
8100064b:	e8 c6 17 00 00       	call   81001e16 <fread>
81000650:	83 c4 10             	add    $0x10,%esp
81000653:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000656:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100065a:	7f ce                	jg     8100062a <do_cp+0xac>
    }

    free(buf);
8100065c:	83 ec 0c             	sub    $0xc,%esp
8100065f:	ff 75 ec             	pushl  -0x14(%ebp)
81000662:	e8 39 38 00 00       	call   81003ea0 <free>
81000667:	83 c4 10             	add    $0x10,%esp

cp_failed:
    if(from){
8100066a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100066e:	74 0e                	je     8100067e <do_cp+0x100>
        fclose(from);
81000670:	83 ec 0c             	sub    $0xc,%esp
81000673:	ff 75 f4             	pushl  -0xc(%ebp)
81000676:	e8 db 09 00 00       	call   81001056 <fclose>
8100067b:	83 c4 10             	add    $0x10,%esp
    }

    if(to){
8100067e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000682:	74 0e                	je     81000692 <do_cp+0x114>
        fclose(to);
81000684:	83 ec 0c             	sub    $0xc,%esp
81000687:	ff 75 f0             	pushl  -0x10(%ebp)
8100068a:	e8 c7 09 00 00       	call   81001056 <fclose>
8100068f:	83 c4 10             	add    $0x10,%esp
    }

    return 0;
81000692:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000697:	c9                   	leave  
81000698:	c3                   	ret    

81000699 <do_rm>:

static int do_rm(int argc,char** argv){
81000699:	55                   	push   %ebp
8100069a:	89 e5                	mov    %esp,%ebp
8100069c:	83 ec 18             	sub    $0x18,%esp
    if(argc < 2){
8100069f:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
810006a3:	7f 21                	jg     810006c6 <do_rm+0x2d>
        fprintf(stderr,"no file\n");
810006a5:	a1 44 88 00 81       	mov    0x81008844,%eax
810006aa:	8b 40 0c             	mov    0xc(%eax),%eax
810006ad:	50                   	push   %eax
810006ae:	6a 08                	push   $0x8
810006b0:	6a 01                	push   $0x1
810006b2:	68 b2 7d 00 81       	push   $0x81007db2
810006b7:	e8 35 28 00 00       	call   81002ef1 <fwrite>
810006bc:	83 c4 10             	add    $0x10,%esp
        return -1;
810006bf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810006c4:	eb 49                	jmp    8100070f <do_rm+0x76>
    }

    int err = unlink(argv[1]);
810006c6:	8b 45 0c             	mov    0xc(%ebp),%eax
810006c9:	83 c0 04             	add    $0x4,%eax
810006cc:	8b 00                	mov    (%eax),%eax
810006ce:	83 ec 0c             	sub    $0xc,%esp
810006d1:	50                   	push   %eax
810006d2:	e8 df 07 00 00       	call   81000eb6 <unlink>
810006d7:	83 c4 10             	add    $0x10,%esp
810006da:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if(err < 0){
810006dd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810006e1:	79 27                	jns    8100070a <do_rm+0x71>
        fprintf(stderr,"remove file %s failed\n",argv[1]);
810006e3:	8b 45 0c             	mov    0xc(%ebp),%eax
810006e6:	83 c0 04             	add    $0x4,%eax
810006e9:	8b 10                	mov    (%eax),%edx
810006eb:	a1 44 88 00 81       	mov    0x81008844,%eax
810006f0:	8b 40 0c             	mov    0xc(%eax),%eax
810006f3:	83 ec 04             	sub    $0x4,%esp
810006f6:	52                   	push   %edx
810006f7:	68 02 7e 00 81       	push   $0x81007e02
810006fc:	50                   	push   %eax
810006fd:	e8 ae 13 00 00       	call   81001ab0 <fiprintf>
81000702:	83 c4 10             	add    $0x10,%esp
        return err;
81000705:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000708:	eb 05                	jmp    8100070f <do_rm+0x76>
    }

    return 0;
8100070a:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100070f:	c9                   	leave  
81000710:	c3                   	ret    

81000711 <cli_init>:
 * @brief 命令行的初始化函数
 * @param prompt 初始化cli_t结构体的prompt成员变量
 * @param cli_cmd_t 命令列表首地址
 * @param size 命令列表包含元素个数
 */
static void cli_init(const char* prompt,const cli_cmd_t* cmd_list,int size){
81000711:	55                   	push   %ebp
81000712:	89 e5                	mov    %esp,%ebp
81000714:	83 ec 08             	sub    $0x8,%esp
    cli.prompt=prompt;
81000717:	8b 45 08             	mov    0x8(%ebp),%eax
8100071a:	a3 08 92 00 81       	mov    %eax,0x81009208
    memset(cli.curr_input,0,CLI_INPUT_SIZE);
8100071f:	83 ec 04             	sub    $0x4,%esp
81000722:	68 00 04 00 00       	push   $0x400
81000727:	6a 00                	push   $0x0
81000729:	68 00 8e 00 81       	push   $0x81008e00
8100072e:	e8 0a 44 00 00       	call   81004b3d <memset>
81000733:	83 c4 10             	add    $0x10,%esp
    cli.cmd_start=cmd_list;
81000736:	8b 45 0c             	mov    0xc(%ebp),%eax
81000739:	a3 00 92 00 81       	mov    %eax,0x81009200
    cli.cmd_end=cmd_list+size;
8100073e:	8b 55 10             	mov    0x10(%ebp),%edx
81000741:	89 d0                	mov    %edx,%eax
81000743:	01 c0                	add    %eax,%eax
81000745:	01 d0                	add    %edx,%eax
81000747:	c1 e0 02             	shl    $0x2,%eax
8100074a:	89 c2                	mov    %eax,%edx
8100074c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100074f:	01 d0                	add    %edx,%eax
81000751:	a3 04 92 00 81       	mov    %eax,0x81009204
}
81000756:	90                   	nop
81000757:	c9                   	leave  
81000758:	c3                   	ret    

81000759 <find_builtin>:
 * @brief 查找内置命令
 * @param name 命令名称
 * @return 返回命令结构体指针
 * @note 如果没有找到命令，返回0
 */
static const cli_cmd_t* find_builtin(const char* name){
81000759:	55                   	push   %ebp
8100075a:	89 e5                	mov    %esp,%ebp
8100075c:	83 ec 18             	sub    $0x18,%esp
    for(const cli_cmd_t* cmd=cli.cmd_start;cmd<cli.cmd_end;cmd++){
8100075f:	a1 00 92 00 81       	mov    0x81009200,%eax
81000764:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000767:	eb 23                	jmp    8100078c <find_builtin+0x33>
        if(strcmp(name,cmd->name)!=0){
81000769:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100076c:	8b 00                	mov    (%eax),%eax
8100076e:	83 ec 08             	sub    $0x8,%esp
81000771:	50                   	push   %eax
81000772:	ff 75 08             	pushl  0x8(%ebp)
81000775:	e8 c2 62 00 00       	call   81006a3c <strcmp>
8100077a:	83 c4 10             	add    $0x10,%esp
8100077d:	85 c0                	test   %eax,%eax
8100077f:	74 06                	je     81000787 <find_builtin+0x2e>
    for(const cli_cmd_t* cmd=cli.cmd_start;cmd<cli.cmd_end;cmd++){
81000781:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
81000785:	eb 05                	jmp    8100078c <find_builtin+0x33>
            continue;
        }

        return cmd;
81000787:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100078a:	eb 0f                	jmp    8100079b <find_builtin+0x42>
    for(const cli_cmd_t* cmd=cli.cmd_start;cmd<cli.cmd_end;cmd++){
8100078c:	a1 04 92 00 81       	mov    0x81009204,%eax
81000791:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000794:	72 d3                	jb     81000769 <find_builtin+0x10>
    }

    return 0;
81000796:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100079b:	c9                   	leave  
8100079c:	c3                   	ret    

8100079d <run_builtin>:
 * @brief 执行内置命令
 * @param cmd 命令结构体
 * @param argc 参数数量
 * @param argv 参数列表 
 */
static void run_builtin(const cli_cmd_t* cmd,int argc,char** argv){
8100079d:	55                   	push   %ebp
8100079e:	89 e5                	mov    %esp,%ebp
810007a0:	83 ec 18             	sub    $0x18,%esp
    int ret=cmd->do_func(argc,argv);
810007a3:	8b 45 08             	mov    0x8(%ebp),%eax
810007a6:	8b 40 08             	mov    0x8(%eax),%eax
810007a9:	83 ec 08             	sub    $0x8,%esp
810007ac:	ff 75 10             	pushl  0x10(%ebp)
810007af:	ff 75 0c             	pushl  0xc(%ebp)
810007b2:	ff d0                	call   *%eax
810007b4:	83 c4 10             	add    $0x10,%esp
810007b7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if(ret<0){
810007ba:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810007be:	79 1c                	jns    810007dc <run_builtin+0x3f>
        fprintf(stderr,ESC_COLOR_ERROR"error: %d\n"ESC_COLOR_DEFAULT,ret);
810007c0:	a1 44 88 00 81       	mov    0x81008844,%eax
810007c5:	8b 40 0c             	mov    0xc(%eax),%eax
810007c8:	83 ec 04             	sub    $0x4,%esp
810007cb:	ff 75 f4             	pushl  -0xc(%ebp)
810007ce:	68 80 7f 00 81       	push   $0x81007f80
810007d3:	50                   	push   %eax
810007d4:	e8 d7 12 00 00       	call   81001ab0 <fiprintf>
810007d9:	83 c4 10             	add    $0x10,%esp
    }
}
810007dc:	90                   	nop
810007dd:	c9                   	leave  
810007de:	c3                   	ret    

810007df <run_exec_file>:
 * @brief 执行外部命令
 * @param path 要执行的命令的文件路径
 * @param argc 参数数量
 * @param argv 参数列表 
 */
static void run_exec_file(const char* path,int argc,char** argv){
810007df:	55                   	push   %ebp
810007e0:	89 e5                	mov    %esp,%ebp
810007e2:	83 ec 18             	sub    $0x18,%esp
    int pid=fork();
810007e5:	e8 aa 03 00 00       	call   81000b94 <fork>
810007ea:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if(pid<0){
810007ed:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810007f1:	79 21                	jns    81000814 <run_exec_file+0x35>
        fprintf(stderr,ESC_COLOR_ERROR"fork failed %s\n"ESC_COLOR_DEFAULT,path);
810007f3:	a1 44 88 00 81       	mov    0x81008844,%eax
810007f8:	8b 40 0c             	mov    0xc(%eax),%eax
810007fb:	83 ec 04             	sub    $0x4,%esp
810007fe:	ff 75 08             	pushl  0x8(%ebp)
81000801:	68 95 7f 00 81       	push   $0x81007f95
81000806:	50                   	push   %eax
81000807:	e8 a4 12 00 00       	call   81001ab0 <fiprintf>
8100080c:	83 c4 10             	add    $0x10,%esp
        return;
8100080f:	e9 84 00 00 00       	jmp    81000898 <run_exec_file+0xb9>
    }
    else if(pid==0){
81000814:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000818:	75 42                	jne    8100085c <run_exec_file+0x7d>
        int err=execve(path,argv,(char * const *)0);
8100081a:	83 ec 04             	sub    $0x4,%esp
8100081d:	6a 00                	push   $0x0
8100081f:	ff 75 10             	pushl  0x10(%ebp)
81000822:	ff 75 08             	pushl  0x8(%ebp)
81000825:	e8 85 03 00 00       	call   81000baf <execve>
8100082a:	83 c4 10             	add    $0x10,%esp
8100082d:	89 45 ec             	mov    %eax,-0x14(%ebp)
        if(err<0){
81000830:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000834:	79 1c                	jns    81000852 <run_exec_file+0x73>
            fprintf(stderr,"exec failed %s",path);
81000836:	a1 44 88 00 81       	mov    0x81008844,%eax
8100083b:	8b 40 0c             	mov    0xc(%eax),%eax
8100083e:	83 ec 04             	sub    $0x4,%esp
81000841:	ff 75 08             	pushl  0x8(%ebp)
81000844:	68 af 7f 00 81       	push   $0x81007faf
81000849:	50                   	push   %eax
8100084a:	e8 61 12 00 00       	call   81001ab0 <fiprintf>
8100084f:	83 c4 10             	add    $0x10,%esp
        }
        exit(-1);
81000852:	83 ec 0c             	sub    $0xc,%esp
81000855:	6a ff                	push   $0xffffffff
81000857:	e8 af 06 00 00       	call   81000f0b <exit>
    }
    else{
        int status=0;
8100085c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
        int pid=wait(&status);
81000863:	83 ec 0c             	sub    $0xc,%esp
81000866:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000869:	50                   	push   %eax
8100086a:	e8 04 05 00 00       	call   81000d73 <wait>
8100086f:	83 c4 10             	add    $0x10,%esp
81000872:	89 45 f0             	mov    %eax,-0x10(%ebp)
        fprintf(stderr,"cmd %s result: %d, pid=%d\n",path,pid,status);
81000875:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000878:	a1 44 88 00 81       	mov    0x81008844,%eax
8100087d:	8b 40 0c             	mov    0xc(%eax),%eax
81000880:	83 ec 0c             	sub    $0xc,%esp
81000883:	52                   	push   %edx
81000884:	ff 75 f0             	pushl  -0x10(%ebp)
81000887:	ff 75 08             	pushl  0x8(%ebp)
8100088a:	68 be 7f 00 81       	push   $0x81007fbe
8100088f:	50                   	push   %eax
81000890:	e8 1b 12 00 00       	call   81001ab0 <fiprintf>
81000895:	83 c4 20             	add    $0x20,%esp
    }
}   
81000898:	c9                   	leave  
81000899:	c3                   	ret    

8100089a <show_prompt>:

/**
 * @brief 显示命令行提示词
 */
static void show_prompt(void){
8100089a:	55                   	push   %ebp
8100089b:	89 e5                	mov    %esp,%ebp
8100089d:	83 ec 08             	sub    $0x8,%esp
    printf("%s",cli.prompt);
810008a0:	a1 08 92 00 81       	mov    0x81009208,%eax
810008a5:	83 ec 08             	sub    $0x8,%esp
810008a8:	50                   	push   %eax
810008a9:	68 f2 7c 00 81       	push   $0x81007cf2
810008ae:	e8 e0 4e 00 00       	call   81005793 <iprintf>
810008b3:	83 c4 10             	add    $0x10,%esp

    // 清空缓存
    fflush(stdout);
810008b6:	a1 44 88 00 81       	mov    0x81008844,%eax
810008bb:	8b 40 08             	mov    0x8(%eax),%eax
810008be:	83 ec 0c             	sub    $0xc,%esp
810008c1:	50                   	push   %eax
810008c2:	e8 2a 0a 00 00       	call   810012f1 <fflush>
810008c7:	83 c4 10             	add    $0x10,%esp
}
810008ca:	90                   	nop
810008cb:	c9                   	leave  
810008cc:	c3                   	ret    

810008cd <main>:

int main(int argc,char** argv){
810008cd:	8d 4c 24 04          	lea    0x4(%esp),%ecx
810008d1:	83 e4 f0             	and    $0xfffffff0,%esp
810008d4:	ff 71 fc             	pushl  -0x4(%ecx)
810008d7:	55                   	push   %ebp
810008d8:	89 e5                	mov    %esp,%ebp
810008da:	51                   	push   %ecx
810008db:	83 ec 54             	sub    $0x54,%esp
810008de:	89 c8                	mov    %ecx,%eax

    // 打开tty0设备
    open(argv[0],O_RDWR);
810008e0:	8b 40 04             	mov    0x4(%eax),%eax
810008e3:	8b 00                	mov    (%eax),%eax
810008e5:	83 ec 08             	sub    $0x8,%esp
810008e8:	6a 02                	push   $0x2
810008ea:	50                   	push   %eax
810008eb:	e8 08 03 00 00       	call   81000bf8 <open>
810008f0:	83 c4 10             	add    $0x10,%esp
    dup(0);
810008f3:	83 ec 0c             	sub    $0xc,%esp
810008f6:	6a 00                	push   $0x0
810008f8:	e8 33 04 00 00       	call   81000d30 <dup>
810008fd:	83 c4 10             	add    $0x10,%esp
    dup(0);
81000900:	83 ec 0c             	sub    $0xc,%esp
81000903:	6a 00                	push   $0x0
81000905:	e8 26 04 00 00       	call   81000d30 <dup>
8100090a:	83 c4 10             	add    $0x10,%esp

    cli_init(prompt,cmd_list,sizeof(cmd_list)/sizeof(cmd_list[0]));
8100090d:	a1 00 84 00 81       	mov    0x81008400,%eax
81000912:	83 ec 04             	sub    $0x4,%esp
81000915:	6a 08                	push   $0x8
81000917:	68 20 7f 00 81       	push   $0x81007f20
8100091c:	50                   	push   %eax
8100091d:	e8 ef fd ff ff       	call   81000711 <cli_init>
81000922:	83 c4 10             	add    $0x10,%esp

    for(;;){

        show_prompt();
81000925:	e8 70 ff ff ff       	call   8100089a <show_prompt>
        char* str=fgets(cli.curr_input,CLI_INPUT_SIZE,stdin);
8100092a:	a1 44 88 00 81       	mov    0x81008844,%eax
8100092f:	8b 40 04             	mov    0x4(%eax),%eax
81000932:	83 ec 04             	sub    $0x4,%esp
81000935:	50                   	push   %eax
81000936:	68 00 04 00 00       	push   $0x400
8100093b:	68 00 8e 00 81       	push   $0x81008e00
81000940:	e8 2d 0c 00 00       	call   81001572 <fgets>
81000945:	83 c4 10             	add    $0x10,%esp
81000948:	89 45 ec             	mov    %eax,-0x14(%ebp)
        if(!str){
8100094b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100094f:	0f 84 2f 01 00 00    	je     81000a84 <main+0x1b7>
            continue;
        }

        // 去掉换行符
        char* cr=strchr(cli.curr_input,'\n');
81000955:	83 ec 08             	sub    $0x8,%esp
81000958:	6a 0a                	push   $0xa
8100095a:	68 00 8e 00 81       	push   $0x81008e00
8100095f:	e8 dc 5f 00 00       	call   81006940 <strchr>
81000964:	83 c4 10             	add    $0x10,%esp
81000967:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if(cr){
8100096a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100096e:	74 06                	je     81000976 <main+0xa9>
            *cr=0;
81000970:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000973:	c6 00 00             	movb   $0x0,(%eax)
        }

        // 去掉回车符
        cr=strchr(cli.curr_input,'\r');
81000976:	83 ec 08             	sub    $0x8,%esp
81000979:	6a 0d                	push   $0xd
8100097b:	68 00 8e 00 81       	push   $0x81008e00
81000980:	e8 bb 5f 00 00       	call   81006940 <strchr>
81000985:	83 c4 10             	add    $0x10,%esp
81000988:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if(cr){
8100098b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100098f:	74 06                	je     81000997 <main+0xca>
            *cr=0;
81000991:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000994:	c6 00 00             	movb   $0x0,(%eax)
        }


        int argc=0;
81000997:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        char* argv[CLI_MAX_ARG_COUNT];
        memset(argv,0,sizeof(argv));
8100099e:	83 ec 04             	sub    $0x4,%esp
810009a1:	6a 28                	push   $0x28
810009a3:	6a 00                	push   $0x0
810009a5:	8d 45 b4             	lea    -0x4c(%ebp),%eax
810009a8:	50                   	push   %eax
810009a9:	e8 8f 41 00 00       	call   81004b3d <memset>
810009ae:	83 c4 10             	add    $0x10,%esp

        // 分割命令行输入的字符串,解析出命令和参数
        const char* space=" ";
810009b1:	c7 45 e4 d9 7f 00 81 	movl   $0x81007fd9,-0x1c(%ebp)
        char* token=strtok(cli.curr_input,space);
810009b8:	83 ec 08             	sub    $0x8,%esp
810009bb:	ff 75 e4             	pushl  -0x1c(%ebp)
810009be:	68 00 8e 00 81       	push   $0x81008e00
810009c3:	e8 a1 61 00 00       	call   81006b69 <strtok>
810009c8:	83 c4 10             	add    $0x10,%esp
810009cb:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while(token){
810009ce:	eb 23                	jmp    810009f3 <main+0x126>
            argv[argc++]=token;
810009d0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810009d3:	8d 50 01             	lea    0x1(%eax),%edx
810009d6:	89 55 f4             	mov    %edx,-0xc(%ebp)
810009d9:	8b 55 f0             	mov    -0x10(%ebp),%edx
810009dc:	89 54 85 b4          	mov    %edx,-0x4c(%ebp,%eax,4)
            token=strtok(NULL,space);
810009e0:	83 ec 08             	sub    $0x8,%esp
810009e3:	ff 75 e4             	pushl  -0x1c(%ebp)
810009e6:	6a 00                	push   $0x0
810009e8:	e8 7c 61 00 00       	call   81006b69 <strtok>
810009ed:	83 c4 10             	add    $0x10,%esp
810009f0:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while(token){
810009f3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810009f7:	75 d7                	jne    810009d0 <main+0x103>
        }

        if(argc==0){
810009f9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810009fd:	0f 84 87 00 00 00    	je     81000a8a <main+0x1bd>
            continue;
        }

        const cli_cmd_t* cmd=find_builtin(argv[0]);
81000a03:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81000a06:	83 ec 0c             	sub    $0xc,%esp
81000a09:	50                   	push   %eax
81000a0a:	e8 4a fd ff ff       	call   81000759 <find_builtin>
81000a0f:	83 c4 10             	add    $0x10,%esp
81000a12:	89 45 e0             	mov    %eax,-0x20(%ebp)
        if(cmd){
81000a15:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000a19:	74 17                	je     81000a32 <main+0x165>
            run_builtin(cmd,argc,argv);
81000a1b:	83 ec 04             	sub    $0x4,%esp
81000a1e:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000a21:	50                   	push   %eax
81000a22:	ff 75 f4             	pushl  -0xc(%ebp)
81000a25:	ff 75 e0             	pushl  -0x20(%ebp)
81000a28:	e8 70 fd ff ff       	call   8100079d <run_builtin>
81000a2d:	83 c4 10             	add    $0x10,%esp
            continue; 
81000a30:	eb 59                	jmp    81000a8b <main+0x1be>
        }

        const char *path=find_exec_path(argv[0]);
81000a32:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81000a35:	83 ec 0c             	sub    $0xc,%esp
81000a38:	50                   	push   %eax
81000a39:	e8 07 fb ff ff       	call   81000545 <find_exec_path>
81000a3e:	83 c4 10             	add    $0x10,%esp
81000a41:	89 45 dc             	mov    %eax,-0x24(%ebp)
        if(path){
81000a44:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000a48:	74 17                	je     81000a61 <main+0x194>
            run_exec_file(path,argc,argv);
81000a4a:	83 ec 04             	sub    $0x4,%esp
81000a4d:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000a50:	50                   	push   %eax
81000a51:	ff 75 f4             	pushl  -0xc(%ebp)
81000a54:	ff 75 dc             	pushl  -0x24(%ebp)
81000a57:	e8 83 fd ff ff       	call   810007df <run_exec_file>
81000a5c:	83 c4 10             	add    $0x10,%esp
            continue;
81000a5f:	eb 2a                	jmp    81000a8b <main+0x1be>
        }

        fprintf(stderr,ESC_COLOR_ERROR"Unknown command: %s\n"ESC_COLOR_DEFAULT,cli.curr_input);
81000a61:	a1 44 88 00 81       	mov    0x81008844,%eax
81000a66:	8b 40 0c             	mov    0xc(%eax),%eax
81000a69:	83 ec 04             	sub    $0x4,%esp
81000a6c:	68 00 8e 00 81       	push   $0x81008e00
81000a71:	68 dc 7f 00 81       	push   $0x81007fdc
81000a76:	50                   	push   %eax
81000a77:	e8 34 10 00 00       	call   81001ab0 <fiprintf>
81000a7c:	83 c4 10             	add    $0x10,%esp
81000a7f:	e9 a1 fe ff ff       	jmp    81000925 <main+0x58>
            continue;
81000a84:	90                   	nop
81000a85:	e9 9b fe ff ff       	jmp    81000925 <main+0x58>
            continue;
81000a8a:	90                   	nop
    for(;;){
81000a8b:	e9 95 fe ff ff       	jmp    81000925 <main+0x58>

81000a90 <_start>:
    .text
    .global _start
    .extern cstart
_start:
    mov %ss,%ax
81000a90:	66 8c d0             	mov    %ss,%ax
    mov %ax,%ds
81000a93:	8e d8                	mov    %eax,%ds
    mov %ax,%es
81000a95:	8e c0                	mov    %eax,%es
    mov %ax,%fs
81000a97:	8e e0                	mov    %eax,%fs
    mov %ax,%gs
81000a99:	8e e8                	mov    %eax,%gs
81000a9b:	e9 00 00 00 00       	jmp    81000aa0 <cstart>

81000aa0 <cstart>:

int main(int argc,char** argv);

extern uint8_t __bss_start__[],__bss_end__[];

void cstart(int argc,char **argv){
81000aa0:	55                   	push   %ebp
81000aa1:	89 e5                	mov    %esp,%ebp
81000aa3:	83 ec 18             	sub    $0x18,%esp
    uint8_t* start=__bss_start__;
81000aa6:	c7 45 f4 00 8e 00 81 	movl   $0x81008e00,-0xc(%ebp)
    
    while(start<__bss_end__){
81000aad:	eb 09                	jmp    81000ab8 <cstart+0x18>
        *start++;     
81000aaf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ab2:	83 c0 01             	add    $0x1,%eax
81000ab5:	89 45 f4             	mov    %eax,-0xc(%ebp)
    while(start<__bss_end__){
81000ab8:	81 7d f4 a0 92 00 81 	cmpl   $0x810092a0,-0xc(%ebp)
81000abf:	72 ee                	jb     81000aaf <cstart+0xf>
    }

    exit(main(argc,argv));
81000ac1:	83 ec 08             	sub    $0x8,%esp
81000ac4:	ff 75 0c             	pushl  0xc(%ebp)
81000ac7:	ff 75 08             	pushl  0x8(%ebp)
81000aca:	e8 fe fd ff ff       	call   810008cd <main>
81000acf:	83 c4 10             	add    $0x10,%esp
81000ad2:	83 ec 0c             	sub    $0xc,%esp
81000ad5:	50                   	push   %eax
81000ad6:	e8 30 04 00 00       	call   81000f0b <exit>

81000adb <sys_call>:
#include "os_cfg.h"

#include <stdlib.h>
#include <string.h>

static inline int sys_call(syscall_args_t*args){
81000adb:	55                   	push   %ebp
81000adc:	89 e5                	mov    %esp,%ebp
81000ade:	57                   	push   %edi
81000adf:	56                   	push   %esi
81000ae0:	53                   	push   %ebx
81000ae1:	83 ec 10             	sub    $0x10,%esp
    uint32_t addr[]={0,SELECTOR_SYSCALL | 0};
81000ae4:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81000aeb:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcall *(%[a])"
        :"=a"(ret)
        :[a]"r"(addr),
         [arg3]"r"(args->arg3),
81000af2:	8b 45 08             	mov    0x8(%ebp),%eax
81000af5:	8b 50 10             	mov    0x10(%eax),%edx
         [arg2]"r"(args->arg2),
81000af8:	8b 45 08             	mov    0x8(%ebp),%eax
81000afb:	8b 48 0c             	mov    0xc(%eax),%ecx
         [arg1]"r"(args->arg1),
81000afe:	8b 45 08             	mov    0x8(%ebp),%eax
81000b01:	8b 58 08             	mov    0x8(%eax),%ebx
         [arg0]"r"(args->arg0),
81000b04:	8b 45 08             	mov    0x8(%ebp),%eax
81000b07:	8b 70 04             	mov    0x4(%eax),%esi
         [id]"r"(args->id)
81000b0a:	8b 45 08             	mov    0x8(%ebp),%eax
81000b0d:	8b 38                	mov    (%eax),%edi
    __asm__ __volatile__(
81000b0f:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000b12:	52                   	push   %edx
81000b13:	51                   	push   %ecx
81000b14:	53                   	push   %ebx
81000b15:	56                   	push   %esi
81000b16:	57                   	push   %edi
81000b17:	ff 18                	lcall  *(%eax)
81000b19:	89 45 f0             	mov    %eax,-0x10(%ebp)
    );
    return ret;
81000b1c:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000b1f:	83 c4 10             	add    $0x10,%esp
81000b22:	5b                   	pop    %ebx
81000b23:	5e                   	pop    %esi
81000b24:	5f                   	pop    %edi
81000b25:	5d                   	pop    %ebp
81000b26:	c3                   	ret    

81000b27 <msleep>:

void msleep(int ms){
81000b27:	55                   	push   %ebp
81000b28:	89 e5                	mov    %esp,%ebp
81000b2a:	83 ec 20             	sub    $0x20,%esp
    if(ms<=0){
81000b2d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000b31:	7e 1b                	jle    81000b4e <msleep+0x27>
        return;
    }

    syscall_args_t args;
    args.id=SYS_SLEEP;
81000b33:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0=ms;
81000b3a:	8b 45 08             	mov    0x8(%ebp),%eax
81000b3d:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
81000b40:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b43:	50                   	push   %eax
81000b44:	e8 92 ff ff ff       	call   81000adb <sys_call>
81000b49:	83 c4 04             	add    $0x4,%esp
81000b4c:	eb 01                	jmp    81000b4f <msleep+0x28>
        return;
81000b4e:	90                   	nop
}
81000b4f:	c9                   	leave  
81000b50:	c3                   	ret    

81000b51 <getpid>:

int getpid(void){
81000b51:	55                   	push   %ebp
81000b52:	89 e5                	mov    %esp,%ebp
81000b54:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_GETPID;
81000b57:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
    return sys_call(&args);
81000b5e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b61:	50                   	push   %eax
81000b62:	e8 74 ff ff ff       	call   81000adb <sys_call>
81000b67:	83 c4 04             	add    $0x4,%esp
}
81000b6a:	c9                   	leave  
81000b6b:	c3                   	ret    

81000b6c <print_msg>:

void print_msg(const char* fmt,int arg){
81000b6c:	55                   	push   %ebp
81000b6d:	89 e5                	mov    %esp,%ebp
81000b6f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_PRINT_MSG;
81000b72:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)
    args.arg0=(uint32_t)fmt;
81000b79:	8b 45 08             	mov    0x8(%ebp),%eax
81000b7c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=arg;
81000b7f:	8b 45 0c             	mov    0xc(%ebp),%eax
81000b82:	89 45 f4             	mov    %eax,-0xc(%ebp)
    sys_call(&args);
81000b85:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b88:	50                   	push   %eax
81000b89:	e8 4d ff ff ff       	call   81000adb <sys_call>
81000b8e:	83 c4 04             	add    $0x4,%esp
}
81000b91:	90                   	nop
81000b92:	c9                   	leave  
81000b93:	c3                   	ret    

81000b94 <fork>:

int fork(void){
81000b94:	55                   	push   %ebp
81000b95:	89 e5                	mov    %esp,%ebp
81000b97:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_FORK;
81000b9a:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
    return sys_call(&args);
81000ba1:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ba4:	50                   	push   %eax
81000ba5:	e8 31 ff ff ff       	call   81000adb <sys_call>
81000baa:	83 c4 04             	add    $0x4,%esp
}
81000bad:	c9                   	leave  
81000bae:	c3                   	ret    

81000baf <execve>:

int execve(const char* name,char* const* argv,char* const* env){
81000baf:	55                   	push   %ebp
81000bb0:	89 e5                	mov    %esp,%ebp
81000bb2:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_EXECVE;
81000bb5:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0=(int)name;
81000bbc:	8b 45 08             	mov    0x8(%ebp),%eax
81000bbf:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)argv;
81000bc2:	8b 45 0c             	mov    0xc(%ebp),%eax
81000bc5:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)env;
81000bc8:	8b 45 10             	mov    0x10(%ebp),%eax
81000bcb:	89 45 f8             	mov    %eax,-0x8(%ebp)

    sys_call(&args);
81000bce:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bd1:	50                   	push   %eax
81000bd2:	e8 04 ff ff ff       	call   81000adb <sys_call>
81000bd7:	83 c4 04             	add    $0x4,%esp
}
81000bda:	90                   	nop
81000bdb:	c9                   	leave  
81000bdc:	c3                   	ret    

81000bdd <yield>:

int yield(void){
81000bdd:	55                   	push   %ebp
81000bde:	89 e5                	mov    %esp,%ebp
81000be0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_YIELD;
81000be3:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
81000bea:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bed:	50                   	push   %eax
81000bee:	e8 e8 fe ff ff       	call   81000adb <sys_call>
81000bf3:	83 c4 04             	add    $0x4,%esp
}
81000bf6:	c9                   	leave  
81000bf7:	c3                   	ret    

81000bf8 <open>:

int open(const char*name,int flags, ...){
81000bf8:	55                   	push   %ebp
81000bf9:	89 e5                	mov    %esp,%ebp
81000bfb:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_OPEN;
81000bfe:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0=(int)name;
81000c05:	8b 45 08             	mov    0x8(%ebp),%eax
81000c08:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)flags;
81000c0b:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c0e:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000c11:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c14:	50                   	push   %eax
81000c15:	e8 c1 fe ff ff       	call   81000adb <sys_call>
81000c1a:	83 c4 04             	add    $0x4,%esp
}
81000c1d:	c9                   	leave  
81000c1e:	c3                   	ret    

81000c1f <read>:

int read(int file,char* ptr,int len){
81000c1f:	55                   	push   %ebp
81000c20:	89 e5                	mov    %esp,%ebp
81000c22:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_READ;
81000c25:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0=(int)file;
81000c2c:	8b 45 08             	mov    0x8(%ebp),%eax
81000c2f:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)ptr;
81000c32:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c35:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)len;
81000c38:	8b 45 10             	mov    0x10(%ebp),%eax
81000c3b:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000c3e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c41:	50                   	push   %eax
81000c42:	e8 94 fe ff ff       	call   81000adb <sys_call>
81000c47:	83 c4 04             	add    $0x4,%esp
}
81000c4a:	c9                   	leave  
81000c4b:	c3                   	ret    

81000c4c <write>:

int write(int file,char*ptr,int len){
81000c4c:	55                   	push   %ebp
81000c4d:	89 e5                	mov    %esp,%ebp
81000c4f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_WRITE;
81000c52:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0=(int)file;
81000c59:	8b 45 08             	mov    0x8(%ebp),%eax
81000c5c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)ptr;
81000c5f:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c62:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)len;
81000c65:	8b 45 10             	mov    0x10(%ebp),%eax
81000c68:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000c6b:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c6e:	50                   	push   %eax
81000c6f:	e8 67 fe ff ff       	call   81000adb <sys_call>
81000c74:	83 c4 04             	add    $0x4,%esp
}
81000c77:	c9                   	leave  
81000c78:	c3                   	ret    

81000c79 <close>:

int close(int file){
81000c79:	55                   	push   %ebp
81000c7a:	89 e5                	mov    %esp,%ebp
81000c7c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_CLOSE;
81000c7f:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0=(int)file;
81000c86:	8b 45 08             	mov    0x8(%ebp),%eax
81000c89:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000c8c:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c8f:	50                   	push   %eax
81000c90:	e8 46 fe ff ff       	call   81000adb <sys_call>
81000c95:	83 c4 04             	add    $0x4,%esp
}
81000c98:	c9                   	leave  
81000c99:	c3                   	ret    

81000c9a <lseek>:

int lseek(int file,int ptr,int dir){
81000c9a:	55                   	push   %ebp
81000c9b:	89 e5                	mov    %esp,%ebp
81000c9d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_LSEEK;
81000ca0:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0=(int)file;
81000ca7:	8b 45 08             	mov    0x8(%ebp),%eax
81000caa:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)ptr;
81000cad:	8b 45 0c             	mov    0xc(%ebp),%eax
81000cb0:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)dir;
81000cb3:	8b 45 10             	mov    0x10(%ebp),%eax
81000cb6:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000cb9:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000cbc:	50                   	push   %eax
81000cbd:	e8 19 fe ff ff       	call   81000adb <sys_call>
81000cc2:	83 c4 04             	add    $0x4,%esp
}
81000cc5:	c9                   	leave  
81000cc6:	c3                   	ret    

81000cc7 <isatty>:

int isatty(int file){
81000cc7:	55                   	push   %ebp
81000cc8:	89 e5                	mov    %esp,%ebp
81000cca:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_ISATTY;
81000ccd:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0=(int)file;
81000cd4:	8b 45 08             	mov    0x8(%ebp),%eax
81000cd7:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000cda:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000cdd:	50                   	push   %eax
81000cde:	e8 f8 fd ff ff       	call   81000adb <sys_call>
81000ce3:	83 c4 04             	add    $0x4,%esp
}
81000ce6:	c9                   	leave  
81000ce7:	c3                   	ret    

81000ce8 <fstat>:

int fstat(int file,struct stat* st){
81000ce8:	55                   	push   %ebp
81000ce9:	89 e5                	mov    %esp,%ebp
81000ceb:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_FSTAT;
81000cee:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0=(int)file;
81000cf5:	8b 45 08             	mov    0x8(%ebp),%eax
81000cf8:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)st;
81000cfb:	8b 45 0c             	mov    0xc(%ebp),%eax
81000cfe:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000d01:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d04:	50                   	push   %eax
81000d05:	e8 d1 fd ff ff       	call   81000adb <sys_call>
81000d0a:	83 c4 04             	add    $0x4,%esp
}
81000d0d:	c9                   	leave  
81000d0e:	c3                   	ret    

81000d0f <sbrk>:

void* sbrk(ptrdiff_t incr){
81000d0f:	55                   	push   %ebp
81000d10:	89 e5                	mov    %esp,%ebp
81000d12:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_SBRK;
81000d15:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0=(int)incr;
81000d1c:	8b 45 08             	mov    0x8(%ebp),%eax
81000d1f:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (void*)sys_call(&args);
81000d22:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d25:	50                   	push   %eax
81000d26:	e8 b0 fd ff ff       	call   81000adb <sys_call>
81000d2b:	83 c4 04             	add    $0x4,%esp
}
81000d2e:	c9                   	leave  
81000d2f:	c3                   	ret    

81000d30 <dup>:
/** 
* @brief 复制文件描述符
* @param file 需要复制的文件描述符
* @return 复制后的文件描述符，失败返回-1
*/
int dup(int file){
81000d30:	55                   	push   %ebp
81000d31:	89 e5                	mov    %esp,%ebp
81000d33:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_DUP;
81000d36:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0=(int)file;
81000d3d:	8b 45 08             	mov    0x8(%ebp),%eax
81000d40:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000d43:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d46:	50                   	push   %eax
81000d47:	e8 8f fd ff ff       	call   81000adb <sys_call>
81000d4c:	83 c4 04             	add    $0x4,%esp
}
81000d4f:	c9                   	leave  
81000d50:	c3                   	ret    

81000d51 <_exit>:

/**
 * @brief  当我们使用newlib库时，exit函数会调用_exit函数
 * @param status 退出的状态码
 */
void _exit(int status){
81000d51:	55                   	push   %ebp
81000d52:	89 e5                	mov    %esp,%ebp
81000d54:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_EXIT;
81000d57:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0=(int)status;
81000d5e:	8b 45 08             	mov    0x8(%ebp),%eax
81000d61:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
81000d64:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d67:	50                   	push   %eax
81000d68:	e8 6e fd ff ff       	call   81000adb <sys_call>
81000d6d:	83 c4 04             	add    $0x4,%esp

    for(;;){
        asm volatile("hlt");
81000d70:	f4                   	hlt    
81000d71:	eb fd                	jmp    81000d70 <_exit+0x1f>

81000d73 <wait>:
    }
}

int wait(int* status){
81000d73:	55                   	push   %ebp
81000d74:	89 e5                	mov    %esp,%ebp
81000d76:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_WAIT;
81000d79:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0=(int)status;
81000d80:	8b 45 08             	mov    0x8(%ebp),%eax
81000d83:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000d86:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d89:	50                   	push   %eax
81000d8a:	e8 4c fd ff ff       	call   81000adb <sys_call>
81000d8f:	83 c4 04             	add    $0x4,%esp
}
81000d92:	c9                   	leave  
81000d93:	c3                   	ret    

81000d94 <opendir>:

DIR *opendir(const char* path){
81000d94:	55                   	push   %ebp
81000d95:	89 e5                	mov    %esp,%ebp
81000d97:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
81000d9a:	83 ec 0c             	sub    $0xc,%esp
81000d9d:	68 10 01 00 00       	push   $0x110
81000da2:	e8 dd 30 00 00       	call   81003e84 <malloc>
81000da7:	83 c4 10             	add    $0x10,%esp
81000daa:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if(dir == NULL){
81000dad:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000db1:	75 07                	jne    81000dba <opendir+0x26>
        return NULL;
81000db3:	b8 00 00 00 00       	mov    $0x0,%eax
81000db8:	eb 43                	jmp    81000dfd <opendir+0x69>
    }

    syscall_args_t args;
    args.id=SYS_OPENDIR;
81000dba:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0=(int)path;
81000dc1:	8b 45 08             	mov    0x8(%ebp),%eax
81000dc4:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1=(int)dir;
81000dc7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000dca:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err=sys_call(&args);
81000dcd:	83 ec 0c             	sub    $0xc,%esp
81000dd0:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000dd3:	50                   	push   %eax
81000dd4:	e8 02 fd ff ff       	call   81000adb <sys_call>
81000dd9:	83 c4 10             	add    $0x10,%esp
81000ddc:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if(err < 0){
81000ddf:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000de3:	79 15                	jns    81000dfa <opendir+0x66>
        free(dir);
81000de5:	83 ec 0c             	sub    $0xc,%esp
81000de8:	ff 75 f4             	pushl  -0xc(%ebp)
81000deb:	e8 b0 30 00 00       	call   81003ea0 <free>
81000df0:	83 c4 10             	add    $0x10,%esp
        return NULL;
81000df3:	b8 00 00 00 00       	mov    $0x0,%eax
81000df8:	eb 03                	jmp    81000dfd <opendir+0x69>
    }

    return dir;
81000dfa:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000dfd:	c9                   	leave  
81000dfe:	c3                   	ret    

81000dff <readdir>:

struct dirent *readdir(DIR *dir){
81000dff:	55                   	push   %ebp
81000e00:	89 e5                	mov    %esp,%ebp
81000e02:	83 ec 20             	sub    $0x20,%esp
   syscall_args_t args;

    args.id=SYS_READDIR;
81000e05:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0=(int)dir;
81000e0c:	8b 45 08             	mov    0x8(%ebp),%eax
81000e0f:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1=(int)&dir->dirent;
81000e12:	8b 45 08             	mov    0x8(%ebp),%eax
81000e15:	83 c0 04             	add    $0x4,%eax
81000e18:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err=sys_call(&args);
81000e1b:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000e1e:	50                   	push   %eax
81000e1f:	e8 b7 fc ff ff       	call   81000adb <sys_call>
81000e24:	83 c4 04             	add    $0x4,%esp
81000e27:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if(err < 0){
81000e2a:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
81000e2e:	79 07                	jns    81000e37 <readdir+0x38>
        return NULL;
81000e30:	b8 00 00 00 00       	mov    $0x0,%eax
81000e35:	eb 06                	jmp    81000e3d <readdir+0x3e>
    }

    return &dir->dirent;
81000e37:	8b 45 08             	mov    0x8(%ebp),%eax
81000e3a:	83 c0 04             	add    $0x4,%eax
}
81000e3d:	c9                   	leave  
81000e3e:	c3                   	ret    

81000e3f <closedir>:

int closedir(DIR *dir){
81000e3f:	55                   	push   %ebp
81000e40:	89 e5                	mov    %esp,%ebp
81000e42:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;

    args.id=SYS_CLOSEDIR;
81000e45:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0=(int)dir;
81000e4c:	8b 45 08             	mov    0x8(%ebp),%eax
81000e4f:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err=sys_call(&args);
81000e52:	8d 45 e0             	lea    -0x20(%ebp),%eax
81000e55:	50                   	push   %eax
81000e56:	e8 80 fc ff ff       	call   81000adb <sys_call>
81000e5b:	83 c4 04             	add    $0x4,%esp
81000e5e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if(err < 0){
81000e61:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000e65:	79 07                	jns    81000e6e <closedir+0x2f>
        return -1;
81000e67:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000e6c:	eb 13                	jmp    81000e81 <closedir+0x42>
    }

    free(dir);
81000e6e:	83 ec 0c             	sub    $0xc,%esp
81000e71:	ff 75 08             	pushl  0x8(%ebp)
81000e74:	e8 27 30 00 00       	call   81003ea0 <free>
81000e79:	83 c4 10             	add    $0x10,%esp
    return 0;
81000e7c:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000e81:	c9                   	leave  
81000e82:	c3                   	ret    

81000e83 <ioctl>:

int ioctl(int file,int cmd,int arg0,int arg1){
81000e83:	55                   	push   %ebp
81000e84:	89 e5                	mov    %esp,%ebp
81000e86:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;

    args.id=SYS_IOCTL;
81000e89:	c7 45 ec 3b 00 00 00 	movl   $0x3b,-0x14(%ebp)

    args.arg0=(int)file;
81000e90:	8b 45 08             	mov    0x8(%ebp),%eax
81000e93:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)cmd;
81000e96:	8b 45 0c             	mov    0xc(%ebp),%eax
81000e99:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)arg0;
81000e9c:	8b 45 10             	mov    0x10(%ebp),%eax
81000e9f:	89 45 f8             	mov    %eax,-0x8(%ebp)
    args.arg3=(int)arg1;
81000ea2:	8b 45 14             	mov    0x14(%ebp),%eax
81000ea5:	89 45 fc             	mov    %eax,-0x4(%ebp)

    return sys_call(&args);
81000ea8:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000eab:	50                   	push   %eax
81000eac:	e8 2a fc ff ff       	call   81000adb <sys_call>
81000eb1:	83 c4 04             	add    $0x4,%esp
}
81000eb4:	c9                   	leave  
81000eb5:	c3                   	ret    

81000eb6 <unlink>:

int unlink(const char *path){
81000eb6:	55                   	push   %ebp
81000eb7:	89 e5                	mov    %esp,%ebp
81000eb9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;

    args.id=SYS_UNLINK;
81000ebc:	c7 45 ec 3f 00 00 00 	movl   $0x3f,-0x14(%ebp)
    args.arg0=(int)path;
81000ec3:	8b 45 08             	mov    0x8(%ebp),%eax
81000ec6:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000ec9:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ecc:	50                   	push   %eax
81000ecd:	e8 09 fc ff ff       	call   81000adb <sys_call>
81000ed2:	83 c4 04             	add    $0x4,%esp
81000ed5:	c9                   	leave  
81000ed6:	c3                   	ret    

81000ed7 <atoi>:
81000ed7:	55                   	push   %ebp
81000ed8:	89 e5                	mov    %esp,%ebp
81000eda:	83 ec 08             	sub    $0x8,%esp
81000edd:	83 ec 04             	sub    $0x4,%esp
81000ee0:	6a 0a                	push   $0xa
81000ee2:	6a 00                	push   $0x0
81000ee4:	ff 75 08             	pushl  0x8(%ebp)
81000ee7:	e8 ba 5f 00 00       	call   81006ea6 <strtol>
81000eec:	83 c4 10             	add    $0x10,%esp
81000eef:	c9                   	leave  
81000ef0:	c3                   	ret    

81000ef1 <_atoi_r>:
81000ef1:	55                   	push   %ebp
81000ef2:	89 e5                	mov    %esp,%ebp
81000ef4:	83 ec 08             	sub    $0x8,%esp
81000ef7:	6a 0a                	push   $0xa
81000ef9:	6a 00                	push   $0x0
81000efb:	ff 75 0c             	pushl  0xc(%ebp)
81000efe:	ff 75 08             	pushl  0x8(%ebp)
81000f01:	e8 56 5f 00 00       	call   81006e5c <_strtol_r>
81000f06:	83 c4 10             	add    $0x10,%esp
81000f09:	c9                   	leave  
81000f0a:	c3                   	ret    

81000f0b <exit>:
81000f0b:	55                   	push   %ebp
81000f0c:	89 e5                	mov    %esp,%ebp
81000f0e:	83 ec 08             	sub    $0x8,%esp
81000f11:	83 ec 08             	sub    $0x8,%esp
81000f14:	6a 00                	push   $0x0
81000f16:	ff 75 08             	pushl  0x8(%ebp)
81000f19:	e8 85 62 00 00       	call   810071a3 <__call_exitprocs>
81000f1e:	83 c4 10             	add    $0x10,%esp
81000f21:	a1 84 80 00 81       	mov    0x81008084,%eax
81000f26:	8b 40 3c             	mov    0x3c(%eax),%eax
81000f29:	85 c0                	test   %eax,%eax
81000f2b:	74 17                	je     81000f44 <exit+0x39>
81000f2d:	a1 84 80 00 81       	mov    0x81008084,%eax
81000f32:	8b 40 3c             	mov    0x3c(%eax),%eax
81000f35:	8b 15 84 80 00 81    	mov    0x81008084,%edx
81000f3b:	83 ec 0c             	sub    $0xc,%esp
81000f3e:	52                   	push   %edx
81000f3f:	ff d0                	call   *%eax
81000f41:	83 c4 10             	add    $0x10,%esp
81000f44:	83 ec 0c             	sub    $0xc,%esp
81000f47:	ff 75 08             	pushl  0x8(%ebp)
81000f4a:	e8 02 fe ff ff       	call   81000d51 <_exit>

81000f4f <_fclose_r>:
81000f4f:	55                   	push   %ebp
81000f50:	89 e5                	mov    %esp,%ebp
81000f52:	53                   	push   %ebx
81000f53:	83 ec 14             	sub    $0x14,%esp
81000f56:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000f59:	85 db                	test   %ebx,%ebx
81000f5b:	75 0a                	jne    81000f67 <_fclose_r+0x18>
81000f5d:	b8 00 00 00 00       	mov    $0x0,%eax
81000f62:	e9 ea 00 00 00       	jmp    81001051 <_fclose_r+0x102>
81000f67:	8b 45 08             	mov    0x8(%ebp),%eax
81000f6a:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000f6d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000f71:	74 18                	je     81000f8b <_fclose_r+0x3c>
81000f73:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f76:	8b 40 38             	mov    0x38(%eax),%eax
81000f79:	85 c0                	test   %eax,%eax
81000f7b:	75 0e                	jne    81000f8b <_fclose_r+0x3c>
81000f7d:	83 ec 0c             	sub    $0xc,%esp
81000f80:	ff 75 f0             	pushl  -0x10(%ebp)
81000f83:	e8 fe 08 00 00       	call   81001886 <__sinit>
81000f88:	83 c4 10             	add    $0x10,%esp
81000f8b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f8f:	66 85 c0             	test   %ax,%ax
81000f92:	75 0a                	jne    81000f9e <_fclose_r+0x4f>
81000f94:	b8 00 00 00 00       	mov    $0x0,%eax
81000f99:	e9 b3 00 00 00       	jmp    81001051 <_fclose_r+0x102>
81000f9e:	83 ec 08             	sub    $0x8,%esp
81000fa1:	53                   	push   %ebx
81000fa2:	ff 75 08             	pushl  0x8(%ebp)
81000fa5:	e8 c9 00 00 00       	call   81001073 <__sflush_r>
81000faa:	83 c4 10             	add    $0x10,%esp
81000fad:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000fb0:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000fb3:	85 c0                	test   %eax,%eax
81000fb5:	74 1d                	je     81000fd4 <_fclose_r+0x85>
81000fb7:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000fba:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000fbd:	83 ec 08             	sub    $0x8,%esp
81000fc0:	52                   	push   %edx
81000fc1:	ff 75 08             	pushl  0x8(%ebp)
81000fc4:	ff d0                	call   *%eax
81000fc6:	83 c4 10             	add    $0x10,%esp
81000fc9:	85 c0                	test   %eax,%eax
81000fcb:	79 07                	jns    81000fd4 <_fclose_r+0x85>
81000fcd:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81000fd4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000fd8:	98                   	cwtl   
81000fd9:	25 80 00 00 00       	and    $0x80,%eax
81000fde:	85 c0                	test   %eax,%eax
81000fe0:	74 12                	je     81000ff4 <_fclose_r+0xa5>
81000fe2:	8b 43 10             	mov    0x10(%ebx),%eax
81000fe5:	83 ec 08             	sub    $0x8,%esp
81000fe8:	50                   	push   %eax
81000fe9:	ff 75 08             	pushl  0x8(%ebp)
81000fec:	e8 4a 0e 00 00       	call   81001e3b <_free_r>
81000ff1:	83 c4 10             	add    $0x10,%esp
81000ff4:	8b 43 30             	mov    0x30(%ebx),%eax
81000ff7:	85 c0                	test   %eax,%eax
81000ff9:	74 23                	je     8100101e <_fclose_r+0xcf>
81000ffb:	8b 53 30             	mov    0x30(%ebx),%edx
81000ffe:	8d 43 40             	lea    0x40(%ebx),%eax
81001001:	39 c2                	cmp    %eax,%edx
81001003:	74 12                	je     81001017 <_fclose_r+0xc8>
81001005:	8b 43 30             	mov    0x30(%ebx),%eax
81001008:	83 ec 08             	sub    $0x8,%esp
8100100b:	50                   	push   %eax
8100100c:	ff 75 08             	pushl  0x8(%ebp)
8100100f:	e8 27 0e 00 00       	call   81001e3b <_free_r>
81001014:	83 c4 10             	add    $0x10,%esp
81001017:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100101e:	8b 43 44             	mov    0x44(%ebx),%eax
81001021:	85 c0                	test   %eax,%eax
81001023:	74 19                	je     8100103e <_fclose_r+0xef>
81001025:	8b 43 44             	mov    0x44(%ebx),%eax
81001028:	83 ec 08             	sub    $0x8,%esp
8100102b:	50                   	push   %eax
8100102c:	ff 75 08             	pushl  0x8(%ebp)
8100102f:	e8 07 0e 00 00       	call   81001e3b <_free_r>
81001034:	83 c4 10             	add    $0x10,%esp
81001037:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
8100103e:	e8 dc 08 00 00       	call   8100191f <__sfp_lock_acquire>
81001043:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81001049:	e8 d7 08 00 00       	call   81001925 <__sfp_lock_release>
8100104e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001051:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001054:	c9                   	leave  
81001055:	c3                   	ret    

81001056 <fclose>:
81001056:	55                   	push   %ebp
81001057:	89 e5                	mov    %esp,%ebp
81001059:	83 ec 08             	sub    $0x8,%esp
8100105c:	8b 55 08             	mov    0x8(%ebp),%edx
8100105f:	a1 44 88 00 81       	mov    0x81008844,%eax
81001064:	83 ec 08             	sub    $0x8,%esp
81001067:	52                   	push   %edx
81001068:	50                   	push   %eax
81001069:	e8 e1 fe ff ff       	call   81000f4f <_fclose_r>
8100106e:	83 c4 10             	add    $0x10,%esp
81001071:	c9                   	leave  
81001072:	c3                   	ret    

81001073 <__sflush_r>:
81001073:	55                   	push   %ebp
81001074:	89 e5                	mov    %esp,%ebp
81001076:	57                   	push   %edi
81001077:	56                   	push   %esi
81001078:	53                   	push   %ebx
81001079:	83 ec 1c             	sub    $0x1c,%esp
8100107c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100107f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001083:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81001087:	0f bf 45 de          	movswl -0x22(%ebp),%eax
8100108b:	83 e0 08             	and    $0x8,%eax
8100108e:	85 c0                	test   %eax,%eax
81001090:	0f 85 93 01 00 00    	jne    81001229 <__sflush_r+0x1b6>
81001096:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100109a:	80 cc 08             	or     $0x8,%ah
8100109d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810010a1:	8b 43 04             	mov    0x4(%ebx),%eax
810010a4:	85 c0                	test   %eax,%eax
810010a6:	7f 0b                	jg     810010b3 <__sflush_r+0x40>
810010a8:	8b 43 3c             	mov    0x3c(%ebx),%eax
810010ab:	85 c0                	test   %eax,%eax
810010ad:	0f 8e 6f 01 00 00    	jle    81001222 <__sflush_r+0x1af>
810010b3:	8b 43 28             	mov    0x28(%ebx),%eax
810010b6:	85 c0                	test   %eax,%eax
810010b8:	0f 84 64 01 00 00    	je     81001222 <__sflush_r+0x1af>
810010be:	8b 45 08             	mov    0x8(%ebp),%eax
810010c1:	8b 00                	mov    (%eax),%eax
810010c3:	89 45 d8             	mov    %eax,-0x28(%ebp)
810010c6:	8b 45 08             	mov    0x8(%ebp),%eax
810010c9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810010cf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010d3:	98                   	cwtl   
810010d4:	25 00 10 00 00       	and    $0x1000,%eax
810010d9:	85 c0                	test   %eax,%eax
810010db:	74 08                	je     810010e5 <__sflush_r+0x72>
810010dd:	8b 43 50             	mov    0x50(%ebx),%eax
810010e0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810010e3:	eb 64                	jmp    81001149 <__sflush_r+0xd6>
810010e5:	8b 43 28             	mov    0x28(%ebx),%eax
810010e8:	8b 53 1c             	mov    0x1c(%ebx),%edx
810010eb:	6a 01                	push   $0x1
810010ed:	6a 00                	push   $0x0
810010ef:	52                   	push   %edx
810010f0:	ff 75 08             	pushl  0x8(%ebp)
810010f3:	ff d0                	call   *%eax
810010f5:	83 c4 10             	add    $0x10,%esp
810010f8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810010fb:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810010ff:	75 48                	jne    81001149 <__sflush_r+0xd6>
81001101:	8b 45 08             	mov    0x8(%ebp),%eax
81001104:	8b 00                	mov    (%eax),%eax
81001106:	85 c0                	test   %eax,%eax
81001108:	74 3f                	je     81001149 <__sflush_r+0xd6>
8100110a:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81001111:	8b 45 08             	mov    0x8(%ebp),%eax
81001114:	8b 00                	mov    (%eax),%eax
81001116:	83 f8 1d             	cmp    $0x1d,%eax
81001119:	74 0a                	je     81001125 <__sflush_r+0xb2>
8100111b:	8b 45 08             	mov    0x8(%ebp),%eax
8100111e:	8b 00                	mov    (%eax),%eax
81001120:	83 f8 16             	cmp    $0x16,%eax
81001123:	75 11                	jne    81001136 <__sflush_r+0xc3>
81001125:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
8100112c:	8b 45 08             	mov    0x8(%ebp),%eax
8100112f:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001132:	89 10                	mov    %edx,(%eax)
81001134:	eb 0b                	jmp    81001141 <__sflush_r+0xce>
81001136:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100113a:	83 c8 40             	or     $0x40,%eax
8100113d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001141:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001144:	e9 48 01 00 00       	jmp    81001291 <__sflush_r+0x21e>
81001149:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100114d:	98                   	cwtl   
8100114e:	83 e0 04             	and    $0x4,%eax
81001151:	85 c0                	test   %eax,%eax
81001153:	74 13                	je     81001168 <__sflush_r+0xf5>
81001155:	8b 43 04             	mov    0x4(%ebx),%eax
81001158:	29 45 e4             	sub    %eax,-0x1c(%ebp)
8100115b:	8b 43 30             	mov    0x30(%ebx),%eax
8100115e:	85 c0                	test   %eax,%eax
81001160:	74 06                	je     81001168 <__sflush_r+0xf5>
81001162:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001165:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81001168:	8b 43 28             	mov    0x28(%ebx),%eax
8100116b:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100116e:	6a 00                	push   $0x0
81001170:	ff 75 e4             	pushl  -0x1c(%ebp)
81001173:	52                   	push   %edx
81001174:	ff 75 08             	pushl  0x8(%ebp)
81001177:	ff d0                	call   *%eax
81001179:	83 c4 10             	add    $0x10,%esp
8100117c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100117f:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001183:	75 1d                	jne    810011a2 <__sflush_r+0x12f>
81001185:	8b 45 08             	mov    0x8(%ebp),%eax
81001188:	8b 00                	mov    (%eax),%eax
8100118a:	85 c0                	test   %eax,%eax
8100118c:	74 14                	je     810011a2 <__sflush_r+0x12f>
8100118e:	8b 45 08             	mov    0x8(%ebp),%eax
81001191:	8b 00                	mov    (%eax),%eax
81001193:	83 f8 1d             	cmp    $0x1d,%eax
81001196:	74 0a                	je     810011a2 <__sflush_r+0x12f>
81001198:	8b 45 08             	mov    0x8(%ebp),%eax
8100119b:	8b 00                	mov    (%eax),%eax
8100119d:	83 f8 16             	cmp    $0x16,%eax
810011a0:	75 6e                	jne    81001210 <__sflush_r+0x19d>
810011a2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810011a6:	80 e4 f7             	and    $0xf7,%ah
810011a9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810011ad:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810011b4:	8b 43 10             	mov    0x10(%ebx),%eax
810011b7:	89 03                	mov    %eax,(%ebx)
810011b9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810011bd:	98                   	cwtl   
810011be:	25 00 10 00 00       	and    $0x1000,%eax
810011c3:	85 c0                	test   %eax,%eax
810011c5:	74 15                	je     810011dc <__sflush_r+0x169>
810011c7:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810011cb:	75 09                	jne    810011d6 <__sflush_r+0x163>
810011cd:	8b 45 08             	mov    0x8(%ebp),%eax
810011d0:	8b 00                	mov    (%eax),%eax
810011d2:	85 c0                	test   %eax,%eax
810011d4:	75 06                	jne    810011dc <__sflush_r+0x169>
810011d6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810011d9:	89 43 50             	mov    %eax,0x50(%ebx)
810011dc:	8b 45 08             	mov    0x8(%ebp),%eax
810011df:	8b 55 d8             	mov    -0x28(%ebp),%edx
810011e2:	89 10                	mov    %edx,(%eax)
810011e4:	8b 43 30             	mov    0x30(%ebx),%eax
810011e7:	85 c0                	test   %eax,%eax
810011e9:	74 37                	je     81001222 <__sflush_r+0x1af>
810011eb:	8b 53 30             	mov    0x30(%ebx),%edx
810011ee:	8d 43 40             	lea    0x40(%ebx),%eax
810011f1:	39 c2                	cmp    %eax,%edx
810011f3:	74 12                	je     81001207 <__sflush_r+0x194>
810011f5:	8b 43 30             	mov    0x30(%ebx),%eax
810011f8:	83 ec 08             	sub    $0x8,%esp
810011fb:	50                   	push   %eax
810011fc:	ff 75 08             	pushl  0x8(%ebp)
810011ff:	e8 37 0c 00 00       	call   81001e3b <_free_r>
81001204:	83 c4 10             	add    $0x10,%esp
81001207:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100120e:	eb 12                	jmp    81001222 <__sflush_r+0x1af>
81001210:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001214:	83 c8 40             	or     $0x40,%eax
81001217:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100121b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001220:	eb 6f                	jmp    81001291 <__sflush_r+0x21e>
81001222:	b8 00 00 00 00       	mov    $0x0,%eax
81001227:	eb 68                	jmp    81001291 <__sflush_r+0x21e>
81001229:	8b 73 10             	mov    0x10(%ebx),%esi
8100122c:	85 f6                	test   %esi,%esi
8100122e:	75 07                	jne    81001237 <__sflush_r+0x1c4>
81001230:	b8 00 00 00 00       	mov    $0x0,%eax
81001235:	eb 5a                	jmp    81001291 <__sflush_r+0x21e>
81001237:	8b 03                	mov    (%ebx),%eax
81001239:	29 f0                	sub    %esi,%eax
8100123b:	89 c7                	mov    %eax,%edi
8100123d:	89 33                	mov    %esi,(%ebx)
8100123f:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81001243:	83 e0 03             	and    $0x3,%eax
81001246:	85 c0                	test   %eax,%eax
81001248:	75 05                	jne    8100124f <__sflush_r+0x1dc>
8100124a:	8b 43 14             	mov    0x14(%ebx),%eax
8100124d:	eb 05                	jmp    81001254 <__sflush_r+0x1e1>
8100124f:	b8 00 00 00 00       	mov    $0x0,%eax
81001254:	89 43 08             	mov    %eax,0x8(%ebx)
81001257:	eb 2f                	jmp    81001288 <__sflush_r+0x215>
81001259:	8b 43 24             	mov    0x24(%ebx),%eax
8100125c:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100125f:	57                   	push   %edi
81001260:	56                   	push   %esi
81001261:	52                   	push   %edx
81001262:	ff 75 08             	pushl  0x8(%ebp)
81001265:	ff d0                	call   *%eax
81001267:	83 c4 10             	add    $0x10,%esp
8100126a:	85 c0                	test   %eax,%eax
8100126c:	7f 12                	jg     81001280 <__sflush_r+0x20d>
8100126e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001272:	83 c8 40             	or     $0x40,%eax
81001275:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001279:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100127e:	eb 11                	jmp    81001291 <__sflush_r+0x21e>
81001280:	89 c1                	mov    %eax,%ecx
81001282:	89 c8                	mov    %ecx,%eax
81001284:	01 c6                	add    %eax,%esi
81001286:	29 cf                	sub    %ecx,%edi
81001288:	85 ff                	test   %edi,%edi
8100128a:	7f cd                	jg     81001259 <__sflush_r+0x1e6>
8100128c:	b8 00 00 00 00       	mov    $0x0,%eax
81001291:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001294:	5b                   	pop    %ebx
81001295:	5e                   	pop    %esi
81001296:	5f                   	pop    %edi
81001297:	5d                   	pop    %ebp
81001298:	c3                   	ret    

81001299 <_fflush_r>:
81001299:	55                   	push   %ebp
8100129a:	89 e5                	mov    %esp,%ebp
8100129c:	53                   	push   %ebx
8100129d:	83 ec 14             	sub    $0x14,%esp
810012a0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810012a3:	8b 45 08             	mov    0x8(%ebp),%eax
810012a6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810012a9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810012ad:	74 18                	je     810012c7 <_fflush_r+0x2e>
810012af:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012b2:	8b 40 38             	mov    0x38(%eax),%eax
810012b5:	85 c0                	test   %eax,%eax
810012b7:	75 0e                	jne    810012c7 <_fflush_r+0x2e>
810012b9:	83 ec 0c             	sub    $0xc,%esp
810012bc:	ff 75 f4             	pushl  -0xc(%ebp)
810012bf:	e8 c2 05 00 00       	call   81001886 <__sinit>
810012c4:	83 c4 10             	add    $0x10,%esp
810012c7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810012cb:	66 85 c0             	test   %ax,%ax
810012ce:	75 07                	jne    810012d7 <_fflush_r+0x3e>
810012d0:	b8 00 00 00 00       	mov    $0x0,%eax
810012d5:	eb 15                	jmp    810012ec <_fflush_r+0x53>
810012d7:	83 ec 08             	sub    $0x8,%esp
810012da:	53                   	push   %ebx
810012db:	ff 75 08             	pushl  0x8(%ebp)
810012de:	e8 90 fd ff ff       	call   81001073 <__sflush_r>
810012e3:	83 c4 10             	add    $0x10,%esp
810012e6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810012e9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012ec:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810012ef:	c9                   	leave  
810012f0:	c3                   	ret    

810012f1 <fflush>:
810012f1:	55                   	push   %ebp
810012f2:	89 e5                	mov    %esp,%ebp
810012f4:	83 ec 08             	sub    $0x8,%esp
810012f7:	8b 55 08             	mov    0x8(%ebp),%edx
810012fa:	85 d2                	test   %edx,%edx
810012fc:	75 18                	jne    81001316 <fflush+0x25>
810012fe:	a1 84 80 00 81       	mov    0x81008084,%eax
81001303:	83 ec 08             	sub    $0x8,%esp
81001306:	68 99 12 00 81       	push   $0x81001299
8100130b:	50                   	push   %eax
8100130c:	e8 bd 1a 00 00       	call   81002dce <_fwalk_reent>
81001311:	83 c4 10             	add    $0x10,%esp
81001314:	eb 12                	jmp    81001328 <fflush+0x37>
81001316:	a1 44 88 00 81       	mov    0x81008844,%eax
8100131b:	83 ec 08             	sub    $0x8,%esp
8100131e:	52                   	push   %edx
8100131f:	50                   	push   %eax
81001320:	e8 74 ff ff ff       	call   81001299 <_fflush_r>
81001325:	83 c4 10             	add    $0x10,%esp
81001328:	c9                   	leave  
81001329:	c3                   	ret    

8100132a <_fgetc_r>:
8100132a:	55                   	push   %ebp
8100132b:	89 e5                	mov    %esp,%ebp
8100132d:	83 ec 18             	sub    $0x18,%esp
81001330:	8b 45 08             	mov    0x8(%ebp),%eax
81001333:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001336:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100133a:	74 18                	je     81001354 <_fgetc_r+0x2a>
8100133c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100133f:	8b 40 38             	mov    0x38(%eax),%eax
81001342:	85 c0                	test   %eax,%eax
81001344:	75 0e                	jne    81001354 <_fgetc_r+0x2a>
81001346:	83 ec 0c             	sub    $0xc,%esp
81001349:	ff 75 f4             	pushl  -0xc(%ebp)
8100134c:	e8 35 05 00 00       	call   81001886 <__sinit>
81001351:	83 c4 10             	add    $0x10,%esp
81001354:	8b 45 0c             	mov    0xc(%ebp),%eax
81001357:	8b 40 04             	mov    0x4(%eax),%eax
8100135a:	8d 50 ff             	lea    -0x1(%eax),%edx
8100135d:	8b 45 0c             	mov    0xc(%ebp),%eax
81001360:	89 50 04             	mov    %edx,0x4(%eax)
81001363:	8b 45 0c             	mov    0xc(%ebp),%eax
81001366:	8b 40 04             	mov    0x4(%eax),%eax
81001369:	85 c0                	test   %eax,%eax
8100136b:	79 13                	jns    81001380 <_fgetc_r+0x56>
8100136d:	83 ec 08             	sub    $0x8,%esp
81001370:	ff 75 0c             	pushl  0xc(%ebp)
81001373:	ff 75 08             	pushl  0x8(%ebp)
81001376:	e8 de 51 00 00       	call   81006559 <__srget_r>
8100137b:	83 c4 10             	add    $0x10,%esp
8100137e:	eb 13                	jmp    81001393 <_fgetc_r+0x69>
81001380:	8b 45 0c             	mov    0xc(%ebp),%eax
81001383:	8b 00                	mov    (%eax),%eax
81001385:	8d 48 01             	lea    0x1(%eax),%ecx
81001388:	8b 55 0c             	mov    0xc(%ebp),%edx
8100138b:	89 0a                	mov    %ecx,(%edx)
8100138d:	0f b6 00             	movzbl (%eax),%eax
81001390:	0f b6 c0             	movzbl %al,%eax
81001393:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001396:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001399:	c9                   	leave  
8100139a:	c3                   	ret    

8100139b <fgetc>:
8100139b:	55                   	push   %ebp
8100139c:	89 e5                	mov    %esp,%ebp
8100139e:	83 ec 18             	sub    $0x18,%esp
810013a1:	a1 44 88 00 81       	mov    0x81008844,%eax
810013a6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013a9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013ac:	89 45 f0             	mov    %eax,-0x10(%ebp)
810013af:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810013b3:	74 18                	je     810013cd <fgetc+0x32>
810013b5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013b8:	8b 40 38             	mov    0x38(%eax),%eax
810013bb:	85 c0                	test   %eax,%eax
810013bd:	75 0e                	jne    810013cd <fgetc+0x32>
810013bf:	83 ec 0c             	sub    $0xc,%esp
810013c2:	ff 75 f0             	pushl  -0x10(%ebp)
810013c5:	e8 bc 04 00 00       	call   81001886 <__sinit>
810013ca:	83 c4 10             	add    $0x10,%esp
810013cd:	8b 45 08             	mov    0x8(%ebp),%eax
810013d0:	8b 40 04             	mov    0x4(%eax),%eax
810013d3:	8d 50 ff             	lea    -0x1(%eax),%edx
810013d6:	8b 45 08             	mov    0x8(%ebp),%eax
810013d9:	89 50 04             	mov    %edx,0x4(%eax)
810013dc:	8b 45 08             	mov    0x8(%ebp),%eax
810013df:	8b 40 04             	mov    0x4(%eax),%eax
810013e2:	85 c0                	test   %eax,%eax
810013e4:	79 13                	jns    810013f9 <fgetc+0x5e>
810013e6:	83 ec 08             	sub    $0x8,%esp
810013e9:	ff 75 08             	pushl  0x8(%ebp)
810013ec:	ff 75 f4             	pushl  -0xc(%ebp)
810013ef:	e8 65 51 00 00       	call   81006559 <__srget_r>
810013f4:	83 c4 10             	add    $0x10,%esp
810013f7:	eb 13                	jmp    8100140c <fgetc+0x71>
810013f9:	8b 45 08             	mov    0x8(%ebp),%eax
810013fc:	8b 00                	mov    (%eax),%eax
810013fe:	8d 48 01             	lea    0x1(%eax),%ecx
81001401:	8b 55 08             	mov    0x8(%ebp),%edx
81001404:	89 0a                	mov    %ecx,(%edx)
81001406:	0f b6 00             	movzbl (%eax),%eax
81001409:	0f b6 c0             	movzbl %al,%eax
8100140c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100140f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001412:	c9                   	leave  
81001413:	c3                   	ret    

81001414 <_fgets_r>:
81001414:	55                   	push   %ebp
81001415:	89 e5                	mov    %esp,%ebp
81001417:	83 ec 28             	sub    $0x28,%esp
8100141a:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
8100141e:	7f 0a                	jg     8100142a <_fgets_r+0x16>
81001420:	b8 00 00 00 00       	mov    $0x0,%eax
81001425:	e9 46 01 00 00       	jmp    81001570 <_fgets_r+0x15c>
8100142a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100142d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001430:	8b 45 08             	mov    0x8(%ebp),%eax
81001433:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001436:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100143a:	74 18                	je     81001454 <_fgets_r+0x40>
8100143c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100143f:	8b 40 38             	mov    0x38(%eax),%eax
81001442:	85 c0                	test   %eax,%eax
81001444:	75 0e                	jne    81001454 <_fgets_r+0x40>
81001446:	83 ec 0c             	sub    $0xc,%esp
81001449:	ff 75 ec             	pushl  -0x14(%ebp)
8100144c:	e8 35 04 00 00       	call   81001886 <__sinit>
81001451:	83 c4 10             	add    $0x10,%esp
81001454:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
81001458:	8b 45 14             	mov    0x14(%ebp),%eax
8100145b:	8b 40 04             	mov    0x4(%eax),%eax
8100145e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001461:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001465:	75 34                	jne    8100149b <_fgets_r+0x87>
81001467:	83 ec 08             	sub    $0x8,%esp
8100146a:	ff 75 14             	pushl  0x14(%ebp)
8100146d:	ff 75 08             	pushl  0x8(%ebp)
81001470:	e8 e3 4e 00 00       	call   81006358 <__srefill_r>
81001475:	83 c4 10             	add    $0x10,%esp
81001478:	85 c0                	test   %eax,%eax
8100147a:	74 16                	je     81001492 <_fgets_r+0x7e>
8100147c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100147f:	3b 45 0c             	cmp    0xc(%ebp),%eax
81001482:	0f 85 de 00 00 00    	jne    81001566 <_fgets_r+0x152>
81001488:	b8 00 00 00 00       	mov    $0x0,%eax
8100148d:	e9 de 00 00 00       	jmp    81001570 <_fgets_r+0x15c>
81001492:	8b 45 14             	mov    0x14(%ebp),%eax
81001495:	8b 40 04             	mov    0x4(%eax),%eax
81001498:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100149b:	8b 45 14             	mov    0x14(%ebp),%eax
8100149e:	8b 00                	mov    (%eax),%eax
810014a0:	89 45 e8             	mov    %eax,-0x18(%ebp)
810014a3:	8b 45 10             	mov    0x10(%ebp),%eax
810014a6:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810014a9:	76 06                	jbe    810014b1 <_fgets_r+0x9d>
810014ab:	8b 45 10             	mov    0x10(%ebp),%eax
810014ae:	89 45 f4             	mov    %eax,-0xc(%ebp)
810014b1:	83 ec 04             	sub    $0x4,%esp
810014b4:	ff 75 f4             	pushl  -0xc(%ebp)
810014b7:	6a 0a                	push   $0xa
810014b9:	ff 75 e8             	pushl  -0x18(%ebp)
810014bc:	e8 bf 34 00 00       	call   81004980 <memchr>
810014c1:	83 c4 10             	add    $0x10,%esp
810014c4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810014c7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810014cb:	74 4a                	je     81001517 <_fgets_r+0x103>
810014cd:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810014d1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810014d4:	2b 45 e8             	sub    -0x18(%ebp),%eax
810014d7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810014da:	8b 45 14             	mov    0x14(%ebp),%eax
810014dd:	8b 40 04             	mov    0x4(%eax),%eax
810014e0:	2b 45 f4             	sub    -0xc(%ebp),%eax
810014e3:	89 c2                	mov    %eax,%edx
810014e5:	8b 45 14             	mov    0x14(%ebp),%eax
810014e8:	89 50 04             	mov    %edx,0x4(%eax)
810014eb:	8b 45 14             	mov    0x14(%ebp),%eax
810014ee:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810014f1:	89 10                	mov    %edx,(%eax)
810014f3:	83 ec 04             	sub    $0x4,%esp
810014f6:	ff 75 f4             	pushl  -0xc(%ebp)
810014f9:	ff 75 e8             	pushl  -0x18(%ebp)
810014fc:	ff 75 f0             	pushl  -0x10(%ebp)
810014ff:	e8 64 35 00 00       	call   81004a68 <memcpy>
81001504:	83 c4 10             	add    $0x10,%esp
81001507:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100150a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100150d:	01 d0                	add    %edx,%eax
8100150f:	c6 00 00             	movb   $0x0,(%eax)
81001512:	8b 45 0c             	mov    0xc(%ebp),%eax
81001515:	eb 59                	jmp    81001570 <_fgets_r+0x15c>
81001517:	8b 45 14             	mov    0x14(%ebp),%eax
8100151a:	8b 40 04             	mov    0x4(%eax),%eax
8100151d:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001520:	89 c2                	mov    %eax,%edx
81001522:	8b 45 14             	mov    0x14(%ebp),%eax
81001525:	89 50 04             	mov    %edx,0x4(%eax)
81001528:	8b 45 14             	mov    0x14(%ebp),%eax
8100152b:	8b 10                	mov    (%eax),%edx
8100152d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001530:	01 c2                	add    %eax,%edx
81001532:	8b 45 14             	mov    0x14(%ebp),%eax
81001535:	89 10                	mov    %edx,(%eax)
81001537:	83 ec 04             	sub    $0x4,%esp
8100153a:	ff 75 f4             	pushl  -0xc(%ebp)
8100153d:	ff 75 e8             	pushl  -0x18(%ebp)
81001540:	ff 75 f0             	pushl  -0x10(%ebp)
81001543:	e8 20 35 00 00       	call   81004a68 <memcpy>
81001548:	83 c4 10             	add    $0x10,%esp
8100154b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100154e:	01 45 f0             	add    %eax,-0x10(%ebp)
81001551:	8b 45 10             	mov    0x10(%ebp),%eax
81001554:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001557:	89 45 10             	mov    %eax,0x10(%ebp)
8100155a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100155e:	0f 85 f4 fe ff ff    	jne    81001458 <_fgets_r+0x44>
81001564:	eb 01                	jmp    81001567 <_fgets_r+0x153>
81001566:	90                   	nop
81001567:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100156a:	c6 00 00             	movb   $0x0,(%eax)
8100156d:	8b 45 0c             	mov    0xc(%ebp),%eax
81001570:	c9                   	leave  
81001571:	c3                   	ret    

81001572 <fgets>:
81001572:	55                   	push   %ebp
81001573:	89 e5                	mov    %esp,%ebp
81001575:	83 ec 08             	sub    $0x8,%esp
81001578:	a1 44 88 00 81       	mov    0x81008844,%eax
8100157d:	ff 75 10             	pushl  0x10(%ebp)
81001580:	ff 75 0c             	pushl  0xc(%ebp)
81001583:	ff 75 08             	pushl  0x8(%ebp)
81001586:	50                   	push   %eax
81001587:	e8 88 fe ff ff       	call   81001414 <_fgets_r>
8100158c:	83 c4 10             	add    $0x10,%esp
8100158f:	c9                   	leave  
81001590:	c3                   	ret    

81001591 <std>:
81001591:	55                   	push   %ebp
81001592:	89 e5                	mov    %esp,%ebp
81001594:	83 ec 08             	sub    $0x8,%esp
81001597:	8b 45 08             	mov    0x8(%ebp),%eax
8100159a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810015a0:	8b 45 08             	mov    0x8(%ebp),%eax
810015a3:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810015aa:	8b 45 08             	mov    0x8(%ebp),%eax
810015ad:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810015b4:	8b 45 0c             	mov    0xc(%ebp),%eax
810015b7:	89 c2                	mov    %eax,%edx
810015b9:	8b 45 08             	mov    0x8(%ebp),%eax
810015bc:	66 89 50 0c          	mov    %dx,0xc(%eax)
810015c0:	8b 45 08             	mov    0x8(%ebp),%eax
810015c3:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810015ca:	8b 45 10             	mov    0x10(%ebp),%eax
810015cd:	89 c2                	mov    %eax,%edx
810015cf:	8b 45 08             	mov    0x8(%ebp),%eax
810015d2:	66 89 50 0e          	mov    %dx,0xe(%eax)
810015d6:	8b 45 08             	mov    0x8(%ebp),%eax
810015d9:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810015e0:	8b 45 08             	mov    0x8(%ebp),%eax
810015e3:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810015ea:	8b 45 08             	mov    0x8(%ebp),%eax
810015ed:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810015f4:	8b 45 08             	mov    0x8(%ebp),%eax
810015f7:	83 c0 5c             	add    $0x5c,%eax
810015fa:	83 ec 04             	sub    $0x4,%esp
810015fd:	6a 08                	push   $0x8
810015ff:	6a 00                	push   $0x0
81001601:	50                   	push   %eax
81001602:	e8 36 35 00 00       	call   81004b3d <memset>
81001607:	83 c4 10             	add    $0x10,%esp
8100160a:	8b 45 08             	mov    0x8(%ebp),%eax
8100160d:	8b 55 08             	mov    0x8(%ebp),%edx
81001610:	89 50 1c             	mov    %edx,0x1c(%eax)
81001613:	8b 45 08             	mov    0x8(%ebp),%eax
81001616:	c7 40 20 25 68 00 81 	movl   $0x81006825,0x20(%eax)
8100161d:	8b 45 08             	mov    0x8(%ebp),%eax
81001620:	c7 40 24 73 68 00 81 	movl   $0x81006873,0x24(%eax)
81001627:	8b 45 08             	mov    0x8(%ebp),%eax
8100162a:	c7 40 28 ce 68 00 81 	movl   $0x810068ce,0x28(%eax)
81001631:	8b 45 08             	mov    0x8(%ebp),%eax
81001634:	c7 40 2c 18 69 00 81 	movl   $0x81006918,0x2c(%eax)
8100163b:	90                   	nop
8100163c:	c9                   	leave  
8100163d:	c3                   	ret    

8100163e <stdin_init>:
8100163e:	55                   	push   %ebp
8100163f:	89 e5                	mov    %esp,%ebp
81001641:	83 ec 08             	sub    $0x8,%esp
81001644:	83 ec 04             	sub    $0x4,%esp
81001647:	6a 00                	push   $0x0
81001649:	6a 04                	push   $0x4
8100164b:	ff 75 08             	pushl  0x8(%ebp)
8100164e:	e8 3e ff ff ff       	call   81001591 <std>
81001653:	83 c4 10             	add    $0x10,%esp
81001656:	90                   	nop
81001657:	c9                   	leave  
81001658:	c3                   	ret    

81001659 <stdout_init>:
81001659:	55                   	push   %ebp
8100165a:	89 e5                	mov    %esp,%ebp
8100165c:	83 ec 08             	sub    $0x8,%esp
8100165f:	83 ec 04             	sub    $0x4,%esp
81001662:	6a 01                	push   $0x1
81001664:	6a 09                	push   $0x9
81001666:	ff 75 08             	pushl  0x8(%ebp)
81001669:	e8 23 ff ff ff       	call   81001591 <std>
8100166e:	83 c4 10             	add    $0x10,%esp
81001671:	90                   	nop
81001672:	c9                   	leave  
81001673:	c3                   	ret    

81001674 <stderr_init>:
81001674:	55                   	push   %ebp
81001675:	89 e5                	mov    %esp,%ebp
81001677:	83 ec 08             	sub    $0x8,%esp
8100167a:	83 ec 04             	sub    $0x4,%esp
8100167d:	6a 02                	push   $0x2
8100167f:	6a 12                	push   $0x12
81001681:	ff 75 08             	pushl  0x8(%ebp)
81001684:	e8 08 ff ff ff       	call   81001591 <std>
81001689:	83 c4 10             	add    $0x10,%esp
8100168c:	90                   	nop
8100168d:	c9                   	leave  
8100168e:	c3                   	ret    

8100168f <__sfmoreglue>:
8100168f:	55                   	push   %ebp
81001690:	89 e5                	mov    %esp,%ebp
81001692:	53                   	push   %ebx
81001693:	83 ec 14             	sub    $0x14,%esp
81001696:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001699:	8d 43 ff             	lea    -0x1(%ebx),%eax
8100169c:	6b c0 68             	imul   $0x68,%eax,%eax
8100169f:	83 c0 74             	add    $0x74,%eax
810016a2:	83 ec 08             	sub    $0x8,%esp
810016a5:	50                   	push   %eax
810016a6:	ff 75 08             	pushl  0x8(%ebp)
810016a9:	e8 a2 2a 00 00       	call   81004150 <_malloc_r>
810016ae:	83 c4 10             	add    $0x10,%esp
810016b1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810016b4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810016b8:	75 07                	jne    810016c1 <__sfmoreglue+0x32>
810016ba:	b8 00 00 00 00       	mov    $0x0,%eax
810016bf:	eb 38                	jmp    810016f9 <__sfmoreglue+0x6a>
810016c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016c4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810016ca:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016cd:	89 58 04             	mov    %ebx,0x4(%eax)
810016d0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016d3:	8d 50 0c             	lea    0xc(%eax),%edx
810016d6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016d9:	89 50 08             	mov    %edx,0x8(%eax)
810016dc:	89 d8                	mov    %ebx,%eax
810016de:	6b c0 68             	imul   $0x68,%eax,%eax
810016e1:	8b 55 f4             	mov    -0xc(%ebp),%edx
810016e4:	83 c2 0c             	add    $0xc,%edx
810016e7:	83 ec 04             	sub    $0x4,%esp
810016ea:	50                   	push   %eax
810016eb:	6a 00                	push   $0x0
810016ed:	52                   	push   %edx
810016ee:	e8 4a 34 00 00       	call   81004b3d <memset>
810016f3:	83 c4 10             	add    $0x10,%esp
810016f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016f9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810016fc:	c9                   	leave  
810016fd:	c3                   	ret    

810016fe <__sfp>:
810016fe:	55                   	push   %ebp
810016ff:	89 e5                	mov    %esp,%ebp
81001701:	83 ec 18             	sub    $0x18,%esp
81001704:	e8 16 02 00 00       	call   8100191f <__sfp_lock_acquire>
81001709:	a1 84 80 00 81       	mov    0x81008084,%eax
8100170e:	8b 40 38             	mov    0x38(%eax),%eax
81001711:	85 c0                	test   %eax,%eax
81001713:	75 11                	jne    81001726 <__sfp+0x28>
81001715:	a1 84 80 00 81       	mov    0x81008084,%eax
8100171a:	83 ec 0c             	sub    $0xc,%esp
8100171d:	50                   	push   %eax
8100171e:	e8 63 01 00 00       	call   81001886 <__sinit>
81001723:	83 c4 10             	add    $0x10,%esp
81001726:	a1 84 80 00 81       	mov    0x81008084,%eax
8100172b:	05 e0 02 00 00       	add    $0x2e0,%eax
81001730:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001733:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001736:	8b 40 08             	mov    0x8(%eax),%eax
81001739:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100173c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100173f:	8b 40 04             	mov    0x4(%eax),%eax
81001742:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001745:	eb 10                	jmp    81001757 <__sfp+0x59>
81001747:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100174a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100174e:	66 85 c0             	test   %ax,%ax
81001751:	74 58                	je     810017ab <__sfp+0xad>
81001753:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
81001757:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
8100175b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100175f:	79 e6                	jns    81001747 <__sfp+0x49>
81001761:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001764:	8b 00                	mov    (%eax),%eax
81001766:	85 c0                	test   %eax,%eax
81001768:	75 1e                	jne    81001788 <__sfp+0x8a>
8100176a:	83 ec 08             	sub    $0x8,%esp
8100176d:	6a 04                	push   $0x4
8100176f:	ff 75 08             	pushl  0x8(%ebp)
81001772:	e8 18 ff ff ff       	call   8100168f <__sfmoreglue>
81001777:	83 c4 10             	add    $0x10,%esp
8100177a:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100177d:	89 02                	mov    %eax,(%edx)
8100177f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001782:	8b 00                	mov    (%eax),%eax
81001784:	85 c0                	test   %eax,%eax
81001786:	74 0a                	je     81001792 <__sfp+0x94>
81001788:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100178b:	8b 00                	mov    (%eax),%eax
8100178d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001790:	eb a1                	jmp    81001733 <__sfp+0x35>
81001792:	90                   	nop
81001793:	e8 8d 01 00 00       	call   81001925 <__sfp_lock_release>
81001798:	8b 45 08             	mov    0x8(%ebp),%eax
8100179b:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810017a1:	b8 00 00 00 00       	mov    $0x0,%eax
810017a6:	e9 9e 00 00 00       	jmp    81001849 <__sfp+0x14b>
810017ab:	90                   	nop
810017ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017af:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810017b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017b8:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
810017be:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017c1:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810017c8:	e8 58 01 00 00       	call   81001925 <__sfp_lock_release>
810017cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017d0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810017d6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017d9:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810017e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017e3:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810017ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017ed:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810017f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017f7:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810017fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001801:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001808:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100180b:	83 c0 5c             	add    $0x5c,%eax
8100180e:	83 ec 04             	sub    $0x4,%esp
81001811:	6a 08                	push   $0x8
81001813:	6a 00                	push   $0x0
81001815:	50                   	push   %eax
81001816:	e8 22 33 00 00       	call   81004b3d <memset>
8100181b:	83 c4 10             	add    $0x10,%esp
8100181e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001821:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001828:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100182b:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
81001832:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001835:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
8100183c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100183f:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
81001846:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001849:	c9                   	leave  
8100184a:	c3                   	ret    

8100184b <_cleanup_r>:
8100184b:	55                   	push   %ebp
8100184c:	89 e5                	mov    %esp,%ebp
8100184e:	83 ec 18             	sub    $0x18,%esp
81001851:	c7 45 f4 4f 0f 00 81 	movl   $0x81000f4f,-0xc(%ebp)
81001858:	83 ec 08             	sub    $0x8,%esp
8100185b:	ff 75 f4             	pushl  -0xc(%ebp)
8100185e:	ff 75 08             	pushl  0x8(%ebp)
81001861:	e8 68 15 00 00       	call   81002dce <_fwalk_reent>
81001866:	83 c4 10             	add    $0x10,%esp
81001869:	90                   	nop
8100186a:	c9                   	leave  
8100186b:	c3                   	ret    

8100186c <_cleanup>:
8100186c:	55                   	push   %ebp
8100186d:	89 e5                	mov    %esp,%ebp
8100186f:	83 ec 08             	sub    $0x8,%esp
81001872:	a1 84 80 00 81       	mov    0x81008084,%eax
81001877:	83 ec 0c             	sub    $0xc,%esp
8100187a:	50                   	push   %eax
8100187b:	e8 cb ff ff ff       	call   8100184b <_cleanup_r>
81001880:	83 c4 10             	add    $0x10,%esp
81001883:	90                   	nop
81001884:	c9                   	leave  
81001885:	c3                   	ret    

81001886 <__sinit>:
81001886:	55                   	push   %ebp
81001887:	89 e5                	mov    %esp,%ebp
81001889:	83 ec 08             	sub    $0x8,%esp
8100188c:	e8 9a 00 00 00       	call   8100192b <__sinit_lock_acquire>
81001891:	8b 45 08             	mov    0x8(%ebp),%eax
81001894:	8b 40 38             	mov    0x38(%eax),%eax
81001897:	85 c0                	test   %eax,%eax
81001899:	74 07                	je     810018a2 <__sinit+0x1c>
8100189b:	e8 91 00 00 00       	call   81001931 <__sinit_lock_release>
810018a0:	eb 7b                	jmp    8100191d <__sinit+0x97>
810018a2:	8b 45 08             	mov    0x8(%ebp),%eax
810018a5:	c7 40 3c 4b 18 00 81 	movl   $0x8100184b,0x3c(%eax)
810018ac:	8b 45 08             	mov    0x8(%ebp),%eax
810018af:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810018b6:	00 00 00 
810018b9:	8b 45 08             	mov    0x8(%ebp),%eax
810018bc:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
810018c3:	00 00 00 
810018c6:	8b 45 08             	mov    0x8(%ebp),%eax
810018c9:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
810018cf:	8b 45 08             	mov    0x8(%ebp),%eax
810018d2:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
810018d8:	8b 45 08             	mov    0x8(%ebp),%eax
810018db:	8b 40 04             	mov    0x4(%eax),%eax
810018de:	83 ec 0c             	sub    $0xc,%esp
810018e1:	50                   	push   %eax
810018e2:	e8 57 fd ff ff       	call   8100163e <stdin_init>
810018e7:	83 c4 10             	add    $0x10,%esp
810018ea:	8b 45 08             	mov    0x8(%ebp),%eax
810018ed:	8b 40 08             	mov    0x8(%eax),%eax
810018f0:	83 ec 0c             	sub    $0xc,%esp
810018f3:	50                   	push   %eax
810018f4:	e8 60 fd ff ff       	call   81001659 <stdout_init>
810018f9:	83 c4 10             	add    $0x10,%esp
810018fc:	8b 45 08             	mov    0x8(%ebp),%eax
810018ff:	8b 40 0c             	mov    0xc(%eax),%eax
81001902:	83 ec 0c             	sub    $0xc,%esp
81001905:	50                   	push   %eax
81001906:	e8 69 fd ff ff       	call   81001674 <stderr_init>
8100190b:	83 c4 10             	add    $0x10,%esp
8100190e:	8b 45 08             	mov    0x8(%ebp),%eax
81001911:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81001918:	e8 14 00 00 00       	call   81001931 <__sinit_lock_release>
8100191d:	c9                   	leave  
8100191e:	c3                   	ret    

8100191f <__sfp_lock_acquire>:
8100191f:	55                   	push   %ebp
81001920:	89 e5                	mov    %esp,%ebp
81001922:	90                   	nop
81001923:	5d                   	pop    %ebp
81001924:	c3                   	ret    

81001925 <__sfp_lock_release>:
81001925:	55                   	push   %ebp
81001926:	89 e5                	mov    %esp,%ebp
81001928:	90                   	nop
81001929:	5d                   	pop    %ebp
8100192a:	c3                   	ret    

8100192b <__sinit_lock_acquire>:
8100192b:	55                   	push   %ebp
8100192c:	89 e5                	mov    %esp,%ebp
8100192e:	90                   	nop
8100192f:	5d                   	pop    %ebp
81001930:	c3                   	ret    

81001931 <__sinit_lock_release>:
81001931:	55                   	push   %ebp
81001932:	89 e5                	mov    %esp,%ebp
81001934:	90                   	nop
81001935:	5d                   	pop    %ebp
81001936:	c3                   	ret    

81001937 <__fp_lock>:
81001937:	55                   	push   %ebp
81001938:	89 e5                	mov    %esp,%ebp
8100193a:	b8 00 00 00 00       	mov    $0x0,%eax
8100193f:	5d                   	pop    %ebp
81001940:	c3                   	ret    

81001941 <__fp_unlock>:
81001941:	55                   	push   %ebp
81001942:	89 e5                	mov    %esp,%ebp
81001944:	b8 00 00 00 00       	mov    $0x0,%eax
81001949:	5d                   	pop    %ebp
8100194a:	c3                   	ret    

8100194b <__fp_lock_all>:
8100194b:	55                   	push   %ebp
8100194c:	89 e5                	mov    %esp,%ebp
8100194e:	83 ec 08             	sub    $0x8,%esp
81001951:	e8 c9 ff ff ff       	call   8100191f <__sfp_lock_acquire>
81001956:	a1 44 88 00 81       	mov    0x81008844,%eax
8100195b:	83 ec 08             	sub    $0x8,%esp
8100195e:	68 37 19 00 81       	push   $0x81001937
81001963:	50                   	push   %eax
81001964:	e8 fd 13 00 00       	call   81002d66 <_fwalk>
81001969:	83 c4 10             	add    $0x10,%esp
8100196c:	90                   	nop
8100196d:	c9                   	leave  
8100196e:	c3                   	ret    

8100196f <__fp_unlock_all>:
8100196f:	55                   	push   %ebp
81001970:	89 e5                	mov    %esp,%ebp
81001972:	83 ec 08             	sub    $0x8,%esp
81001975:	a1 44 88 00 81       	mov    0x81008844,%eax
8100197a:	83 ec 08             	sub    $0x8,%esp
8100197d:	68 41 19 00 81       	push   $0x81001941
81001982:	50                   	push   %eax
81001983:	e8 de 13 00 00       	call   81002d66 <_fwalk>
81001988:	83 c4 10             	add    $0x10,%esp
8100198b:	e8 95 ff ff ff       	call   81001925 <__sfp_lock_release>
81001990:	90                   	nop
81001991:	c9                   	leave  
81001992:	c3                   	ret    

81001993 <_fopen_r>:
81001993:	55                   	push   %ebp
81001994:	89 e5                	mov    %esp,%ebp
81001996:	56                   	push   %esi
81001997:	53                   	push   %ebx
81001998:	83 ec 10             	sub    $0x10,%esp
8100199b:	83 ec 04             	sub    $0x4,%esp
8100199e:	8d 45 f0             	lea    -0x10(%ebp),%eax
810019a1:	50                   	push   %eax
810019a2:	ff 75 10             	pushl  0x10(%ebp)
810019a5:	ff 75 08             	pushl  0x8(%ebp)
810019a8:	e8 55 59 00 00       	call   81007302 <__sflags>
810019ad:	83 c4 10             	add    $0x10,%esp
810019b0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810019b3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810019b7:	75 0a                	jne    810019c3 <_fopen_r+0x30>
810019b9:	b8 00 00 00 00       	mov    $0x0,%eax
810019be:	e9 9e 00 00 00       	jmp    81001a61 <_fopen_r+0xce>
810019c3:	83 ec 0c             	sub    $0xc,%esp
810019c6:	ff 75 08             	pushl  0x8(%ebp)
810019c9:	e8 30 fd ff ff       	call   810016fe <__sfp>
810019ce:	83 c4 10             	add    $0x10,%esp
810019d1:	89 c3                	mov    %eax,%ebx
810019d3:	85 db                	test   %ebx,%ebx
810019d5:	75 0a                	jne    810019e1 <_fopen_r+0x4e>
810019d7:	b8 00 00 00 00       	mov    $0x0,%eax
810019dc:	e9 80 00 00 00       	jmp    81001a61 <_fopen_r+0xce>
810019e1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019e4:	68 b6 01 00 00       	push   $0x1b6
810019e9:	50                   	push   %eax
810019ea:	ff 75 0c             	pushl  0xc(%ebp)
810019ed:	ff 75 08             	pushl  0x8(%ebp)
810019f0:	e8 2b 3d 00 00       	call   81005720 <_open_r>
810019f5:	83 c4 10             	add    $0x10,%esp
810019f8:	89 c6                	mov    %eax,%esi
810019fa:	85 f6                	test   %esi,%esi
810019fc:	79 17                	jns    81001a15 <_fopen_r+0x82>
810019fe:	e8 1c ff ff ff       	call   8100191f <__sfp_lock_acquire>
81001a03:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81001a09:	e8 17 ff ff ff       	call   81001925 <__sfp_lock_release>
81001a0e:	b8 00 00 00 00       	mov    $0x0,%eax
81001a13:	eb 4c                	jmp    81001a61 <_fopen_r+0xce>
81001a15:	89 f0                	mov    %esi,%eax
81001a17:	66 89 43 0e          	mov    %ax,0xe(%ebx)
81001a1b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a1e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001a22:	89 5b 1c             	mov    %ebx,0x1c(%ebx)
81001a25:	c7 43 20 25 68 00 81 	movl   $0x81006825,0x20(%ebx)
81001a2c:	c7 43 24 73 68 00 81 	movl   $0x81006873,0x24(%ebx)
81001a33:	c7 43 28 ce 68 00 81 	movl   $0x810068ce,0x28(%ebx)
81001a3a:	c7 43 2c 18 69 00 81 	movl   $0x81006918,0x2c(%ebx)
81001a41:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001a45:	98                   	cwtl   
81001a46:	25 00 01 00 00       	and    $0x100,%eax
81001a4b:	85 c0                	test   %eax,%eax
81001a4d:	74 10                	je     81001a5f <_fopen_r+0xcc>
81001a4f:	6a 02                	push   $0x2
81001a51:	6a 00                	push   $0x0
81001a53:	53                   	push   %ebx
81001a54:	ff 75 08             	pushl  0x8(%ebp)
81001a57:	e8 1b 09 00 00       	call   81002377 <_fseek_r>
81001a5c:	83 c4 10             	add    $0x10,%esp
81001a5f:	89 d8                	mov    %ebx,%eax
81001a61:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001a64:	5b                   	pop    %ebx
81001a65:	5e                   	pop    %esi
81001a66:	5d                   	pop    %ebp
81001a67:	c3                   	ret    

81001a68 <fopen>:
81001a68:	55                   	push   %ebp
81001a69:	89 e5                	mov    %esp,%ebp
81001a6b:	83 ec 08             	sub    $0x8,%esp
81001a6e:	a1 44 88 00 81       	mov    0x81008844,%eax
81001a73:	83 ec 04             	sub    $0x4,%esp
81001a76:	ff 75 0c             	pushl  0xc(%ebp)
81001a79:	ff 75 08             	pushl  0x8(%ebp)
81001a7c:	50                   	push   %eax
81001a7d:	e8 11 ff ff ff       	call   81001993 <_fopen_r>
81001a82:	83 c4 10             	add    $0x10,%esp
81001a85:	c9                   	leave  
81001a86:	c3                   	ret    

81001a87 <_fiprintf_r>:
81001a87:	55                   	push   %ebp
81001a88:	89 e5                	mov    %esp,%ebp
81001a8a:	83 ec 18             	sub    $0x18,%esp
81001a8d:	8d 45 14             	lea    0x14(%ebp),%eax
81001a90:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001a93:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a96:	50                   	push   %eax
81001a97:	ff 75 10             	pushl  0x10(%ebp)
81001a9a:	ff 75 0c             	pushl  0xc(%ebp)
81001a9d:	ff 75 08             	pushl  0x8(%ebp)
81001aa0:	e8 3b 33 00 00       	call   81004de0 <_vfiprintf_r>
81001aa5:	83 c4 10             	add    $0x10,%esp
81001aa8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001aab:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001aae:	c9                   	leave  
81001aaf:	c3                   	ret    

81001ab0 <fiprintf>:
81001ab0:	55                   	push   %ebp
81001ab1:	89 e5                	mov    %esp,%ebp
81001ab3:	83 ec 18             	sub    $0x18,%esp
81001ab6:	8d 45 10             	lea    0x10(%ebp),%eax
81001ab9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001abc:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001abf:	a1 44 88 00 81       	mov    0x81008844,%eax
81001ac4:	52                   	push   %edx
81001ac5:	ff 75 0c             	pushl  0xc(%ebp)
81001ac8:	ff 75 08             	pushl  0x8(%ebp)
81001acb:	50                   	push   %eax
81001acc:	e8 0f 33 00 00       	call   81004de0 <_vfiprintf_r>
81001ad1:	83 c4 10             	add    $0x10,%esp
81001ad4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001ad7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ada:	c9                   	leave  
81001adb:	c3                   	ret    

81001adc <_fputs_r>:
81001adc:	55                   	push   %ebp
81001add:	89 e5                	mov    %esp,%ebp
81001adf:	83 ec 28             	sub    $0x28,%esp
81001ae2:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ae5:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001ae8:	83 ec 0c             	sub    $0xc,%esp
81001aeb:	ff 75 0c             	pushl  0xc(%ebp)
81001aee:	e8 fd 4f 00 00       	call   81006af0 <strlen>
81001af3:	83 c4 10             	add    $0x10,%esp
81001af6:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001af9:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001afc:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001aff:	8d 45 dc             	lea    -0x24(%ebp),%eax
81001b02:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001b05:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81001b0c:	8b 45 08             	mov    0x8(%ebp),%eax
81001b0f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001b12:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001b16:	74 18                	je     81001b30 <_fputs_r+0x54>
81001b18:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b1b:	8b 40 38             	mov    0x38(%eax),%eax
81001b1e:	85 c0                	test   %eax,%eax
81001b20:	75 0e                	jne    81001b30 <_fputs_r+0x54>
81001b22:	83 ec 0c             	sub    $0xc,%esp
81001b25:	ff 75 f4             	pushl  -0xc(%ebp)
81001b28:	e8 59 fd ff ff       	call   81001886 <__sinit>
81001b2d:	83 c4 10             	add    $0x10,%esp
81001b30:	8b 45 10             	mov    0x10(%ebp),%eax
81001b33:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001b37:	98                   	cwtl   
81001b38:	25 00 20 00 00       	and    $0x2000,%eax
81001b3d:	85 c0                	test   %eax,%eax
81001b3f:	75 24                	jne    81001b65 <_fputs_r+0x89>
81001b41:	8b 45 10             	mov    0x10(%ebp),%eax
81001b44:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001b48:	80 cc 20             	or     $0x20,%ah
81001b4b:	89 c2                	mov    %eax,%edx
81001b4d:	8b 45 10             	mov    0x10(%ebp),%eax
81001b50:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001b54:	8b 45 10             	mov    0x10(%ebp),%eax
81001b57:	8b 40 64             	mov    0x64(%eax),%eax
81001b5a:	80 e4 df             	and    $0xdf,%ah
81001b5d:	89 c2                	mov    %eax,%edx
81001b5f:	8b 45 10             	mov    0x10(%ebp),%eax
81001b62:	89 50 64             	mov    %edx,0x64(%eax)
81001b65:	83 ec 04             	sub    $0x4,%esp
81001b68:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81001b6b:	50                   	push   %eax
81001b6c:	ff 75 10             	pushl  0x10(%ebp)
81001b6f:	ff 75 08             	pushl  0x8(%ebp)
81001b72:	e8 51 0d 00 00       	call   810028c8 <__sfvwrite_r>
81001b77:	83 c4 10             	add    $0x10,%esp
81001b7a:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001b7d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001b80:	c9                   	leave  
81001b81:	c3                   	ret    

81001b82 <fputs>:
81001b82:	55                   	push   %ebp
81001b83:	89 e5                	mov    %esp,%ebp
81001b85:	83 ec 08             	sub    $0x8,%esp
81001b88:	a1 44 88 00 81       	mov    0x81008844,%eax
81001b8d:	83 ec 04             	sub    $0x4,%esp
81001b90:	ff 75 0c             	pushl  0xc(%ebp)
81001b93:	ff 75 08             	pushl  0x8(%ebp)
81001b96:	50                   	push   %eax
81001b97:	e8 40 ff ff ff       	call   81001adc <_fputs_r>
81001b9c:	83 c4 10             	add    $0x10,%esp
81001b9f:	c9                   	leave  
81001ba0:	c3                   	ret    

81001ba1 <_fread_r>:
81001ba1:	55                   	push   %ebp
81001ba2:	89 e5                	mov    %esp,%ebp
81001ba4:	57                   	push   %edi
81001ba5:	56                   	push   %esi
81001ba6:	53                   	push   %ebx
81001ba7:	83 ec 2c             	sub    $0x2c,%esp
81001baa:	8b 45 14             	mov    0x14(%ebp),%eax
81001bad:	0f af 45 10          	imul   0x10(%ebp),%eax
81001bb1:	89 c3                	mov    %eax,%ebx
81001bb3:	85 db                	test   %ebx,%ebx
81001bb5:	75 0a                	jne    81001bc1 <_fread_r+0x20>
81001bb7:	b8 00 00 00 00       	mov    $0x0,%eax
81001bbc:	e9 4d 02 00 00       	jmp    81001e0e <_fread_r+0x26d>
81001bc1:	8b 45 08             	mov    0x8(%ebp),%eax
81001bc4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001bc7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001bcb:	74 18                	je     81001be5 <_fread_r+0x44>
81001bcd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001bd0:	8b 40 38             	mov    0x38(%eax),%eax
81001bd3:	85 c0                	test   %eax,%eax
81001bd5:	75 0e                	jne    81001be5 <_fread_r+0x44>
81001bd7:	83 ec 0c             	sub    $0xc,%esp
81001bda:	ff 75 e4             	pushl  -0x1c(%ebp)
81001bdd:	e8 a4 fc ff ff       	call   81001886 <__sinit>
81001be2:	83 c4 10             	add    $0x10,%esp
81001be5:	8b 45 18             	mov    0x18(%ebp),%eax
81001be8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001bec:	98                   	cwtl   
81001bed:	25 00 20 00 00       	and    $0x2000,%eax
81001bf2:	85 c0                	test   %eax,%eax
81001bf4:	75 24                	jne    81001c1a <_fread_r+0x79>
81001bf6:	8b 45 18             	mov    0x18(%ebp),%eax
81001bf9:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001bfd:	80 cc 20             	or     $0x20,%ah
81001c00:	89 c2                	mov    %eax,%edx
81001c02:	8b 45 18             	mov    0x18(%ebp),%eax
81001c05:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001c09:	8b 45 18             	mov    0x18(%ebp),%eax
81001c0c:	8b 40 64             	mov    0x64(%eax),%eax
81001c0f:	80 e4 df             	and    $0xdf,%ah
81001c12:	89 c2                	mov    %eax,%edx
81001c14:	8b 45 18             	mov    0x18(%ebp),%eax
81001c17:	89 50 64             	mov    %edx,0x64(%eax)
81001c1a:	8b 45 18             	mov    0x18(%ebp),%eax
81001c1d:	8b 40 04             	mov    0x4(%eax),%eax
81001c20:	85 c0                	test   %eax,%eax
81001c22:	79 0a                	jns    81001c2e <_fread_r+0x8d>
81001c24:	8b 45 18             	mov    0x18(%ebp),%eax
81001c27:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001c2e:	89 5d e0             	mov    %ebx,-0x20(%ebp)
81001c31:	8b 75 0c             	mov    0xc(%ebp),%esi
81001c34:	8b 45 18             	mov    0x18(%ebp),%eax
81001c37:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001c3b:	98                   	cwtl   
81001c3c:	83 e0 02             	and    $0x2,%eax
81001c3f:	85 c0                	test   %eax,%eax
81001c41:	0f 84 88 01 00 00    	je     81001dcf <_fread_r+0x22e>
81001c47:	8b 45 18             	mov    0x18(%ebp),%eax
81001c4a:	8b 40 04             	mov    0x4(%eax),%eax
81001c4d:	39 c3                	cmp    %eax,%ebx
81001c4f:	0f 46 c3             	cmovbe %ebx,%eax
81001c52:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001c55:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001c58:	8b 45 18             	mov    0x18(%ebp),%eax
81001c5b:	8b 00                	mov    (%eax),%eax
81001c5d:	83 ec 04             	sub    $0x4,%esp
81001c60:	52                   	push   %edx
81001c61:	50                   	push   %eax
81001c62:	56                   	push   %esi
81001c63:	e8 00 2e 00 00       	call   81004a68 <memcpy>
81001c68:	83 c4 10             	add    $0x10,%esp
81001c6b:	8b 45 18             	mov    0x18(%ebp),%eax
81001c6e:	8b 10                	mov    (%eax),%edx
81001c70:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001c73:	01 c2                	add    %eax,%edx
81001c75:	8b 45 18             	mov    0x18(%ebp),%eax
81001c78:	89 10                	mov    %edx,(%eax)
81001c7a:	8b 45 18             	mov    0x18(%ebp),%eax
81001c7d:	8b 40 04             	mov    0x4(%eax),%eax
81001c80:	2b 45 dc             	sub    -0x24(%ebp),%eax
81001c83:	89 c2                	mov    %eax,%edx
81001c85:	8b 45 18             	mov    0x18(%ebp),%eax
81001c88:	89 50 04             	mov    %edx,0x4(%eax)
81001c8b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001c8e:	01 c6                	add    %eax,%esi
81001c90:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001c93:	29 c3                	sub    %eax,%ebx
81001c95:	8b 45 18             	mov    0x18(%ebp),%eax
81001c98:	8b 40 30             	mov    0x30(%eax),%eax
81001c9b:	85 c0                	test   %eax,%eax
81001c9d:	0f 84 d0 00 00 00    	je     81001d73 <_fread_r+0x1d2>
81001ca3:	85 db                	test   %ebx,%ebx
81001ca5:	0f 84 c8 00 00 00    	je     81001d73 <_fread_r+0x1d2>
81001cab:	8b 45 18             	mov    0x18(%ebp),%eax
81001cae:	8b 40 30             	mov    0x30(%eax),%eax
81001cb1:	8b 55 18             	mov    0x18(%ebp),%edx
81001cb4:	83 c2 40             	add    $0x40,%edx
81001cb7:	39 d0                	cmp    %edx,%eax
81001cb9:	74 15                	je     81001cd0 <_fread_r+0x12f>
81001cbb:	8b 45 18             	mov    0x18(%ebp),%eax
81001cbe:	8b 40 30             	mov    0x30(%eax),%eax
81001cc1:	83 ec 08             	sub    $0x8,%esp
81001cc4:	50                   	push   %eax
81001cc5:	ff 75 08             	pushl  0x8(%ebp)
81001cc8:	e8 6e 01 00 00       	call   81001e3b <_free_r>
81001ccd:	83 c4 10             	add    $0x10,%esp
81001cd0:	8b 45 18             	mov    0x18(%ebp),%eax
81001cd3:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001cda:	e9 94 00 00 00       	jmp    81001d73 <_fread_r+0x1d2>
81001cdf:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001ce6:	8b 45 18             	mov    0x18(%ebp),%eax
81001ce9:	8b 40 10             	mov    0x10(%eax),%eax
81001cec:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001cef:	8b 45 18             	mov    0x18(%ebp),%eax
81001cf2:	8b 00                	mov    (%eax),%eax
81001cf4:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001cf7:	8b 45 18             	mov    0x18(%ebp),%eax
81001cfa:	8b 40 14             	mov    0x14(%eax),%eax
81001cfd:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001d00:	8b 45 18             	mov    0x18(%ebp),%eax
81001d03:	89 70 10             	mov    %esi,0x10(%eax)
81001d06:	89 da                	mov    %ebx,%edx
81001d08:	8b 45 18             	mov    0x18(%ebp),%eax
81001d0b:	89 50 14             	mov    %edx,0x14(%eax)
81001d0e:	8b 45 18             	mov    0x18(%ebp),%eax
81001d11:	89 30                	mov    %esi,(%eax)
81001d13:	83 ec 08             	sub    $0x8,%esp
81001d16:	ff 75 18             	pushl  0x18(%ebp)
81001d19:	ff 75 08             	pushl  0x8(%ebp)
81001d1c:	e8 37 46 00 00       	call   81006358 <__srefill_r>
81001d21:	83 c4 10             	add    $0x10,%esp
81001d24:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001d27:	8b 45 18             	mov    0x18(%ebp),%eax
81001d2a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81001d2d:	89 50 10             	mov    %edx,0x10(%eax)
81001d30:	8b 45 18             	mov    0x18(%ebp),%eax
81001d33:	8b 55 cc             	mov    -0x34(%ebp),%edx
81001d36:	89 50 14             	mov    %edx,0x14(%eax)
81001d39:	8b 45 18             	mov    0x18(%ebp),%eax
81001d3c:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001d3f:	89 10                	mov    %edx,(%eax)
81001d41:	8b 45 18             	mov    0x18(%ebp),%eax
81001d44:	8b 40 04             	mov    0x4(%eax),%eax
81001d47:	29 c3                	sub    %eax,%ebx
81001d49:	8b 45 18             	mov    0x18(%ebp),%eax
81001d4c:	8b 40 04             	mov    0x4(%eax),%eax
81001d4f:	01 c6                	add    %eax,%esi
81001d51:	8b 45 18             	mov    0x18(%ebp),%eax
81001d54:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001d5b:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
81001d5f:	74 12                	je     81001d73 <_fread_r+0x1d2>
81001d61:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001d64:	29 d8                	sub    %ebx,%eax
81001d66:	ba 00 00 00 00       	mov    $0x0,%edx
81001d6b:	f7 75 10             	divl   0x10(%ebp)
81001d6e:	e9 9b 00 00 00       	jmp    81001e0e <_fread_r+0x26d>
81001d73:	85 db                	test   %ebx,%ebx
81001d75:	0f 85 64 ff ff ff    	jne    81001cdf <_fread_r+0x13e>
81001d7b:	e9 8b 00 00 00       	jmp    81001e0b <_fread_r+0x26a>
81001d80:	89 fa                	mov    %edi,%edx
81001d82:	8b 45 18             	mov    0x18(%ebp),%eax
81001d85:	8b 00                	mov    (%eax),%eax
81001d87:	83 ec 04             	sub    $0x4,%esp
81001d8a:	52                   	push   %edx
81001d8b:	50                   	push   %eax
81001d8c:	56                   	push   %esi
81001d8d:	e8 d6 2c 00 00       	call   81004a68 <memcpy>
81001d92:	83 c4 10             	add    $0x10,%esp
81001d95:	8b 45 18             	mov    0x18(%ebp),%eax
81001d98:	8b 00                	mov    (%eax),%eax
81001d9a:	89 fa                	mov    %edi,%edx
81001d9c:	01 c2                	add    %eax,%edx
81001d9e:	8b 45 18             	mov    0x18(%ebp),%eax
81001da1:	89 10                	mov    %edx,(%eax)
81001da3:	89 f8                	mov    %edi,%eax
81001da5:	01 c6                	add    %eax,%esi
81001da7:	89 f8                	mov    %edi,%eax
81001da9:	29 c3                	sub    %eax,%ebx
81001dab:	83 ec 08             	sub    $0x8,%esp
81001dae:	ff 75 18             	pushl  0x18(%ebp)
81001db1:	ff 75 08             	pushl  0x8(%ebp)
81001db4:	e8 9f 45 00 00       	call   81006358 <__srefill_r>
81001db9:	83 c4 10             	add    $0x10,%esp
81001dbc:	85 c0                	test   %eax,%eax
81001dbe:	74 0f                	je     81001dcf <_fread_r+0x22e>
81001dc0:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001dc3:	29 d8                	sub    %ebx,%eax
81001dc5:	ba 00 00 00 00       	mov    $0x0,%edx
81001dca:	f7 75 10             	divl   0x10(%ebp)
81001dcd:	eb 3f                	jmp    81001e0e <_fread_r+0x26d>
81001dcf:	8b 45 18             	mov    0x18(%ebp),%eax
81001dd2:	8b 78 04             	mov    0x4(%eax),%edi
81001dd5:	89 f8                	mov    %edi,%eax
81001dd7:	39 c3                	cmp    %eax,%ebx
81001dd9:	77 a5                	ja     81001d80 <_fread_r+0x1df>
81001ddb:	8b 45 18             	mov    0x18(%ebp),%eax
81001dde:	8b 00                	mov    (%eax),%eax
81001de0:	83 ec 04             	sub    $0x4,%esp
81001de3:	53                   	push   %ebx
81001de4:	50                   	push   %eax
81001de5:	56                   	push   %esi
81001de6:	e8 7d 2c 00 00       	call   81004a68 <memcpy>
81001deb:	83 c4 10             	add    $0x10,%esp
81001dee:	8b 45 18             	mov    0x18(%ebp),%eax
81001df1:	8b 40 04             	mov    0x4(%eax),%eax
81001df4:	29 d8                	sub    %ebx,%eax
81001df6:	89 c2                	mov    %eax,%edx
81001df8:	8b 45 18             	mov    0x18(%ebp),%eax
81001dfb:	89 50 04             	mov    %edx,0x4(%eax)
81001dfe:	8b 45 18             	mov    0x18(%ebp),%eax
81001e01:	8b 00                	mov    (%eax),%eax
81001e03:	8d 14 18             	lea    (%eax,%ebx,1),%edx
81001e06:	8b 45 18             	mov    0x18(%ebp),%eax
81001e09:	89 10                	mov    %edx,(%eax)
81001e0b:	8b 45 14             	mov    0x14(%ebp),%eax
81001e0e:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001e11:	5b                   	pop    %ebx
81001e12:	5e                   	pop    %esi
81001e13:	5f                   	pop    %edi
81001e14:	5d                   	pop    %ebp
81001e15:	c3                   	ret    

81001e16 <fread>:
81001e16:	55                   	push   %ebp
81001e17:	89 e5                	mov    %esp,%ebp
81001e19:	83 ec 08             	sub    $0x8,%esp
81001e1c:	a1 44 88 00 81       	mov    0x81008844,%eax
81001e21:	83 ec 0c             	sub    $0xc,%esp
81001e24:	ff 75 14             	pushl  0x14(%ebp)
81001e27:	ff 75 10             	pushl  0x10(%ebp)
81001e2a:	ff 75 0c             	pushl  0xc(%ebp)
81001e2d:	ff 75 08             	pushl  0x8(%ebp)
81001e30:	50                   	push   %eax
81001e31:	e8 6b fd ff ff       	call   81001ba1 <_fread_r>
81001e36:	83 c4 20             	add    $0x20,%esp
81001e39:	c9                   	leave  
81001e3a:	c3                   	ret    

81001e3b <_free_r>:
81001e3b:	55                   	push   %ebp
81001e3c:	89 e5                	mov    %esp,%ebp
81001e3e:	53                   	push   %ebx
81001e3f:	83 ec 34             	sub    $0x34,%esp
81001e42:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001e46:	0f 84 c4 03 00 00    	je     81002210 <_free_r+0x3d5>
81001e4c:	83 ec 0c             	sub    $0xc,%esp
81001e4f:	ff 75 08             	pushl  0x8(%ebp)
81001e52:	e8 6e 2d 00 00       	call   81004bc5 <__malloc_lock>
81001e57:	83 c4 10             	add    $0x10,%esp
81001e5a:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e5d:	83 e8 08             	sub    $0x8,%eax
81001e60:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001e63:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e66:	8b 40 04             	mov    0x4(%eax),%eax
81001e69:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001e6c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e6f:	83 e0 fe             	and    $0xfffffffe,%eax
81001e72:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001e75:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001e78:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e7b:	01 d0                	add    %edx,%eax
81001e7d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001e80:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001e83:	8b 40 04             	mov    0x4(%eax),%eax
81001e86:	83 e0 fc             	and    $0xfffffffc,%eax
81001e89:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001e8c:	b8 60 88 00 81       	mov    $0x81008860,%eax
81001e91:	8b 40 08             	mov    0x8(%eax),%eax
81001e94:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81001e97:	0f 85 94 00 00 00    	jne    81001f31 <_free_r+0xf6>
81001e9d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001ea0:	01 45 f0             	add    %eax,-0x10(%ebp)
81001ea3:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ea6:	83 e0 01             	and    $0x1,%eax
81001ea9:	85 c0                	test   %eax,%eax
81001eab:	75 3a                	jne    81001ee7 <_free_r+0xac>
81001ead:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001eb0:	8b 00                	mov    (%eax),%eax
81001eb2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001eb5:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001eb8:	f7 d8                	neg    %eax
81001eba:	01 45 f4             	add    %eax,-0xc(%ebp)
81001ebd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001ec0:	01 45 f0             	add    %eax,-0x10(%ebp)
81001ec3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ec6:	8b 40 0c             	mov    0xc(%eax),%eax
81001ec9:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001ecc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ecf:	8b 40 08             	mov    0x8(%eax),%eax
81001ed2:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001ed5:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001ed8:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001edb:	89 50 0c             	mov    %edx,0xc(%eax)
81001ede:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ee1:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001ee4:	89 50 08             	mov    %edx,0x8(%eax)
81001ee7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001eea:	83 c8 01             	or     $0x1,%eax
81001eed:	89 c2                	mov    %eax,%edx
81001eef:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ef2:	89 50 04             	mov    %edx,0x4(%eax)
81001ef5:	ba 60 88 00 81       	mov    $0x81008860,%edx
81001efa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001efd:	89 42 08             	mov    %eax,0x8(%edx)
81001f00:	a1 68 8c 00 81       	mov    0x81008c68,%eax
81001f05:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001f08:	72 14                	jb     81001f1e <_free_r+0xe3>
81001f0a:	a1 40 92 00 81       	mov    0x81009240,%eax
81001f0f:	83 ec 08             	sub    $0x8,%esp
81001f12:	50                   	push   %eax
81001f13:	ff 75 08             	pushl  0x8(%ebp)
81001f16:	e8 fb 02 00 00       	call   81002216 <_malloc_trim_r>
81001f1b:	83 c4 10             	add    $0x10,%esp
81001f1e:	83 ec 0c             	sub    $0xc,%esp
81001f21:	ff 75 08             	pushl  0x8(%ebp)
81001f24:	e8 a2 2c 00 00       	call   81004bcb <__malloc_unlock>
81001f29:	83 c4 10             	add    $0x10,%esp
81001f2c:	e9 e0 02 00 00       	jmp    81002211 <_free_r+0x3d6>
81001f31:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001f34:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001f37:	89 50 04             	mov    %edx,0x4(%eax)
81001f3a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001f41:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f44:	83 e0 01             	and    $0x1,%eax
81001f47:	85 c0                	test   %eax,%eax
81001f49:	75 52                	jne    81001f9d <_free_r+0x162>
81001f4b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f4e:	8b 00                	mov    (%eax),%eax
81001f50:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001f53:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001f56:	f7 d8                	neg    %eax
81001f58:	01 45 f4             	add    %eax,-0xc(%ebp)
81001f5b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001f5e:	01 45 f0             	add    %eax,-0x10(%ebp)
81001f61:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f64:	8b 40 08             	mov    0x8(%eax),%eax
81001f67:	ba 68 88 00 81       	mov    $0x81008868,%edx
81001f6c:	39 d0                	cmp    %edx,%eax
81001f6e:	75 09                	jne    81001f79 <_free_r+0x13e>
81001f70:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001f77:	eb 24                	jmp    81001f9d <_free_r+0x162>
81001f79:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f7c:	8b 40 0c             	mov    0xc(%eax),%eax
81001f7f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001f82:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f85:	8b 40 08             	mov    0x8(%eax),%eax
81001f88:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001f8b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001f8e:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001f91:	89 50 0c             	mov    %edx,0xc(%eax)
81001f94:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001f97:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001f9a:	89 50 08             	mov    %edx,0x8(%eax)
81001f9d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001fa0:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001fa3:	01 d0                	add    %edx,%eax
81001fa5:	8b 40 04             	mov    0x4(%eax),%eax
81001fa8:	83 e0 01             	and    $0x1,%eax
81001fab:	85 c0                	test   %eax,%eax
81001fad:	75 75                	jne    81002024 <_free_r+0x1e9>
81001faf:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001fb2:	01 45 f0             	add    %eax,-0x10(%ebp)
81001fb5:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001fb9:	75 45                	jne    81002000 <_free_r+0x1c5>
81001fbb:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001fbe:	8b 40 08             	mov    0x8(%eax),%eax
81001fc1:	ba 68 88 00 81       	mov    $0x81008868,%edx
81001fc6:	39 d0                	cmp    %edx,%eax
81001fc8:	75 36                	jne    81002000 <_free_r+0x1c5>
81001fca:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001fd1:	b8 68 88 00 81       	mov    $0x81008868,%eax
81001fd6:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001fd9:	89 50 0c             	mov    %edx,0xc(%eax)
81001fdc:	ba 68 88 00 81       	mov    $0x81008868,%edx
81001fe1:	8b 40 0c             	mov    0xc(%eax),%eax
81001fe4:	89 42 08             	mov    %eax,0x8(%edx)
81001fe7:	ba 68 88 00 81       	mov    $0x81008868,%edx
81001fec:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fef:	89 50 0c             	mov    %edx,0xc(%eax)
81001ff2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ff5:	8b 50 0c             	mov    0xc(%eax),%edx
81001ff8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ffb:	89 50 08             	mov    %edx,0x8(%eax)
81001ffe:	eb 24                	jmp    81002024 <_free_r+0x1e9>
81002000:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002003:	8b 40 0c             	mov    0xc(%eax),%eax
81002006:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002009:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100200c:	8b 40 08             	mov    0x8(%eax),%eax
8100200f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002012:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002015:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002018:	89 50 0c             	mov    %edx,0xc(%eax)
8100201b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100201e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002021:	89 50 08             	mov    %edx,0x8(%eax)
81002024:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002027:	83 c8 01             	or     $0x1,%eax
8100202a:	89 c2                	mov    %eax,%edx
8100202c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100202f:	89 50 04             	mov    %edx,0x4(%eax)
81002032:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002035:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002038:	01 c2                	add    %eax,%edx
8100203a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100203d:	89 02                	mov    %eax,(%edx)
8100203f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002043:	0f 85 b7 01 00 00    	jne    81002200 <_free_r+0x3c5>
81002049:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81002050:	77 7f                	ja     810020d1 <_free_r+0x296>
81002052:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002055:	c1 e8 03             	shr    $0x3,%eax
81002058:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100205b:	b8 60 88 00 81       	mov    $0x81008860,%eax
81002060:	8b 58 04             	mov    0x4(%eax),%ebx
81002063:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002066:	8d 50 03             	lea    0x3(%eax),%edx
81002069:	85 c0                	test   %eax,%eax
8100206b:	0f 48 c2             	cmovs  %edx,%eax
8100206e:	c1 f8 02             	sar    $0x2,%eax
81002071:	ba 01 00 00 00       	mov    $0x1,%edx
81002076:	89 c1                	mov    %eax,%ecx
81002078:	d3 e2                	shl    %cl,%edx
8100207a:	89 d0                	mov    %edx,%eax
8100207c:	ba 60 88 00 81       	mov    $0x81008860,%edx
81002081:	09 d8                	or     %ebx,%eax
81002083:	89 42 04             	mov    %eax,0x4(%edx)
81002086:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002089:	83 c0 01             	add    $0x1,%eax
8100208c:	01 c0                	add    %eax,%eax
8100208e:	c1 e0 02             	shl    $0x2,%eax
81002091:	05 60 88 00 81       	add    $0x81008860,%eax
81002096:	83 e8 08             	sub    $0x8,%eax
81002099:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100209c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100209f:	8b 40 08             	mov    0x8(%eax),%eax
810020a2:	89 45 e8             	mov    %eax,-0x18(%ebp)
810020a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020a8:	8b 55 ec             	mov    -0x14(%ebp),%edx
810020ab:	89 50 0c             	mov    %edx,0xc(%eax)
810020ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020b1:	8b 55 e8             	mov    -0x18(%ebp),%edx
810020b4:	89 50 08             	mov    %edx,0x8(%eax)
810020b7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810020ba:	8b 55 f4             	mov    -0xc(%ebp),%edx
810020bd:	89 50 08             	mov    %edx,0x8(%eax)
810020c0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810020c3:	8b 50 08             	mov    0x8(%eax),%edx
810020c6:	8b 45 e8             	mov    -0x18(%ebp),%eax
810020c9:	89 50 0c             	mov    %edx,0xc(%eax)
810020cc:	e9 2f 01 00 00       	jmp    81002200 <_free_r+0x3c5>
810020d1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020d4:	c1 e8 09             	shr    $0x9,%eax
810020d7:	85 c0                	test   %eax,%eax
810020d9:	75 08                	jne    810020e3 <_free_r+0x2a8>
810020db:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020de:	c1 e8 03             	shr    $0x3,%eax
810020e1:	eb 77                	jmp    8100215a <_free_r+0x31f>
810020e3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020e6:	c1 e8 09             	shr    $0x9,%eax
810020e9:	83 f8 04             	cmp    $0x4,%eax
810020ec:	77 0b                	ja     810020f9 <_free_r+0x2be>
810020ee:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020f1:	c1 e8 06             	shr    $0x6,%eax
810020f4:	83 c0 38             	add    $0x38,%eax
810020f7:	eb 61                	jmp    8100215a <_free_r+0x31f>
810020f9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020fc:	c1 e8 09             	shr    $0x9,%eax
810020ff:	83 f8 14             	cmp    $0x14,%eax
81002102:	77 0b                	ja     8100210f <_free_r+0x2d4>
81002104:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002107:	c1 e8 09             	shr    $0x9,%eax
8100210a:	83 c0 5b             	add    $0x5b,%eax
8100210d:	eb 4b                	jmp    8100215a <_free_r+0x31f>
8100210f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002112:	c1 e8 09             	shr    $0x9,%eax
81002115:	83 f8 54             	cmp    $0x54,%eax
81002118:	77 0b                	ja     81002125 <_free_r+0x2ea>
8100211a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100211d:	c1 e8 0c             	shr    $0xc,%eax
81002120:	83 c0 6e             	add    $0x6e,%eax
81002123:	eb 35                	jmp    8100215a <_free_r+0x31f>
81002125:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002128:	c1 e8 09             	shr    $0x9,%eax
8100212b:	3d 54 01 00 00       	cmp    $0x154,%eax
81002130:	77 0b                	ja     8100213d <_free_r+0x302>
81002132:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002135:	c1 e8 0f             	shr    $0xf,%eax
81002138:	83 c0 77             	add    $0x77,%eax
8100213b:	eb 1d                	jmp    8100215a <_free_r+0x31f>
8100213d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002140:	c1 e8 09             	shr    $0x9,%eax
81002143:	3d 54 05 00 00       	cmp    $0x554,%eax
81002148:	77 0b                	ja     81002155 <_free_r+0x31a>
8100214a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100214d:	c1 e8 12             	shr    $0x12,%eax
81002150:	83 c0 7c             	add    $0x7c,%eax
81002153:	eb 05                	jmp    8100215a <_free_r+0x31f>
81002155:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100215a:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100215d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002160:	83 c0 01             	add    $0x1,%eax
81002163:	01 c0                	add    %eax,%eax
81002165:	c1 e0 02             	shl    $0x2,%eax
81002168:	05 60 88 00 81       	add    $0x81008860,%eax
8100216d:	83 e8 08             	sub    $0x8,%eax
81002170:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002173:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002176:	8b 40 08             	mov    0x8(%eax),%eax
81002179:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100217c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100217f:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002182:	75 36                	jne    810021ba <_free_r+0x37f>
81002184:	b8 60 88 00 81       	mov    $0x81008860,%eax
81002189:	8b 58 04             	mov    0x4(%eax),%ebx
8100218c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100218f:	8d 50 03             	lea    0x3(%eax),%edx
81002192:	85 c0                	test   %eax,%eax
81002194:	0f 48 c2             	cmovs  %edx,%eax
81002197:	c1 f8 02             	sar    $0x2,%eax
8100219a:	ba 01 00 00 00       	mov    $0x1,%edx
8100219f:	89 c1                	mov    %eax,%ecx
810021a1:	d3 e2                	shl    %cl,%edx
810021a3:	89 d0                	mov    %edx,%eax
810021a5:	ba 60 88 00 81       	mov    $0x81008860,%edx
810021aa:	09 d8                	or     %ebx,%eax
810021ac:	89 42 04             	mov    %eax,0x4(%edx)
810021af:	eb 28                	jmp    810021d9 <_free_r+0x39e>
810021b1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810021b4:	8b 40 08             	mov    0x8(%eax),%eax
810021b7:	89 45 e8             	mov    %eax,-0x18(%ebp)
810021ba:	8b 45 e8             	mov    -0x18(%ebp),%eax
810021bd:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810021c0:	74 0e                	je     810021d0 <_free_r+0x395>
810021c2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810021c5:	8b 40 04             	mov    0x4(%eax),%eax
810021c8:	83 e0 fc             	and    $0xfffffffc,%eax
810021cb:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810021ce:	72 e1                	jb     810021b1 <_free_r+0x376>
810021d0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810021d3:	8b 40 0c             	mov    0xc(%eax),%eax
810021d6:	89 45 ec             	mov    %eax,-0x14(%ebp)
810021d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810021dc:	8b 55 ec             	mov    -0x14(%ebp),%edx
810021df:	89 50 0c             	mov    %edx,0xc(%eax)
810021e2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810021e5:	8b 55 e8             	mov    -0x18(%ebp),%edx
810021e8:	89 50 08             	mov    %edx,0x8(%eax)
810021eb:	8b 45 ec             	mov    -0x14(%ebp),%eax
810021ee:	8b 55 f4             	mov    -0xc(%ebp),%edx
810021f1:	89 50 08             	mov    %edx,0x8(%eax)
810021f4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810021f7:	8b 50 08             	mov    0x8(%eax),%edx
810021fa:	8b 45 e8             	mov    -0x18(%ebp),%eax
810021fd:	89 50 0c             	mov    %edx,0xc(%eax)
81002200:	83 ec 0c             	sub    $0xc,%esp
81002203:	ff 75 08             	pushl  0x8(%ebp)
81002206:	e8 c0 29 00 00       	call   81004bcb <__malloc_unlock>
8100220b:	83 c4 10             	add    $0x10,%esp
8100220e:	eb 01                	jmp    81002211 <_free_r+0x3d6>
81002210:	90                   	nop
81002211:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002214:	c9                   	leave  
81002215:	c3                   	ret    

81002216 <_malloc_trim_r>:
81002216:	55                   	push   %ebp
81002217:	89 e5                	mov    %esp,%ebp
81002219:	83 ec 28             	sub    $0x28,%esp
8100221c:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81002223:	83 ec 0c             	sub    $0xc,%esp
81002226:	ff 75 08             	pushl  0x8(%ebp)
81002229:	e8 97 29 00 00       	call   81004bc5 <__malloc_lock>
8100222e:	83 c4 10             	add    $0x10,%esp
81002231:	b8 60 88 00 81       	mov    $0x81008860,%eax
81002236:	8b 40 08             	mov    0x8(%eax),%eax
81002239:	8b 40 04             	mov    0x4(%eax),%eax
8100223c:	83 e0 fc             	and    $0xfffffffc,%eax
8100223f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002242:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002245:	2b 45 0c             	sub    0xc(%ebp),%eax
81002248:	89 c2                	mov    %eax,%edx
8100224a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100224d:	01 d0                	add    %edx,%eax
8100224f:	83 e8 11             	sub    $0x11,%eax
81002252:	ba 00 00 00 00       	mov    $0x0,%edx
81002257:	f7 75 f4             	divl   -0xc(%ebp)
8100225a:	83 e8 01             	sub    $0x1,%eax
8100225d:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81002261:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002264:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002267:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100226a:	7d 18                	jge    81002284 <_malloc_trim_r+0x6e>
8100226c:	83 ec 0c             	sub    $0xc,%esp
8100226f:	ff 75 08             	pushl  0x8(%ebp)
81002272:	e8 54 29 00 00       	call   81004bcb <__malloc_unlock>
81002277:	83 c4 10             	add    $0x10,%esp
8100227a:	b8 00 00 00 00       	mov    $0x0,%eax
8100227f:	e9 f1 00 00 00       	jmp    81002375 <_malloc_trim_r+0x15f>
81002284:	83 ec 08             	sub    $0x8,%esp
81002287:	6a 00                	push   $0x0
81002289:	ff 75 08             	pushl  0x8(%ebp)
8100228c:	e8 48 43 00 00       	call   810065d9 <_sbrk_r>
81002291:	83 c4 10             	add    $0x10,%esp
81002294:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002297:	b8 60 88 00 81       	mov    $0x81008860,%eax
8100229c:	8b 50 08             	mov    0x8(%eax),%edx
8100229f:	8b 45 f0             	mov    -0x10(%ebp),%eax
810022a2:	01 d0                	add    %edx,%eax
810022a4:	39 45 e8             	cmp    %eax,-0x18(%ebp)
810022a7:	74 18                	je     810022c1 <_malloc_trim_r+0xab>
810022a9:	83 ec 0c             	sub    $0xc,%esp
810022ac:	ff 75 08             	pushl  0x8(%ebp)
810022af:	e8 17 29 00 00       	call   81004bcb <__malloc_unlock>
810022b4:	83 c4 10             	add    $0x10,%esp
810022b7:	b8 00 00 00 00       	mov    $0x0,%eax
810022bc:	e9 b4 00 00 00       	jmp    81002375 <_malloc_trim_r+0x15f>
810022c1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810022c4:	f7 d8                	neg    %eax
810022c6:	83 ec 08             	sub    $0x8,%esp
810022c9:	50                   	push   %eax
810022ca:	ff 75 08             	pushl  0x8(%ebp)
810022cd:	e8 07 43 00 00       	call   810065d9 <_sbrk_r>
810022d2:	83 c4 10             	add    $0x10,%esp
810022d5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810022d8:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810022dc:	75 61                	jne    8100233f <_malloc_trim_r+0x129>
810022de:	83 ec 08             	sub    $0x8,%esp
810022e1:	6a 00                	push   $0x0
810022e3:	ff 75 08             	pushl  0x8(%ebp)
810022e6:	e8 ee 42 00 00       	call   810065d9 <_sbrk_r>
810022eb:	83 c4 10             	add    $0x10,%esp
810022ee:	89 45 e8             	mov    %eax,-0x18(%ebp)
810022f1:	b8 60 88 00 81       	mov    $0x81008860,%eax
810022f6:	8b 50 08             	mov    0x8(%eax),%edx
810022f9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810022fc:	29 d0                	sub    %edx,%eax
810022fe:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002301:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81002305:	7e 23                	jle    8100232a <_malloc_trim_r+0x114>
81002307:	8b 15 6c 8c 00 81    	mov    0x81008c6c,%edx
8100230d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002310:	29 d0                	sub    %edx,%eax
81002312:	a3 60 92 00 81       	mov    %eax,0x81009260
81002317:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100231a:	83 c8 01             	or     $0x1,%eax
8100231d:	89 c2                	mov    %eax,%edx
8100231f:	b8 60 88 00 81       	mov    $0x81008860,%eax
81002324:	8b 40 08             	mov    0x8(%eax),%eax
81002327:	89 50 04             	mov    %edx,0x4(%eax)
8100232a:	83 ec 0c             	sub    $0xc,%esp
8100232d:	ff 75 08             	pushl  0x8(%ebp)
81002330:	e8 96 28 00 00       	call   81004bcb <__malloc_unlock>
81002335:	83 c4 10             	add    $0x10,%esp
81002338:	b8 00 00 00 00       	mov    $0x0,%eax
8100233d:	eb 36                	jmp    81002375 <_malloc_trim_r+0x15f>
8100233f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002342:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002345:	83 c8 01             	or     $0x1,%eax
81002348:	89 c2                	mov    %eax,%edx
8100234a:	b8 60 88 00 81       	mov    $0x81008860,%eax
8100234f:	8b 40 08             	mov    0x8(%eax),%eax
81002352:	89 50 04             	mov    %edx,0x4(%eax)
81002355:	a1 60 92 00 81       	mov    0x81009260,%eax
8100235a:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100235d:	a3 60 92 00 81       	mov    %eax,0x81009260
81002362:	83 ec 0c             	sub    $0xc,%esp
81002365:	ff 75 08             	pushl  0x8(%ebp)
81002368:	e8 5e 28 00 00       	call   81004bcb <__malloc_unlock>
8100236d:	83 c4 10             	add    $0x10,%esp
81002370:	b8 01 00 00 00       	mov    $0x1,%eax
81002375:	c9                   	leave  
81002376:	c3                   	ret    

81002377 <_fseek_r>:
81002377:	55                   	push   %ebp
81002378:	89 e5                	mov    %esp,%ebp
8100237a:	83 ec 08             	sub    $0x8,%esp
8100237d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002380:	ff 75 14             	pushl  0x14(%ebp)
81002383:	ff 75 10             	pushl  0x10(%ebp)
81002386:	50                   	push   %eax
81002387:	ff 75 08             	pushl  0x8(%ebp)
8100238a:	e8 25 00 00 00       	call   810023b4 <_fseeko_r>
8100238f:	83 c4 10             	add    $0x10,%esp
81002392:	c9                   	leave  
81002393:	c3                   	ret    

81002394 <fseek>:
81002394:	55                   	push   %ebp
81002395:	89 e5                	mov    %esp,%ebp
81002397:	83 ec 08             	sub    $0x8,%esp
8100239a:	8b 55 08             	mov    0x8(%ebp),%edx
8100239d:	a1 44 88 00 81       	mov    0x81008844,%eax
810023a2:	ff 75 10             	pushl  0x10(%ebp)
810023a5:	ff 75 0c             	pushl  0xc(%ebp)
810023a8:	52                   	push   %edx
810023a9:	50                   	push   %eax
810023aa:	e8 c8 ff ff ff       	call   81002377 <_fseek_r>
810023af:	83 c4 10             	add    $0x10,%esp
810023b2:	c9                   	leave  
810023b3:	c3                   	ret    

810023b4 <_fseeko_r>:
810023b4:	55                   	push   %ebp
810023b5:	89 e5                	mov    %esp,%ebp
810023b7:	56                   	push   %esi
810023b8:	53                   	push   %ebx
810023b9:	83 ec 60             	sub    $0x60,%esp
810023bc:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810023bf:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810023c6:	8b 45 08             	mov    0x8(%ebp),%eax
810023c9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810023cc:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810023d0:	74 18                	je     810023ea <_fseeko_r+0x36>
810023d2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810023d5:	8b 40 38             	mov    0x38(%eax),%eax
810023d8:	85 c0                	test   %eax,%eax
810023da:	75 0e                	jne    810023ea <_fseeko_r+0x36>
810023dc:	83 ec 0c             	sub    $0xc,%esp
810023df:	ff 75 e4             	pushl  -0x1c(%ebp)
810023e2:	e8 9f f4 ff ff       	call   81001886 <__sinit>
810023e7:	83 c4 10             	add    $0x10,%esp
810023ea:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810023ee:	98                   	cwtl   
810023ef:	25 00 01 00 00       	and    $0x100,%eax
810023f4:	85 c0                	test   %eax,%eax
810023f6:	74 1b                	je     81002413 <_fseeko_r+0x5f>
810023f8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810023fc:	98                   	cwtl   
810023fd:	83 e0 08             	and    $0x8,%eax
81002400:	85 c0                	test   %eax,%eax
81002402:	74 0f                	je     81002413 <_fseeko_r+0x5f>
81002404:	83 ec 08             	sub    $0x8,%esp
81002407:	53                   	push   %ebx
81002408:	ff 75 08             	pushl  0x8(%ebp)
8100240b:	e8 89 ee ff ff       	call   81001299 <_fflush_r>
81002410:	83 c4 10             	add    $0x10,%esp
81002413:	8b 43 28             	mov    0x28(%ebx),%eax
81002416:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002419:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100241d:	75 13                	jne    81002432 <_fseeko_r+0x7e>
8100241f:	8b 45 08             	mov    0x8(%ebp),%eax
81002422:	c7 00 1d 00 00 00    	movl   $0x1d,(%eax)
81002428:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100242d:	e9 2c 04 00 00       	jmp    8100285e <_fseeko_r+0x4aa>
81002432:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81002436:	0f 84 bc 00 00 00    	je     810024f8 <_fseeko_r+0x144>
8100243c:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81002440:	0f 8f bb 00 00 00    	jg     81002501 <_fseeko_r+0x14d>
81002446:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100244a:	0f 84 a8 00 00 00    	je     810024f8 <_fseeko_r+0x144>
81002450:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81002454:	0f 85 a7 00 00 00    	jne    81002501 <_fseeko_r+0x14d>
8100245a:	83 ec 08             	sub    $0x8,%esp
8100245d:	53                   	push   %ebx
8100245e:	ff 75 08             	pushl  0x8(%ebp)
81002461:	e8 33 ee ff ff       	call   81001299 <_fflush_r>
81002466:	83 c4 10             	add    $0x10,%esp
81002469:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100246d:	98                   	cwtl   
8100246e:	25 00 10 00 00       	and    $0x1000,%eax
81002473:	85 c0                	test   %eax,%eax
81002475:	74 08                	je     8100247f <_fseeko_r+0xcb>
81002477:	8b 43 50             	mov    0x50(%ebx),%eax
8100247a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100247d:	eb 26                	jmp    810024a5 <_fseeko_r+0xf1>
8100247f:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002482:	6a 01                	push   $0x1
81002484:	6a 00                	push   $0x0
81002486:	50                   	push   %eax
81002487:	ff 75 08             	pushl  0x8(%ebp)
8100248a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100248d:	ff d0                	call   *%eax
8100248f:	83 c4 10             	add    $0x10,%esp
81002492:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002495:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81002499:	75 0a                	jne    810024a5 <_fseeko_r+0xf1>
8100249b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810024a0:	e9 b9 03 00 00       	jmp    8100285e <_fseeko_r+0x4aa>
810024a5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810024a9:	98                   	cwtl   
810024aa:	83 e0 04             	and    $0x4,%eax
810024ad:	85 c0                	test   %eax,%eax
810024af:	74 15                	je     810024c6 <_fseeko_r+0x112>
810024b1:	8b 43 04             	mov    0x4(%ebx),%eax
810024b4:	29 45 f0             	sub    %eax,-0x10(%ebp)
810024b7:	8b 43 30             	mov    0x30(%ebx),%eax
810024ba:	85 c0                	test   %eax,%eax
810024bc:	74 24                	je     810024e2 <_fseeko_r+0x12e>
810024be:	8b 43 3c             	mov    0x3c(%ebx),%eax
810024c1:	29 45 f0             	sub    %eax,-0x10(%ebp)
810024c4:	eb 1c                	jmp    810024e2 <_fseeko_r+0x12e>
810024c6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810024ca:	98                   	cwtl   
810024cb:	83 e0 08             	and    $0x8,%eax
810024ce:	85 c0                	test   %eax,%eax
810024d0:	74 10                	je     810024e2 <_fseeko_r+0x12e>
810024d2:	8b 03                	mov    (%ebx),%eax
810024d4:	85 c0                	test   %eax,%eax
810024d6:	74 0a                	je     810024e2 <_fseeko_r+0x12e>
810024d8:	8b 03                	mov    (%ebx),%eax
810024da:	8b 53 10             	mov    0x10(%ebx),%edx
810024dd:	29 d0                	sub    %edx,%eax
810024df:	01 45 f0             	add    %eax,-0x10(%ebp)
810024e2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810024e5:	01 45 10             	add    %eax,0x10(%ebp)
810024e8:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%ebp)
810024ef:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
810024f6:	eb 1c                	jmp    81002514 <_fseeko_r+0x160>
810024f8:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810024ff:	eb 13                	jmp    81002514 <_fseeko_r+0x160>
81002501:	8b 45 08             	mov    0x8(%ebp),%eax
81002504:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
8100250a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100250f:	e9 4a 03 00 00       	jmp    8100285e <_fseeko_r+0x4aa>
81002514:	8b 43 10             	mov    0x10(%ebx),%eax
81002517:	85 c0                	test   %eax,%eax
81002519:	75 0f                	jne    8100252a <_fseeko_r+0x176>
8100251b:	83 ec 08             	sub    $0x8,%esp
8100251e:	53                   	push   %ebx
8100251f:	ff 75 08             	pushl  0x8(%ebp)
81002522:	e8 dd 17 00 00       	call   81003d04 <__smakebuf_r>
81002527:	83 c4 10             	add    $0x10,%esp
8100252a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100252e:	98                   	cwtl   
8100252f:	25 1a 08 00 00       	and    $0x81a,%eax
81002534:	85 c0                	test   %eax,%eax
81002536:	0f 85 7d 02 00 00    	jne    810027b9 <_fseeko_r+0x405>
8100253c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002540:	98                   	cwtl   
81002541:	25 00 04 00 00       	and    $0x400,%eax
81002546:	85 c0                	test   %eax,%eax
81002548:	75 5f                	jne    810025a9 <_fseeko_r+0x1f5>
8100254a:	81 7d e0 ce 68 00 81 	cmpl   $0x810068ce,-0x20(%ebp)
81002551:	75 34                	jne    81002587 <_fseeko_r+0x1d3>
81002553:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002557:	66 85 c0             	test   %ax,%ax
8100255a:	78 2b                	js     81002587 <_fseeko_r+0x1d3>
8100255c:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002560:	98                   	cwtl   
81002561:	83 ec 04             	sub    $0x4,%esp
81002564:	8d 55 98             	lea    -0x68(%ebp),%edx
81002567:	52                   	push   %edx
81002568:	50                   	push   %eax
81002569:	ff 75 08             	pushl  0x8(%ebp)
8100256c:	e8 14 03 00 00       	call   81002885 <_fstat_r>
81002571:	83 c4 10             	add    $0x10,%esp
81002574:	85 c0                	test   %eax,%eax
81002576:	75 0f                	jne    81002587 <_fseeko_r+0x1d3>
81002578:	8b 45 9c             	mov    -0x64(%ebp),%eax
8100257b:	25 00 f0 00 00       	and    $0xf000,%eax
81002580:	3d 00 80 00 00       	cmp    $0x8000,%eax
81002585:	74 10                	je     81002597 <_fseeko_r+0x1e3>
81002587:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100258b:	80 cc 08             	or     $0x8,%ah
8100258e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002592:	e9 2f 02 00 00       	jmp    810027c6 <_fseeko_r+0x412>
81002597:	c7 43 4c 00 04 00 00 	movl   $0x400,0x4c(%ebx)
8100259e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025a2:	80 cc 04             	or     $0x4,%ah
810025a5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810025a9:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810025ad:	75 08                	jne    810025b7 <_fseeko_r+0x203>
810025af:	8b 45 10             	mov    0x10(%ebp),%eax
810025b2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810025b5:	eb 2b                	jmp    810025e2 <_fseeko_r+0x22e>
810025b7:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810025bb:	98                   	cwtl   
810025bc:	83 ec 04             	sub    $0x4,%esp
810025bf:	8d 55 98             	lea    -0x68(%ebp),%edx
810025c2:	52                   	push   %edx
810025c3:	50                   	push   %eax
810025c4:	ff 75 08             	pushl  0x8(%ebp)
810025c7:	e8 b9 02 00 00       	call   81002885 <_fstat_r>
810025cc:	83 c4 10             	add    $0x10,%esp
810025cf:	85 c0                	test   %eax,%eax
810025d1:	0f 85 e5 01 00 00    	jne    810027bc <_fseeko_r+0x408>
810025d7:	8b 55 a8             	mov    -0x58(%ebp),%edx
810025da:	8b 45 10             	mov    0x10(%ebp),%eax
810025dd:	01 d0                	add    %edx,%eax
810025df:	89 45 f4             	mov    %eax,-0xc(%ebp)
810025e2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810025e6:	75 49                	jne    81002631 <_fseeko_r+0x27d>
810025e8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025ec:	98                   	cwtl   
810025ed:	25 00 10 00 00       	and    $0x1000,%eax
810025f2:	85 c0                	test   %eax,%eax
810025f4:	74 08                	je     810025fe <_fseeko_r+0x24a>
810025f6:	8b 43 50             	mov    0x50(%ebx),%eax
810025f9:	89 45 f0             	mov    %eax,-0x10(%ebp)
810025fc:	eb 20                	jmp    8100261e <_fseeko_r+0x26a>
810025fe:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002601:	6a 01                	push   $0x1
81002603:	6a 00                	push   $0x0
81002605:	50                   	push   %eax
81002606:	ff 75 08             	pushl  0x8(%ebp)
81002609:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100260c:	ff d0                	call   *%eax
8100260e:	83 c4 10             	add    $0x10,%esp
81002611:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002614:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81002618:	0f 84 a1 01 00 00    	je     810027bf <_fseeko_r+0x40b>
8100261e:	8b 43 04             	mov    0x4(%ebx),%eax
81002621:	29 45 f0             	sub    %eax,-0x10(%ebp)
81002624:	8b 43 30             	mov    0x30(%ebx),%eax
81002627:	85 c0                	test   %eax,%eax
81002629:	74 06                	je     81002631 <_fseeko_r+0x27d>
8100262b:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100262e:	29 45 f0             	sub    %eax,-0x10(%ebp)
81002631:	8b 43 30             	mov    0x30(%ebx),%eax
81002634:	85 c0                	test   %eax,%eax
81002636:	74 22                	je     8100265a <_fseeko_r+0x2a6>
81002638:	8b 43 04             	mov    0x4(%ebx),%eax
8100263b:	01 45 f0             	add    %eax,-0x10(%ebp)
8100263e:	8b 43 38             	mov    0x38(%ebx),%eax
81002641:	8b 53 10             	mov    0x10(%ebx),%edx
81002644:	29 d0                	sub    %edx,%eax
81002646:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002649:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100264c:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100264f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002652:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002655:	01 45 ec             	add    %eax,-0x14(%ebp)
81002658:	eb 19                	jmp    81002673 <_fseeko_r+0x2bf>
8100265a:	8b 03                	mov    (%ebx),%eax
8100265c:	8b 53 10             	mov    0x10(%ebx),%edx
8100265f:	29 d0                	sub    %edx,%eax
81002661:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002664:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002667:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100266a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100266d:	8b 43 04             	mov    0x4(%ebx),%eax
81002670:	01 45 ec             	add    %eax,-0x14(%ebp)
81002673:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002676:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81002679:	7c 7c                	jl     810026f7 <_fseeko_r+0x343>
8100267b:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100267e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002681:	01 c2                	add    %eax,%edx
81002683:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002686:	39 c2                	cmp    %eax,%edx
81002688:	76 6d                	jbe    810026f7 <_fseeko_r+0x343>
8100268a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100268d:	2b 45 f0             	sub    -0x10(%ebp),%eax
81002690:	89 c6                	mov    %eax,%esi
81002692:	8b 43 10             	mov    0x10(%ebx),%eax
81002695:	89 f2                	mov    %esi,%edx
81002697:	01 d0                	add    %edx,%eax
81002699:	89 03                	mov    %eax,(%ebx)
8100269b:	89 f2                	mov    %esi,%edx
8100269d:	8b 45 ec             	mov    -0x14(%ebp),%eax
810026a0:	29 d0                	sub    %edx,%eax
810026a2:	89 43 04             	mov    %eax,0x4(%ebx)
810026a5:	8b 43 30             	mov    0x30(%ebx),%eax
810026a8:	85 c0                	test   %eax,%eax
810026aa:	74 23                	je     810026cf <_fseeko_r+0x31b>
810026ac:	8b 53 30             	mov    0x30(%ebx),%edx
810026af:	8d 43 40             	lea    0x40(%ebx),%eax
810026b2:	39 c2                	cmp    %eax,%edx
810026b4:	74 12                	je     810026c8 <_fseeko_r+0x314>
810026b6:	8b 43 30             	mov    0x30(%ebx),%eax
810026b9:	83 ec 08             	sub    $0x8,%esp
810026bc:	50                   	push   %eax
810026bd:	ff 75 08             	pushl  0x8(%ebp)
810026c0:	e8 76 f7 ff ff       	call   81001e3b <_free_r>
810026c5:	83 c4 10             	add    $0x10,%esp
810026c8:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810026cf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026d3:	83 e0 df             	and    $0xffffffdf,%eax
810026d6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026da:	8d 43 5c             	lea    0x5c(%ebx),%eax
810026dd:	83 ec 04             	sub    $0x4,%esp
810026e0:	6a 08                	push   $0x8
810026e2:	6a 00                	push   $0x0
810026e4:	50                   	push   %eax
810026e5:	e8 53 24 00 00       	call   81004b3d <memset>
810026ea:	83 c4 10             	add    $0x10,%esp
810026ed:	b8 00 00 00 00       	mov    $0x0,%eax
810026f2:	e9 67 01 00 00       	jmp    8100285e <_fseeko_r+0x4aa>
810026f7:	8b 43 4c             	mov    0x4c(%ebx),%eax
810026fa:	f7 d8                	neg    %eax
810026fc:	23 45 f4             	and    -0xc(%ebp),%eax
810026ff:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002702:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002705:	6a 00                	push   $0x0
81002707:	ff 75 f0             	pushl  -0x10(%ebp)
8100270a:	50                   	push   %eax
8100270b:	ff 75 08             	pushl  0x8(%ebp)
8100270e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002711:	ff d0                	call   *%eax
81002713:	83 c4 10             	add    $0x10,%esp
81002716:	83 f8 ff             	cmp    $0xffffffff,%eax
81002719:	0f 84 a3 00 00 00    	je     810027c2 <_fseeko_r+0x40e>
8100271f:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002726:	8b 43 10             	mov    0x10(%ebx),%eax
81002729:	89 03                	mov    %eax,(%ebx)
8100272b:	8b 43 30             	mov    0x30(%ebx),%eax
8100272e:	85 c0                	test   %eax,%eax
81002730:	74 23                	je     81002755 <_fseeko_r+0x3a1>
81002732:	8b 53 30             	mov    0x30(%ebx),%edx
81002735:	8d 43 40             	lea    0x40(%ebx),%eax
81002738:	39 c2                	cmp    %eax,%edx
8100273a:	74 12                	je     8100274e <_fseeko_r+0x39a>
8100273c:	8b 43 30             	mov    0x30(%ebx),%eax
8100273f:	83 ec 08             	sub    $0x8,%esp
81002742:	50                   	push   %eax
81002743:	ff 75 08             	pushl  0x8(%ebp)
81002746:	e8 f0 f6 ff ff       	call   81001e3b <_free_r>
8100274b:	83 c4 10             	add    $0x10,%esp
8100274e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002755:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002759:	83 e0 df             	and    $0xffffffdf,%eax
8100275c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002760:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002763:	2b 45 f0             	sub    -0x10(%ebp),%eax
81002766:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002769:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100276d:	74 2d                	je     8100279c <_fseeko_r+0x3e8>
8100276f:	83 ec 08             	sub    $0x8,%esp
81002772:	53                   	push   %ebx
81002773:	ff 75 08             	pushl  0x8(%ebp)
81002776:	e8 dd 3b 00 00       	call   81006358 <__srefill_r>
8100277b:	83 c4 10             	add    $0x10,%esp
8100277e:	85 c0                	test   %eax,%eax
81002780:	75 43                	jne    810027c5 <_fseeko_r+0x411>
81002782:	8b 43 04             	mov    0x4(%ebx),%eax
81002785:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002788:	77 3b                	ja     810027c5 <_fseeko_r+0x411>
8100278a:	8b 13                	mov    (%ebx),%edx
8100278c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100278f:	01 d0                	add    %edx,%eax
81002791:	89 03                	mov    %eax,(%ebx)
81002793:	8b 43 04             	mov    0x4(%ebx),%eax
81002796:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002799:	89 43 04             	mov    %eax,0x4(%ebx)
8100279c:	8d 43 5c             	lea    0x5c(%ebx),%eax
8100279f:	83 ec 04             	sub    $0x4,%esp
810027a2:	6a 08                	push   $0x8
810027a4:	6a 00                	push   $0x0
810027a6:	50                   	push   %eax
810027a7:	e8 91 23 00 00       	call   81004b3d <memset>
810027ac:	83 c4 10             	add    $0x10,%esp
810027af:	b8 00 00 00 00       	mov    $0x0,%eax
810027b4:	e9 a5 00 00 00       	jmp    8100285e <_fseeko_r+0x4aa>
810027b9:	90                   	nop
810027ba:	eb 0a                	jmp    810027c6 <_fseeko_r+0x412>
810027bc:	90                   	nop
810027bd:	eb 07                	jmp    810027c6 <_fseeko_r+0x412>
810027bf:	90                   	nop
810027c0:	eb 04                	jmp    810027c6 <_fseeko_r+0x412>
810027c2:	90                   	nop
810027c3:	eb 01                	jmp    810027c6 <_fseeko_r+0x412>
810027c5:	90                   	nop
810027c6:	83 ec 08             	sub    $0x8,%esp
810027c9:	53                   	push   %ebx
810027ca:	ff 75 08             	pushl  0x8(%ebp)
810027cd:	e8 c7 ea ff ff       	call   81001299 <_fflush_r>
810027d2:	83 c4 10             	add    $0x10,%esp
810027d5:	85 c0                	test   %eax,%eax
810027d7:	75 1a                	jne    810027f3 <_fseeko_r+0x43f>
810027d9:	8b 43 1c             	mov    0x1c(%ebx),%eax
810027dc:	ff 75 14             	pushl  0x14(%ebp)
810027df:	ff 75 10             	pushl  0x10(%ebp)
810027e2:	50                   	push   %eax
810027e3:	ff 75 08             	pushl  0x8(%ebp)
810027e6:	8b 45 e0             	mov    -0x20(%ebp),%eax
810027e9:	ff d0                	call   *%eax
810027eb:	83 c4 10             	add    $0x10,%esp
810027ee:	83 f8 ff             	cmp    $0xffffffff,%eax
810027f1:	75 07                	jne    810027fa <_fseeko_r+0x446>
810027f3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810027f8:	eb 64                	jmp    8100285e <_fseeko_r+0x4aa>
810027fa:	8b 43 30             	mov    0x30(%ebx),%eax
810027fd:	85 c0                	test   %eax,%eax
810027ff:	74 23                	je     81002824 <_fseeko_r+0x470>
81002801:	8b 53 30             	mov    0x30(%ebx),%edx
81002804:	8d 43 40             	lea    0x40(%ebx),%eax
81002807:	39 c2                	cmp    %eax,%edx
81002809:	74 12                	je     8100281d <_fseeko_r+0x469>
8100280b:	8b 43 30             	mov    0x30(%ebx),%eax
8100280e:	83 ec 08             	sub    $0x8,%esp
81002811:	50                   	push   %eax
81002812:	ff 75 08             	pushl  0x8(%ebp)
81002815:	e8 21 f6 ff ff       	call   81001e3b <_free_r>
8100281a:	83 c4 10             	add    $0x10,%esp
8100281d:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002824:	8b 43 10             	mov    0x10(%ebx),%eax
81002827:	89 03                	mov    %eax,(%ebx)
81002829:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002830:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002834:	83 e0 df             	and    $0xffffffdf,%eax
81002837:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100283b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100283f:	80 e4 f7             	and    $0xf7,%ah
81002842:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002846:	8d 43 5c             	lea    0x5c(%ebx),%eax
81002849:	83 ec 04             	sub    $0x4,%esp
8100284c:	6a 08                	push   $0x8
8100284e:	6a 00                	push   $0x0
81002850:	50                   	push   %eax
81002851:	e8 e7 22 00 00       	call   81004b3d <memset>
81002856:	83 c4 10             	add    $0x10,%esp
81002859:	b8 00 00 00 00       	mov    $0x0,%eax
8100285e:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002861:	5b                   	pop    %ebx
81002862:	5e                   	pop    %esi
81002863:	5d                   	pop    %ebp
81002864:	c3                   	ret    

81002865 <fseeko>:
81002865:	55                   	push   %ebp
81002866:	89 e5                	mov    %esp,%ebp
81002868:	83 ec 08             	sub    $0x8,%esp
8100286b:	8b 55 08             	mov    0x8(%ebp),%edx
8100286e:	a1 44 88 00 81       	mov    0x81008844,%eax
81002873:	ff 75 10             	pushl  0x10(%ebp)
81002876:	ff 75 0c             	pushl  0xc(%ebp)
81002879:	52                   	push   %edx
8100287a:	50                   	push   %eax
8100287b:	e8 34 fb ff ff       	call   810023b4 <_fseeko_r>
81002880:	83 c4 10             	add    $0x10,%esp
81002883:	c9                   	leave  
81002884:	c3                   	ret    

81002885 <_fstat_r>:
81002885:	55                   	push   %ebp
81002886:	89 e5                	mov    %esp,%ebp
81002888:	83 ec 18             	sub    $0x18,%esp
8100288b:	c7 05 8c 92 00 81 00 	movl   $0x0,0x8100928c
81002892:	00 00 00 
81002895:	83 ec 08             	sub    $0x8,%esp
81002898:	ff 75 10             	pushl  0x10(%ebp)
8100289b:	ff 75 0c             	pushl  0xc(%ebp)
8100289e:	e8 45 e4 ff ff       	call   81000ce8 <fstat>
810028a3:	83 c4 10             	add    $0x10,%esp
810028a6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810028a9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810028ad:	75 14                	jne    810028c3 <_fstat_r+0x3e>
810028af:	a1 8c 92 00 81       	mov    0x8100928c,%eax
810028b4:	85 c0                	test   %eax,%eax
810028b6:	74 0b                	je     810028c3 <_fstat_r+0x3e>
810028b8:	8b 15 8c 92 00 81    	mov    0x8100928c,%edx
810028be:	8b 45 08             	mov    0x8(%ebp),%eax
810028c1:	89 10                	mov    %edx,(%eax)
810028c3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028c6:	c9                   	leave  
810028c7:	c3                   	ret    

810028c8 <__sfvwrite_r>:
810028c8:	55                   	push   %ebp
810028c9:	89 e5                	mov    %esp,%ebp
810028cb:	57                   	push   %edi
810028cc:	56                   	push   %esi
810028cd:	53                   	push   %ebx
810028ce:	83 ec 3c             	sub    $0x3c,%esp
810028d1:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810028d4:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
810028db:	8b 45 10             	mov    0x10(%ebp),%eax
810028de:	8b 78 08             	mov    0x8(%eax),%edi
810028e1:	85 ff                	test   %edi,%edi
810028e3:	75 0a                	jne    810028ef <__sfvwrite_r+0x27>
810028e5:	b8 00 00 00 00       	mov    $0x0,%eax
810028ea:	e9 6f 04 00 00       	jmp    81002d5e <__sfvwrite_r+0x496>
810028ef:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028f3:	98                   	cwtl   
810028f4:	83 e0 08             	and    $0x8,%eax
810028f7:	85 c0                	test   %eax,%eax
810028f9:	74 07                	je     81002902 <__sfvwrite_r+0x3a>
810028fb:	8b 43 10             	mov    0x10(%ebx),%eax
810028fe:	85 c0                	test   %eax,%eax
81002900:	75 1d                	jne    8100291f <__sfvwrite_r+0x57>
81002902:	83 ec 08             	sub    $0x8,%esp
81002905:	53                   	push   %ebx
81002906:	ff 75 08             	pushl  0x8(%ebp)
81002909:	e8 3a 47 00 00       	call   81007048 <__swsetup_r>
8100290e:	83 c4 10             	add    $0x10,%esp
81002911:	85 c0                	test   %eax,%eax
81002913:	74 0a                	je     8100291f <__sfvwrite_r+0x57>
81002915:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100291a:	e9 3f 04 00 00       	jmp    81002d5e <__sfvwrite_r+0x496>
8100291f:	8b 45 10             	mov    0x10(%ebp),%eax
81002922:	8b 00                	mov    (%eax),%eax
81002924:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002927:	bf 00 00 00 00       	mov    $0x0,%edi
8100292c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002930:	98                   	cwtl   
81002931:	83 e0 02             	and    $0x2,%eax
81002934:	85 c0                	test   %eax,%eax
81002936:	74 68                	je     810029a0 <__sfvwrite_r+0xd8>
81002938:	eb 11                	jmp    8100294b <__sfvwrite_r+0x83>
8100293a:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100293d:	8b 08                	mov    (%eax),%ecx
8100293f:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81002942:	8b 78 04             	mov    0x4(%eax),%edi
81002945:	83 c0 08             	add    $0x8,%eax
81002948:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100294b:	85 ff                	test   %edi,%edi
8100294d:	74 eb                	je     8100293a <__sfvwrite_r+0x72>
8100294f:	8b 4b 24             	mov    0x24(%ebx),%ecx
81002952:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81002957:	39 c7                	cmp    %eax,%edi
81002959:	0f 46 c7             	cmovbe %edi,%eax
8100295c:	89 c2                	mov    %eax,%edx
8100295e:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002961:	52                   	push   %edx
81002962:	ff 75 c4             	pushl  -0x3c(%ebp)
81002965:	50                   	push   %eax
81002966:	ff 75 08             	pushl  0x8(%ebp)
81002969:	ff d1                	call   *%ecx
8100296b:	83 c4 10             	add    $0x10,%esp
8100296e:	89 c6                	mov    %eax,%esi
81002970:	85 f6                	test   %esi,%esi
81002972:	0f 8e cf 03 00 00    	jle    81002d47 <__sfvwrite_r+0x47f>
81002978:	89 f0                	mov    %esi,%eax
8100297a:	01 45 c4             	add    %eax,-0x3c(%ebp)
8100297d:	89 f0                	mov    %esi,%eax
8100297f:	29 c7                	sub    %eax,%edi
81002981:	8b 45 10             	mov    0x10(%ebp),%eax
81002984:	8b 40 08             	mov    0x8(%eax),%eax
81002987:	89 f2                	mov    %esi,%edx
81002989:	29 d0                	sub    %edx,%eax
8100298b:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100298e:	89 41 08             	mov    %eax,0x8(%ecx)
81002991:	8b 45 10             	mov    0x10(%ebp),%eax
81002994:	8b 40 08             	mov    0x8(%eax),%eax
81002997:	85 c0                	test   %eax,%eax
81002999:	75 b0                	jne    8100294b <__sfvwrite_r+0x83>
8100299b:	e9 a0 03 00 00       	jmp    81002d40 <__sfvwrite_r+0x478>
810029a0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029a4:	98                   	cwtl   
810029a5:	83 e0 01             	and    $0x1,%eax
810029a8:	85 c0                	test   %eax,%eax
810029aa:	0f 85 44 02 00 00    	jne    81002bf4 <__sfvwrite_r+0x32c>
810029b0:	eb 11                	jmp    810029c3 <__sfvwrite_r+0xfb>
810029b2:	8b 45 c0             	mov    -0x40(%ebp),%eax
810029b5:	8b 08                	mov    (%eax),%ecx
810029b7:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810029ba:	8b 78 04             	mov    0x4(%eax),%edi
810029bd:	83 c0 08             	add    $0x8,%eax
810029c0:	89 45 c0             	mov    %eax,-0x40(%ebp)
810029c3:	85 ff                	test   %edi,%edi
810029c5:	74 eb                	je     810029b2 <__sfvwrite_r+0xea>
810029c7:	8b 73 08             	mov    0x8(%ebx),%esi
810029ca:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029ce:	98                   	cwtl   
810029cf:	25 00 02 00 00       	and    $0x200,%eax
810029d4:	85 c0                	test   %eax,%eax
810029d6:	0f 84 4f 01 00 00    	je     81002b2b <__sfvwrite_r+0x263>
810029dc:	89 f0                	mov    %esi,%eax
810029de:	39 c7                	cmp    %eax,%edi
810029e0:	0f 82 12 01 00 00    	jb     81002af8 <__sfvwrite_r+0x230>
810029e6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029ea:	98                   	cwtl   
810029eb:	25 80 04 00 00       	and    $0x480,%eax
810029f0:	85 c0                	test   %eax,%eax
810029f2:	0f 84 00 01 00 00    	je     81002af8 <__sfvwrite_r+0x230>
810029f8:	8b 03                	mov    (%ebx),%eax
810029fa:	8b 53 10             	mov    0x10(%ebx),%edx
810029fd:	29 d0                	sub    %edx,%eax
810029ff:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002a02:	8b 53 14             	mov    0x14(%ebx),%edx
81002a05:	89 d0                	mov    %edx,%eax
81002a07:	01 c0                	add    %eax,%eax
81002a09:	01 d0                	add    %edx,%eax
81002a0b:	89 c2                	mov    %eax,%edx
81002a0d:	c1 ea 1f             	shr    $0x1f,%edx
81002a10:	01 d0                	add    %edx,%eax
81002a12:	d1 f8                	sar    %eax
81002a14:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002a17:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a1a:	01 f8                	add    %edi,%eax
81002a1c:	8d 50 01             	lea    0x1(%eax),%edx
81002a1f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002a22:	39 c2                	cmp    %eax,%edx
81002a24:	76 0b                	jbe    81002a31 <__sfvwrite_r+0x169>
81002a26:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a29:	01 f8                	add    %edi,%eax
81002a2b:	83 c0 01             	add    $0x1,%eax
81002a2e:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002a31:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a35:	98                   	cwtl   
81002a36:	25 00 04 00 00       	and    $0x400,%eax
81002a3b:	85 c0                	test   %eax,%eax
81002a3d:	74 4f                	je     81002a8e <__sfvwrite_r+0x1c6>
81002a3f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002a42:	83 ec 08             	sub    $0x8,%esp
81002a45:	50                   	push   %eax
81002a46:	ff 75 08             	pushl  0x8(%ebp)
81002a49:	e8 02 17 00 00       	call   81004150 <_malloc_r>
81002a4e:	83 c4 10             	add    $0x10,%esp
81002a51:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002a54:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002a58:	75 0e                	jne    81002a68 <__sfvwrite_r+0x1a0>
81002a5a:	8b 45 08             	mov    0x8(%ebp),%eax
81002a5d:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002a63:	e9 e6 02 00 00       	jmp    81002d4e <__sfvwrite_r+0x486>
81002a68:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002a6b:	8b 43 10             	mov    0x10(%ebx),%eax
81002a6e:	83 ec 04             	sub    $0x4,%esp
81002a71:	52                   	push   %edx
81002a72:	50                   	push   %eax
81002a73:	ff 75 dc             	pushl  -0x24(%ebp)
81002a76:	e8 ed 1f 00 00       	call   81004a68 <memcpy>
81002a7b:	83 c4 10             	add    $0x10,%esp
81002a7e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a82:	66 25 7f fb          	and    $0xfb7f,%ax
81002a86:	0c 80                	or     $0x80,%al
81002a88:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002a8c:	eb 49                	jmp    81002ad7 <__sfvwrite_r+0x20f>
81002a8e:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002a91:	8b 43 10             	mov    0x10(%ebx),%eax
81002a94:	83 ec 04             	sub    $0x4,%esp
81002a97:	52                   	push   %edx
81002a98:	50                   	push   %eax
81002a99:	ff 75 08             	pushl  0x8(%ebp)
81002a9c:	e8 19 2e 00 00       	call   810058ba <_realloc_r>
81002aa1:	83 c4 10             	add    $0x10,%esp
81002aa4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002aa7:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002aab:	75 2a                	jne    81002ad7 <__sfvwrite_r+0x20f>
81002aad:	8b 43 10             	mov    0x10(%ebx),%eax
81002ab0:	83 ec 08             	sub    $0x8,%esp
81002ab3:	50                   	push   %eax
81002ab4:	ff 75 08             	pushl  0x8(%ebp)
81002ab7:	e8 7f f3 ff ff       	call   81001e3b <_free_r>
81002abc:	83 c4 10             	add    $0x10,%esp
81002abf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002ac3:	24 7f                	and    $0x7f,%al
81002ac5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002ac9:	8b 45 08             	mov    0x8(%ebp),%eax
81002acc:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002ad2:	e9 77 02 00 00       	jmp    81002d4e <__sfvwrite_r+0x486>
81002ad7:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002ada:	89 43 10             	mov    %eax,0x10(%ebx)
81002add:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002ae0:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002ae3:	01 d0                	add    %edx,%eax
81002ae5:	89 03                	mov    %eax,(%ebx)
81002ae7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002aea:	89 43 14             	mov    %eax,0x14(%ebx)
81002aed:	89 fe                	mov    %edi,%esi
81002aef:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002af2:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002af5:	89 43 08             	mov    %eax,0x8(%ebx)
81002af8:	89 f0                	mov    %esi,%eax
81002afa:	39 c7                	cmp    %eax,%edi
81002afc:	73 02                	jae    81002b00 <__sfvwrite_r+0x238>
81002afe:	89 fe                	mov    %edi,%esi
81002b00:	89 f2                	mov    %esi,%edx
81002b02:	8b 03                	mov    (%ebx),%eax
81002b04:	83 ec 04             	sub    $0x4,%esp
81002b07:	52                   	push   %edx
81002b08:	ff 75 c4             	pushl  -0x3c(%ebp)
81002b0b:	50                   	push   %eax
81002b0c:	e8 9f 1f 00 00       	call   81004ab0 <memmove>
81002b11:	83 c4 10             	add    $0x10,%esp
81002b14:	8b 43 08             	mov    0x8(%ebx),%eax
81002b17:	29 f0                	sub    %esi,%eax
81002b19:	89 43 08             	mov    %eax,0x8(%ebx)
81002b1c:	8b 03                	mov    (%ebx),%eax
81002b1e:	89 f2                	mov    %esi,%edx
81002b20:	01 d0                	add    %edx,%eax
81002b22:	89 03                	mov    %eax,(%ebx)
81002b24:	89 fe                	mov    %edi,%esi
81002b26:	e9 9d 00 00 00       	jmp    81002bc8 <__sfvwrite_r+0x300>
81002b2b:	8b 13                	mov    (%ebx),%edx
81002b2d:	8b 43 10             	mov    0x10(%ebx),%eax
81002b30:	39 c2                	cmp    %eax,%edx
81002b32:	77 07                	ja     81002b3b <__sfvwrite_r+0x273>
81002b34:	8b 43 14             	mov    0x14(%ebx),%eax
81002b37:	39 c7                	cmp    %eax,%edi
81002b39:	73 4c                	jae    81002b87 <__sfvwrite_r+0x2bf>
81002b3b:	89 f0                	mov    %esi,%eax
81002b3d:	39 c7                	cmp    %eax,%edi
81002b3f:	0f 46 c7             	cmovbe %edi,%eax
81002b42:	89 c6                	mov    %eax,%esi
81002b44:	89 f2                	mov    %esi,%edx
81002b46:	8b 03                	mov    (%ebx),%eax
81002b48:	83 ec 04             	sub    $0x4,%esp
81002b4b:	52                   	push   %edx
81002b4c:	ff 75 c4             	pushl  -0x3c(%ebp)
81002b4f:	50                   	push   %eax
81002b50:	e8 5b 1f 00 00       	call   81004ab0 <memmove>
81002b55:	83 c4 10             	add    $0x10,%esp
81002b58:	8b 43 08             	mov    0x8(%ebx),%eax
81002b5b:	29 f0                	sub    %esi,%eax
81002b5d:	89 43 08             	mov    %eax,0x8(%ebx)
81002b60:	8b 03                	mov    (%ebx),%eax
81002b62:	89 f2                	mov    %esi,%edx
81002b64:	01 d0                	add    %edx,%eax
81002b66:	89 03                	mov    %eax,(%ebx)
81002b68:	8b 43 08             	mov    0x8(%ebx),%eax
81002b6b:	85 c0                	test   %eax,%eax
81002b6d:	75 58                	jne    81002bc7 <__sfvwrite_r+0x2ff>
81002b6f:	83 ec 08             	sub    $0x8,%esp
81002b72:	53                   	push   %ebx
81002b73:	ff 75 08             	pushl  0x8(%ebp)
81002b76:	e8 1e e7 ff ff       	call   81001299 <_fflush_r>
81002b7b:	83 c4 10             	add    $0x10,%esp
81002b7e:	85 c0                	test   %eax,%eax
81002b80:	74 45                	je     81002bc7 <__sfvwrite_r+0x2ff>
81002b82:	e9 c7 01 00 00       	jmp    81002d4e <__sfvwrite_r+0x486>
81002b87:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81002b8d:	77 04                	ja     81002b93 <__sfvwrite_r+0x2cb>
81002b8f:	89 f8                	mov    %edi,%eax
81002b91:	eb 05                	jmp    81002b98 <__sfvwrite_r+0x2d0>
81002b93:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81002b98:	8b 4b 14             	mov    0x14(%ebx),%ecx
81002b9b:	99                   	cltd   
81002b9c:	f7 f9                	idiv   %ecx
81002b9e:	89 c2                	mov    %eax,%edx
81002ba0:	8b 43 14             	mov    0x14(%ebx),%eax
81002ba3:	89 d6                	mov    %edx,%esi
81002ba5:	0f af f0             	imul   %eax,%esi
81002ba8:	8b 53 24             	mov    0x24(%ebx),%edx
81002bab:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002bae:	56                   	push   %esi
81002baf:	ff 75 c4             	pushl  -0x3c(%ebp)
81002bb2:	50                   	push   %eax
81002bb3:	ff 75 08             	pushl  0x8(%ebp)
81002bb6:	ff d2                	call   *%edx
81002bb8:	83 c4 10             	add    $0x10,%esp
81002bbb:	89 c6                	mov    %eax,%esi
81002bbd:	85 f6                	test   %esi,%esi
81002bbf:	0f 8e 85 01 00 00    	jle    81002d4a <__sfvwrite_r+0x482>
81002bc5:	eb 01                	jmp    81002bc8 <__sfvwrite_r+0x300>
81002bc7:	90                   	nop
81002bc8:	89 f0                	mov    %esi,%eax
81002bca:	01 45 c4             	add    %eax,-0x3c(%ebp)
81002bcd:	89 f0                	mov    %esi,%eax
81002bcf:	29 c7                	sub    %eax,%edi
81002bd1:	8b 45 10             	mov    0x10(%ebp),%eax
81002bd4:	8b 40 08             	mov    0x8(%eax),%eax
81002bd7:	89 f2                	mov    %esi,%edx
81002bd9:	29 d0                	sub    %edx,%eax
81002bdb:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002bde:	89 41 08             	mov    %eax,0x8(%ecx)
81002be1:	8b 45 10             	mov    0x10(%ebp),%eax
81002be4:	8b 40 08             	mov    0x8(%eax),%eax
81002be7:	85 c0                	test   %eax,%eax
81002be9:	0f 85 d4 fd ff ff    	jne    810029c3 <__sfvwrite_r+0xfb>
81002bef:	e9 4c 01 00 00       	jmp    81002d40 <__sfvwrite_r+0x478>
81002bf4:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002bfb:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81002c02:	eb 18                	jmp    81002c1c <__sfvwrite_r+0x354>
81002c04:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002c0b:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002c0e:	8b 08                	mov    (%eax),%ecx
81002c10:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81002c13:	8b 78 04             	mov    0x4(%eax),%edi
81002c16:	83 c0 08             	add    $0x8,%eax
81002c19:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002c1c:	85 ff                	test   %edi,%edi
81002c1e:	74 e4                	je     81002c04 <__sfvwrite_r+0x33c>
81002c20:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002c24:	75 32                	jne    81002c58 <__sfvwrite_r+0x390>
81002c26:	83 ec 04             	sub    $0x4,%esp
81002c29:	57                   	push   %edi
81002c2a:	6a 0a                	push   $0xa
81002c2c:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81002c2f:	56                   	push   %esi
81002c30:	e8 4b 1d 00 00       	call   81004980 <memchr>
81002c35:	83 c4 10             	add    $0x10,%esp
81002c38:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002c3b:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002c3f:	74 0a                	je     81002c4b <__sfvwrite_r+0x383>
81002c41:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002c44:	83 c0 01             	add    $0x1,%eax
81002c47:	29 f0                	sub    %esi,%eax
81002c49:	eb 03                	jmp    81002c4e <__sfvwrite_r+0x386>
81002c4b:	8d 47 01             	lea    0x1(%edi),%eax
81002c4e:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002c51:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002c58:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002c5b:	39 c7                	cmp    %eax,%edi
81002c5d:	0f 46 c7             	cmovbe %edi,%eax
81002c60:	89 c1                	mov    %eax,%ecx
81002c62:	8b 53 08             	mov    0x8(%ebx),%edx
81002c65:	8b 43 14             	mov    0x14(%ebx),%eax
81002c68:	8d 34 02             	lea    (%edx,%eax,1),%esi
81002c6b:	8b 13                	mov    (%ebx),%edx
81002c6d:	8b 43 10             	mov    0x10(%ebx),%eax
81002c70:	39 c2                	cmp    %eax,%edx
81002c72:	76 38                	jbe    81002cac <__sfvwrite_r+0x3e4>
81002c74:	39 f1                	cmp    %esi,%ecx
81002c76:	7e 34                	jle    81002cac <__sfvwrite_r+0x3e4>
81002c78:	89 f2                	mov    %esi,%edx
81002c7a:	8b 03                	mov    (%ebx),%eax
81002c7c:	83 ec 04             	sub    $0x4,%esp
81002c7f:	52                   	push   %edx
81002c80:	ff 75 c4             	pushl  -0x3c(%ebp)
81002c83:	50                   	push   %eax
81002c84:	e8 27 1e 00 00       	call   81004ab0 <memmove>
81002c89:	83 c4 10             	add    $0x10,%esp
81002c8c:	8b 03                	mov    (%ebx),%eax
81002c8e:	89 f2                	mov    %esi,%edx
81002c90:	01 d0                	add    %edx,%eax
81002c92:	89 03                	mov    %eax,(%ebx)
81002c94:	83 ec 08             	sub    $0x8,%esp
81002c97:	53                   	push   %ebx
81002c98:	ff 75 08             	pushl  0x8(%ebp)
81002c9b:	e8 f9 e5 ff ff       	call   81001299 <_fflush_r>
81002ca0:	83 c4 10             	add    $0x10,%esp
81002ca3:	85 c0                	test   %eax,%eax
81002ca5:	74 4f                	je     81002cf6 <__sfvwrite_r+0x42e>
81002ca7:	e9 a2 00 00 00       	jmp    81002d4e <__sfvwrite_r+0x486>
81002cac:	8b 73 14             	mov    0x14(%ebx),%esi
81002caf:	89 c8                	mov    %ecx,%eax
81002cb1:	39 c6                	cmp    %eax,%esi
81002cb3:	7f 1b                	jg     81002cd0 <__sfvwrite_r+0x408>
81002cb5:	8b 53 24             	mov    0x24(%ebx),%edx
81002cb8:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002cbb:	56                   	push   %esi
81002cbc:	ff 75 c4             	pushl  -0x3c(%ebp)
81002cbf:	50                   	push   %eax
81002cc0:	ff 75 08             	pushl  0x8(%ebp)
81002cc3:	ff d2                	call   *%edx
81002cc5:	83 c4 10             	add    $0x10,%esp
81002cc8:	89 c6                	mov    %eax,%esi
81002cca:	85 f6                	test   %esi,%esi
81002ccc:	7f 28                	jg     81002cf6 <__sfvwrite_r+0x42e>
81002cce:	eb 7e                	jmp    81002d4e <__sfvwrite_r+0x486>
81002cd0:	89 ce                	mov    %ecx,%esi
81002cd2:	89 f2                	mov    %esi,%edx
81002cd4:	8b 03                	mov    (%ebx),%eax
81002cd6:	83 ec 04             	sub    $0x4,%esp
81002cd9:	52                   	push   %edx
81002cda:	ff 75 c4             	pushl  -0x3c(%ebp)
81002cdd:	50                   	push   %eax
81002cde:	e8 cd 1d 00 00       	call   81004ab0 <memmove>
81002ce3:	83 c4 10             	add    $0x10,%esp
81002ce6:	8b 43 08             	mov    0x8(%ebx),%eax
81002ce9:	29 f0                	sub    %esi,%eax
81002ceb:	89 43 08             	mov    %eax,0x8(%ebx)
81002cee:	8b 03                	mov    (%ebx),%eax
81002cf0:	89 f2                	mov    %esi,%edx
81002cf2:	01 d0                	add    %edx,%eax
81002cf4:	89 03                	mov    %eax,(%ebx)
81002cf6:	29 75 e0             	sub    %esi,-0x20(%ebp)
81002cf9:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002cfd:	75 1a                	jne    81002d19 <__sfvwrite_r+0x451>
81002cff:	83 ec 08             	sub    $0x8,%esp
81002d02:	53                   	push   %ebx
81002d03:	ff 75 08             	pushl  0x8(%ebp)
81002d06:	e8 8e e5 ff ff       	call   81001299 <_fflush_r>
81002d0b:	83 c4 10             	add    $0x10,%esp
81002d0e:	85 c0                	test   %eax,%eax
81002d10:	75 3b                	jne    81002d4d <__sfvwrite_r+0x485>
81002d12:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002d19:	89 f0                	mov    %esi,%eax
81002d1b:	01 45 c4             	add    %eax,-0x3c(%ebp)
81002d1e:	89 f0                	mov    %esi,%eax
81002d20:	29 c7                	sub    %eax,%edi
81002d22:	8b 45 10             	mov    0x10(%ebp),%eax
81002d25:	8b 40 08             	mov    0x8(%eax),%eax
81002d28:	89 f2                	mov    %esi,%edx
81002d2a:	29 d0                	sub    %edx,%eax
81002d2c:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002d2f:	89 41 08             	mov    %eax,0x8(%ecx)
81002d32:	8b 45 10             	mov    0x10(%ebp),%eax
81002d35:	8b 40 08             	mov    0x8(%eax),%eax
81002d38:	85 c0                	test   %eax,%eax
81002d3a:	0f 85 dc fe ff ff    	jne    81002c1c <__sfvwrite_r+0x354>
81002d40:	b8 00 00 00 00       	mov    $0x0,%eax
81002d45:	eb 17                	jmp    81002d5e <__sfvwrite_r+0x496>
81002d47:	90                   	nop
81002d48:	eb 04                	jmp    81002d4e <__sfvwrite_r+0x486>
81002d4a:	90                   	nop
81002d4b:	eb 01                	jmp    81002d4e <__sfvwrite_r+0x486>
81002d4d:	90                   	nop
81002d4e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d52:	83 c8 40             	or     $0x40,%eax
81002d55:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002d59:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d5e:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002d61:	5b                   	pop    %ebx
81002d62:	5e                   	pop    %esi
81002d63:	5f                   	pop    %edi
81002d64:	5d                   	pop    %ebp
81002d65:	c3                   	ret    

81002d66 <_fwalk>:
81002d66:	55                   	push   %ebp
81002d67:	89 e5                	mov    %esp,%ebp
81002d69:	57                   	push   %edi
81002d6a:	56                   	push   %esi
81002d6b:	53                   	push   %ebx
81002d6c:	83 ec 1c             	sub    $0x1c,%esp
81002d6f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002d76:	8b 45 08             	mov    0x8(%ebp),%eax
81002d79:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002d7f:	eb 3e                	jmp    81002dbf <_fwalk+0x59>
81002d81:	8b 5e 08             	mov    0x8(%esi),%ebx
81002d84:	8b 7e 04             	mov    0x4(%esi),%edi
81002d87:	eb 2d                	jmp    81002db6 <_fwalk+0x50>
81002d89:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d8d:	66 85 c0             	test   %ax,%ax
81002d90:	74 21                	je     81002db3 <_fwalk+0x4d>
81002d92:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d96:	66 83 f8 01          	cmp    $0x1,%ax
81002d9a:	74 17                	je     81002db3 <_fwalk+0x4d>
81002d9c:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002da0:	66 83 f8 ff          	cmp    $0xffff,%ax
81002da4:	74 0d                	je     81002db3 <_fwalk+0x4d>
81002da6:	83 ec 0c             	sub    $0xc,%esp
81002da9:	53                   	push   %ebx
81002daa:	ff 55 0c             	call   *0xc(%ebp)
81002dad:	83 c4 10             	add    $0x10,%esp
81002db0:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002db3:	83 c3 68             	add    $0x68,%ebx
81002db6:	83 ef 01             	sub    $0x1,%edi
81002db9:	85 ff                	test   %edi,%edi
81002dbb:	79 cc                	jns    81002d89 <_fwalk+0x23>
81002dbd:	8b 36                	mov    (%esi),%esi
81002dbf:	85 f6                	test   %esi,%esi
81002dc1:	75 be                	jne    81002d81 <_fwalk+0x1b>
81002dc3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002dc6:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002dc9:	5b                   	pop    %ebx
81002dca:	5e                   	pop    %esi
81002dcb:	5f                   	pop    %edi
81002dcc:	5d                   	pop    %ebp
81002dcd:	c3                   	ret    

81002dce <_fwalk_reent>:
81002dce:	55                   	push   %ebp
81002dcf:	89 e5                	mov    %esp,%ebp
81002dd1:	57                   	push   %edi
81002dd2:	56                   	push   %esi
81002dd3:	53                   	push   %ebx
81002dd4:	83 ec 1c             	sub    $0x1c,%esp
81002dd7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002dde:	8b 45 08             	mov    0x8(%ebp),%eax
81002de1:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002de7:	eb 41                	jmp    81002e2a <_fwalk_reent+0x5c>
81002de9:	8b 5e 08             	mov    0x8(%esi),%ebx
81002dec:	8b 7e 04             	mov    0x4(%esi),%edi
81002def:	eb 30                	jmp    81002e21 <_fwalk_reent+0x53>
81002df1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002df5:	66 85 c0             	test   %ax,%ax
81002df8:	74 24                	je     81002e1e <_fwalk_reent+0x50>
81002dfa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002dfe:	66 83 f8 01          	cmp    $0x1,%ax
81002e02:	74 1a                	je     81002e1e <_fwalk_reent+0x50>
81002e04:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002e08:	66 83 f8 ff          	cmp    $0xffff,%ax
81002e0c:	74 10                	je     81002e1e <_fwalk_reent+0x50>
81002e0e:	83 ec 08             	sub    $0x8,%esp
81002e11:	53                   	push   %ebx
81002e12:	ff 75 08             	pushl  0x8(%ebp)
81002e15:	ff 55 0c             	call   *0xc(%ebp)
81002e18:	83 c4 10             	add    $0x10,%esp
81002e1b:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002e1e:	83 c3 68             	add    $0x68,%ebx
81002e21:	83 ef 01             	sub    $0x1,%edi
81002e24:	85 ff                	test   %edi,%edi
81002e26:	79 c9                	jns    81002df1 <_fwalk_reent+0x23>
81002e28:	8b 36                	mov    (%esi),%esi
81002e2a:	85 f6                	test   %esi,%esi
81002e2c:	75 bb                	jne    81002de9 <_fwalk_reent+0x1b>
81002e2e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002e31:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002e34:	5b                   	pop    %ebx
81002e35:	5e                   	pop    %esi
81002e36:	5f                   	pop    %edi
81002e37:	5d                   	pop    %ebp
81002e38:	c3                   	ret    

81002e39 <_fwrite_r>:
81002e39:	55                   	push   %ebp
81002e3a:	89 e5                	mov    %esp,%ebp
81002e3c:	83 ec 28             	sub    $0x28,%esp
81002e3f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e42:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002e45:	8b 45 14             	mov    0x14(%ebp),%eax
81002e48:	0f af 45 10          	imul   0x10(%ebp),%eax
81002e4c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002e4f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e52:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002e55:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002e58:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002e5b:	8d 45 dc             	lea    -0x24(%ebp),%eax
81002e5e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002e61:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81002e68:	8b 45 08             	mov    0x8(%ebp),%eax
81002e6b:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002e6e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002e72:	74 18                	je     81002e8c <_fwrite_r+0x53>
81002e74:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e77:	8b 40 38             	mov    0x38(%eax),%eax
81002e7a:	85 c0                	test   %eax,%eax
81002e7c:	75 0e                	jne    81002e8c <_fwrite_r+0x53>
81002e7e:	83 ec 0c             	sub    $0xc,%esp
81002e81:	ff 75 f0             	pushl  -0x10(%ebp)
81002e84:	e8 fd e9 ff ff       	call   81001886 <__sinit>
81002e89:	83 c4 10             	add    $0x10,%esp
81002e8c:	8b 45 18             	mov    0x18(%ebp),%eax
81002e8f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002e93:	98                   	cwtl   
81002e94:	25 00 20 00 00       	and    $0x2000,%eax
81002e99:	85 c0                	test   %eax,%eax
81002e9b:	75 24                	jne    81002ec1 <_fwrite_r+0x88>
81002e9d:	8b 45 18             	mov    0x18(%ebp),%eax
81002ea0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002ea4:	80 cc 20             	or     $0x20,%ah
81002ea7:	89 c2                	mov    %eax,%edx
81002ea9:	8b 45 18             	mov    0x18(%ebp),%eax
81002eac:	66 89 50 0c          	mov    %dx,0xc(%eax)
81002eb0:	8b 45 18             	mov    0x18(%ebp),%eax
81002eb3:	8b 40 64             	mov    0x64(%eax),%eax
81002eb6:	80 e4 df             	and    $0xdf,%ah
81002eb9:	89 c2                	mov    %eax,%edx
81002ebb:	8b 45 18             	mov    0x18(%ebp),%eax
81002ebe:	89 50 64             	mov    %edx,0x64(%eax)
81002ec1:	83 ec 04             	sub    $0x4,%esp
81002ec4:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81002ec7:	50                   	push   %eax
81002ec8:	ff 75 18             	pushl  0x18(%ebp)
81002ecb:	ff 75 08             	pushl  0x8(%ebp)
81002ece:	e8 f5 f9 ff ff       	call   810028c8 <__sfvwrite_r>
81002ed3:	83 c4 10             	add    $0x10,%esp
81002ed6:	85 c0                	test   %eax,%eax
81002ed8:	75 05                	jne    81002edf <_fwrite_r+0xa6>
81002eda:	8b 45 14             	mov    0x14(%ebp),%eax
81002edd:	eb 10                	jmp    81002eef <_fwrite_r+0xb6>
81002edf:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002ee2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ee5:	29 d0                	sub    %edx,%eax
81002ee7:	ba 00 00 00 00       	mov    $0x0,%edx
81002eec:	f7 75 10             	divl   0x10(%ebp)
81002eef:	c9                   	leave  
81002ef0:	c3                   	ret    

81002ef1 <fwrite>:
81002ef1:	55                   	push   %ebp
81002ef2:	89 e5                	mov    %esp,%ebp
81002ef4:	83 ec 08             	sub    $0x8,%esp
81002ef7:	a1 44 88 00 81       	mov    0x81008844,%eax
81002efc:	83 ec 0c             	sub    $0xc,%esp
81002eff:	ff 75 14             	pushl  0x14(%ebp)
81002f02:	ff 75 10             	pushl  0x10(%ebp)
81002f05:	ff 75 0c             	pushl  0xc(%ebp)
81002f08:	ff 75 08             	pushl  0x8(%ebp)
81002f0b:	50                   	push   %eax
81002f0c:	e8 28 ff ff ff       	call   81002e39 <_fwrite_r>
81002f11:	83 c4 20             	add    $0x20,%esp
81002f14:	c9                   	leave  
81002f15:	c3                   	ret    

81002f16 <reverse_argv_elements>:
81002f16:	55                   	push   %ebp
81002f17:	89 e5                	mov    %esp,%ebp
81002f19:	83 ec 10             	sub    $0x10,%esp
81002f1c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
81002f23:	eb 5e                	jmp    81002f83 <reverse_argv_elements+0x6d>
81002f25:	8b 45 fc             	mov    -0x4(%ebp),%eax
81002f28:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f2f:	8b 45 08             	mov    0x8(%ebp),%eax
81002f32:	01 d0                	add    %edx,%eax
81002f34:	8b 00                	mov    (%eax),%eax
81002f36:	89 45 f8             	mov    %eax,-0x8(%ebp)
81002f39:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f3c:	2b 45 fc             	sub    -0x4(%ebp),%eax
81002f3f:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002f44:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f4b:	8b 45 08             	mov    0x8(%ebp),%eax
81002f4e:	01 d0                	add    %edx,%eax
81002f50:	8b 55 fc             	mov    -0x4(%ebp),%edx
81002f53:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002f5a:	8b 55 08             	mov    0x8(%ebp),%edx
81002f5d:	01 ca                	add    %ecx,%edx
81002f5f:	8b 00                	mov    (%eax),%eax
81002f61:	89 02                	mov    %eax,(%edx)
81002f63:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f66:	2b 45 fc             	sub    -0x4(%ebp),%eax
81002f69:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002f6e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f75:	8b 45 08             	mov    0x8(%ebp),%eax
81002f78:	01 c2                	add    %eax,%edx
81002f7a:	8b 45 f8             	mov    -0x8(%ebp),%eax
81002f7d:	89 02                	mov    %eax,(%edx)
81002f7f:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
81002f83:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f86:	d1 f8                	sar    %eax
81002f88:	39 45 fc             	cmp    %eax,-0x4(%ebp)
81002f8b:	7c 98                	jl     81002f25 <reverse_argv_elements+0xf>
81002f8d:	90                   	nop
81002f8e:	90                   	nop
81002f8f:	c9                   	leave  
81002f90:	c3                   	ret    

81002f91 <permute>:
81002f91:	55                   	push   %ebp
81002f92:	89 e5                	mov    %esp,%ebp
81002f94:	ff 75 0c             	pushl  0xc(%ebp)
81002f97:	ff 75 08             	pushl  0x8(%ebp)
81002f9a:	e8 77 ff ff ff       	call   81002f16 <reverse_argv_elements>
81002f9f:	83 c4 08             	add    $0x8,%esp
81002fa2:	8b 55 0c             	mov    0xc(%ebp),%edx
81002fa5:	8b 45 10             	mov    0x10(%ebp),%eax
81002fa8:	01 d0                	add    %edx,%eax
81002faa:	50                   	push   %eax
81002fab:	ff 75 08             	pushl  0x8(%ebp)
81002fae:	e8 63 ff ff ff       	call   81002f16 <reverse_argv_elements>
81002fb3:	83 c4 08             	add    $0x8,%esp
81002fb6:	ff 75 10             	pushl  0x10(%ebp)
81002fb9:	ff 75 08             	pushl  0x8(%ebp)
81002fbc:	e8 55 ff ff ff       	call   81002f16 <reverse_argv_elements>
81002fc1:	83 c4 08             	add    $0x8,%esp
81002fc4:	90                   	nop
81002fc5:	c9                   	leave  
81002fc6:	c3                   	ret    

81002fc7 <is_option>:
81002fc7:	55                   	push   %ebp
81002fc8:	89 e5                	mov    %esp,%ebp
81002fca:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81002fce:	74 1a                	je     81002fea <is_option+0x23>
81002fd0:	8b 45 08             	mov    0x8(%ebp),%eax
81002fd3:	0f b6 00             	movzbl (%eax),%eax
81002fd6:	3c 2d                	cmp    $0x2d,%al
81002fd8:	74 10                	je     81002fea <is_option+0x23>
81002fda:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002fde:	74 11                	je     81002ff1 <is_option+0x2a>
81002fe0:	8b 45 08             	mov    0x8(%ebp),%eax
81002fe3:	0f b6 00             	movzbl (%eax),%eax
81002fe6:	3c 2b                	cmp    $0x2b,%al
81002fe8:	75 07                	jne    81002ff1 <is_option+0x2a>
81002fea:	b8 01 00 00 00       	mov    $0x1,%eax
81002fef:	eb 05                	jmp    81002ff6 <is_option+0x2f>
81002ff1:	b8 00 00 00 00       	mov    $0x0,%eax
81002ff6:	5d                   	pop    %ebp
81002ff7:	c3                   	ret    

81002ff8 <read_globals>:
81002ff8:	55                   	push   %ebp
81002ff9:	89 e5                	mov    %esp,%ebp
81002ffb:	8b 15 14 92 00 81    	mov    0x81009214,%edx
81003001:	8b 45 08             	mov    0x8(%ebp),%eax
81003004:	89 10                	mov    %edx,(%eax)
81003006:	8b 15 18 92 00 81    	mov    0x81009218,%edx
8100300c:	8b 45 08             	mov    0x8(%ebp),%eax
8100300f:	89 50 04             	mov    %edx,0x4(%eax)
81003012:	8b 15 04 84 00 81    	mov    0x81008404,%edx
81003018:	8b 45 08             	mov    0x8(%ebp),%eax
8100301b:	89 50 08             	mov    %edx,0x8(%eax)
8100301e:	8b 15 08 84 00 81    	mov    0x81008408,%edx
81003024:	8b 45 08             	mov    0x8(%ebp),%eax
81003027:	89 50 0c             	mov    %edx,0xc(%eax)
8100302a:	8b 15 1c 92 00 81    	mov    0x8100921c,%edx
81003030:	8b 45 08             	mov    0x8(%ebp),%eax
81003033:	89 50 10             	mov    %edx,0x10(%eax)
81003036:	8b 15 20 92 00 81    	mov    0x81009220,%edx
8100303c:	8b 45 08             	mov    0x8(%ebp),%eax
8100303f:	89 50 14             	mov    %edx,0x14(%eax)
81003042:	8b 15 24 92 00 81    	mov    0x81009224,%edx
81003048:	8b 45 08             	mov    0x8(%ebp),%eax
8100304b:	89 50 18             	mov    %edx,0x18(%eax)
8100304e:	90                   	nop
8100304f:	5d                   	pop    %ebp
81003050:	c3                   	ret    

81003051 <write_globals>:
81003051:	55                   	push   %ebp
81003052:	89 e5                	mov    %esp,%ebp
81003054:	8b 45 08             	mov    0x8(%ebp),%eax
81003057:	8b 00                	mov    (%eax),%eax
81003059:	a3 14 92 00 81       	mov    %eax,0x81009214
8100305e:	8b 45 08             	mov    0x8(%ebp),%eax
81003061:	8b 40 04             	mov    0x4(%eax),%eax
81003064:	a3 18 92 00 81       	mov    %eax,0x81009218
81003069:	8b 45 08             	mov    0x8(%ebp),%eax
8100306c:	8b 40 08             	mov    0x8(%eax),%eax
8100306f:	a3 04 84 00 81       	mov    %eax,0x81008404
81003074:	8b 45 08             	mov    0x8(%ebp),%eax
81003077:	8b 40 0c             	mov    0xc(%eax),%eax
8100307a:	a3 08 84 00 81       	mov    %eax,0x81008408
8100307f:	8b 45 08             	mov    0x8(%ebp),%eax
81003082:	8b 40 10             	mov    0x10(%eax),%eax
81003085:	a3 1c 92 00 81       	mov    %eax,0x8100921c
8100308a:	8b 45 08             	mov    0x8(%ebp),%eax
8100308d:	8b 40 14             	mov    0x14(%eax),%eax
81003090:	a3 20 92 00 81       	mov    %eax,0x81009220
81003095:	8b 45 08             	mov    0x8(%ebp),%eax
81003098:	8b 40 18             	mov    0x18(%eax),%eax
8100309b:	a3 24 92 00 81       	mov    %eax,0x81009224
810030a0:	90                   	nop
810030a1:	5d                   	pop    %ebp
810030a2:	c3                   	ret    

810030a3 <getopt_internal>:
810030a3:	55                   	push   %ebp
810030a4:	89 e5                	mov    %esp,%ebp
810030a6:	53                   	push   %ebx
810030a7:	83 ec 34             	sub    $0x34,%esp
810030aa:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810030b1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810030b8:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810030bf:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810030c6:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
810030cd:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
810030d4:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
810030db:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810030e2:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
810030e9:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810030ed:	74 35                	je     81003124 <getopt_internal+0x81>
810030ef:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810030f3:	74 2f                	je     81003124 <getopt_internal+0x81>
810030f5:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810030f9:	75 06                	jne    81003101 <getopt_internal+0x5e>
810030fb:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810030ff:	74 23                	je     81003124 <getopt_internal+0x81>
81003101:	8b 45 20             	mov    0x20(%ebp),%eax
81003104:	8b 40 04             	mov    0x4(%eax),%eax
81003107:	39 45 08             	cmp    %eax,0x8(%ebp)
8100310a:	7e 18                	jle    81003124 <getopt_internal+0x81>
8100310c:	8b 45 20             	mov    0x20(%ebp),%eax
8100310f:	8b 40 04             	mov    0x4(%eax),%eax
81003112:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003119:	8b 45 0c             	mov    0xc(%ebp),%eax
8100311c:	01 d0                	add    %edx,%eax
8100311e:	8b 00                	mov    (%eax),%eax
81003120:	85 c0                	test   %eax,%eax
81003122:	75 0a                	jne    8100312e <getopt_internal+0x8b>
81003124:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003129:	e9 85 0a 00 00       	jmp    81003bb3 <getopt_internal+0xb10>
8100312e:	8b 45 20             	mov    0x20(%ebp),%eax
81003131:	8b 40 04             	mov    0x4(%eax),%eax
81003134:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100313b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100313e:	01 d0                	add    %edx,%eax
81003140:	8b 00                	mov    (%eax),%eax
81003142:	83 ec 08             	sub    $0x8,%esp
81003145:	68 fc 7f 00 81       	push   $0x81007ffc
8100314a:	50                   	push   %eax
8100314b:	e8 ec 38 00 00       	call   81006a3c <strcmp>
81003150:	83 c4 10             	add    $0x10,%esp
81003153:	85 c0                	test   %eax,%eax
81003155:	75 19                	jne    81003170 <getopt_internal+0xcd>
81003157:	8b 45 20             	mov    0x20(%ebp),%eax
8100315a:	8b 40 04             	mov    0x4(%eax),%eax
8100315d:	8d 50 01             	lea    0x1(%eax),%edx
81003160:	8b 45 20             	mov    0x20(%ebp),%eax
81003163:	89 50 04             	mov    %edx,0x4(%eax)
81003166:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100316b:	e9 43 0a 00 00       	jmp    81003bb3 <getopt_internal+0xb10>
81003170:	8b 45 20             	mov    0x20(%ebp),%eax
81003173:	8b 40 04             	mov    0x4(%eax),%eax
81003176:	85 c0                	test   %eax,%eax
81003178:	75 28                	jne    810031a2 <getopt_internal+0xff>
8100317a:	8b 45 20             	mov    0x20(%ebp),%eax
8100317d:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81003184:	8b 45 20             	mov    0x20(%ebp),%eax
81003187:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100318e:	8b 45 20             	mov    0x20(%ebp),%eax
81003191:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81003198:	8b 45 20             	mov    0x20(%ebp),%eax
8100319b:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810031a2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810031a6:	74 33                	je     810031db <getopt_internal+0x138>
810031a8:	8b 45 10             	mov    0x10(%ebp),%eax
810031ab:	0f b6 00             	movzbl (%eax),%eax
810031ae:	3c 2d                	cmp    $0x2d,%al
810031b0:	74 0a                	je     810031bc <getopt_internal+0x119>
810031b2:	8b 45 10             	mov    0x10(%ebp),%eax
810031b5:	0f b6 00             	movzbl (%eax),%eax
810031b8:	3c 2b                	cmp    $0x2b,%al
810031ba:	75 1f                	jne    810031db <getopt_internal+0x138>
810031bc:	8b 45 10             	mov    0x10(%ebp),%eax
810031bf:	0f b6 00             	movzbl (%eax),%eax
810031c2:	3c 2d                	cmp    $0x2d,%al
810031c4:	75 07                	jne    810031cd <getopt_internal+0x12a>
810031c6:	b8 01 00 00 00       	mov    $0x1,%eax
810031cb:	eb 05                	jmp    810031d2 <getopt_internal+0x12f>
810031cd:	b8 02 00 00 00       	mov    $0x2,%eax
810031d2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810031d5:	83 45 10 01          	addl   $0x1,0x10(%ebp)
810031d9:	eb 23                	jmp    810031fe <getopt_internal+0x15b>
810031db:	83 ec 0c             	sub    $0xc,%esp
810031de:	68 ff 7f 00 81       	push   $0x81007fff
810031e3:	e8 3d 44 00 00       	call   81007625 <getenv>
810031e8:	83 c4 10             	add    $0x10,%esp
810031eb:	85 c0                	test   %eax,%eax
810031ed:	74 07                	je     810031f6 <getopt_internal+0x153>
810031ef:	b8 02 00 00 00       	mov    $0x2,%eax
810031f4:	eb 05                	jmp    810031fb <getopt_internal+0x158>
810031f6:	b8 00 00 00 00       	mov    $0x0,%eax
810031fb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810031fe:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003202:	74 15                	je     81003219 <getopt_internal+0x176>
81003204:	8b 45 10             	mov    0x10(%ebp),%eax
81003207:	0f b6 00             	movzbl (%eax),%eax
8100320a:	3c 3a                	cmp    $0x3a,%al
8100320c:	75 0b                	jne    81003219 <getopt_internal+0x176>
8100320e:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81003212:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81003219:	8b 45 20             	mov    0x20(%ebp),%eax
8100321c:	8b 40 10             	mov    0x10(%eax),%eax
8100321f:	83 f8 01             	cmp    $0x1,%eax
81003222:	0f 85 a2 01 00 00    	jne    810033ca <getopt_internal+0x327>
81003228:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
8100322c:	0f 84 02 01 00 00    	je     81003334 <getopt_internal+0x291>
81003232:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81003236:	0f 84 56 01 00 00    	je     81003392 <getopt_internal+0x2ef>
8100323c:	8b 45 20             	mov    0x20(%ebp),%eax
8100323f:	8b 50 04             	mov    0x4(%eax),%edx
81003242:	8b 45 20             	mov    0x20(%ebp),%eax
81003245:	89 50 14             	mov    %edx,0x14(%eax)
81003248:	8b 45 20             	mov    0x20(%ebp),%eax
8100324b:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81003252:	eb 1e                	jmp    81003272 <getopt_internal+0x1cf>
81003254:	8b 45 20             	mov    0x20(%ebp),%eax
81003257:	8b 40 04             	mov    0x4(%eax),%eax
8100325a:	8d 50 01             	lea    0x1(%eax),%edx
8100325d:	8b 45 20             	mov    0x20(%ebp),%eax
81003260:	89 50 04             	mov    %edx,0x4(%eax)
81003263:	8b 45 20             	mov    0x20(%ebp),%eax
81003266:	8b 40 18             	mov    0x18(%eax),%eax
81003269:	8d 50 01             	lea    0x1(%eax),%edx
8100326c:	8b 45 20             	mov    0x20(%ebp),%eax
8100326f:	89 50 18             	mov    %edx,0x18(%eax)
81003272:	8b 45 20             	mov    0x20(%ebp),%eax
81003275:	8b 40 04             	mov    0x4(%eax),%eax
81003278:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100327f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003282:	01 d0                	add    %edx,%eax
81003284:	8b 00                	mov    (%eax),%eax
81003286:	83 ec 08             	sub    $0x8,%esp
81003289:	ff 75 1c             	pushl  0x1c(%ebp)
8100328c:	50                   	push   %eax
8100328d:	e8 35 fd ff ff       	call   81002fc7 <is_option>
81003292:	83 c4 10             	add    $0x10,%esp
81003295:	85 c0                	test   %eax,%eax
81003297:	74 bb                	je     81003254 <getopt_internal+0x1b1>
81003299:	8b 45 20             	mov    0x20(%ebp),%eax
8100329c:	8b 40 04             	mov    0x4(%eax),%eax
8100329f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810032a6:	8b 45 0c             	mov    0xc(%ebp),%eax
810032a9:	01 d0                	add    %edx,%eax
810032ab:	8b 00                	mov    (%eax),%eax
810032ad:	85 c0                	test   %eax,%eax
810032af:	75 16                	jne    810032c7 <getopt_internal+0x224>
810032b1:	8b 45 20             	mov    0x20(%ebp),%eax
810032b4:	8b 50 14             	mov    0x14(%eax),%edx
810032b7:	8b 45 20             	mov    0x20(%ebp),%eax
810032ba:	89 50 04             	mov    %edx,0x4(%eax)
810032bd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810032c2:	e9 ec 08 00 00       	jmp    81003bb3 <getopt_internal+0xb10>
810032c7:	8b 45 20             	mov    0x20(%ebp),%eax
810032ca:	8b 40 04             	mov    0x4(%eax),%eax
810032cd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810032d4:	8b 45 0c             	mov    0xc(%ebp),%eax
810032d7:	01 d0                	add    %edx,%eax
810032d9:	8b 00                	mov    (%eax),%eax
810032db:	83 ec 08             	sub    $0x8,%esp
810032de:	68 fc 7f 00 81       	push   $0x81007ffc
810032e3:	50                   	push   %eax
810032e4:	e8 53 37 00 00       	call   81006a3c <strcmp>
810032e9:	83 c4 10             	add    $0x10,%esp
810032ec:	85 c0                	test   %eax,%eax
810032ee:	0f 85 cf 00 00 00    	jne    810033c3 <getopt_internal+0x320>
810032f4:	8b 45 20             	mov    0x20(%ebp),%eax
810032f7:	8b 40 18             	mov    0x18(%eax),%eax
810032fa:	8b 55 20             	mov    0x20(%ebp),%edx
810032fd:	8b 52 14             	mov    0x14(%edx),%edx
81003300:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81003307:	8b 55 0c             	mov    0xc(%ebp),%edx
8100330a:	01 ca                	add    %ecx,%edx
8100330c:	83 ec 04             	sub    $0x4,%esp
8100330f:	6a 01                	push   $0x1
81003311:	50                   	push   %eax
81003312:	52                   	push   %edx
81003313:	e8 79 fc ff ff       	call   81002f91 <permute>
81003318:	83 c4 10             	add    $0x10,%esp
8100331b:	8b 45 20             	mov    0x20(%ebp),%eax
8100331e:	8b 40 14             	mov    0x14(%eax),%eax
81003321:	8d 50 01             	lea    0x1(%eax),%edx
81003324:	8b 45 20             	mov    0x20(%ebp),%eax
81003327:	89 50 04             	mov    %edx,0x4(%eax)
8100332a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100332f:	e9 7f 08 00 00       	jmp    81003bb3 <getopt_internal+0xb10>
81003334:	8b 45 20             	mov    0x20(%ebp),%eax
81003337:	8b 40 04             	mov    0x4(%eax),%eax
8100333a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003341:	8b 45 0c             	mov    0xc(%ebp),%eax
81003344:	01 d0                	add    %edx,%eax
81003346:	8b 00                	mov    (%eax),%eax
81003348:	83 ec 08             	sub    $0x8,%esp
8100334b:	ff 75 1c             	pushl  0x1c(%ebp)
8100334e:	50                   	push   %eax
8100334f:	e8 73 fc ff ff       	call   81002fc7 <is_option>
81003354:	83 c4 10             	add    $0x10,%esp
81003357:	85 c0                	test   %eax,%eax
81003359:	75 6b                	jne    810033c6 <getopt_internal+0x323>
8100335b:	8b 45 20             	mov    0x20(%ebp),%eax
8100335e:	8b 40 04             	mov    0x4(%eax),%eax
81003361:	8d 48 01             	lea    0x1(%eax),%ecx
81003364:	8b 55 20             	mov    0x20(%ebp),%edx
81003367:	89 4a 04             	mov    %ecx,0x4(%edx)
8100336a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003371:	8b 45 0c             	mov    0xc(%ebp),%eax
81003374:	01 d0                	add    %edx,%eax
81003376:	8b 10                	mov    (%eax),%edx
81003378:	8b 45 20             	mov    0x20(%ebp),%eax
8100337b:	89 10                	mov    %edx,(%eax)
8100337d:	8b 45 20             	mov    0x20(%ebp),%eax
81003380:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
81003387:	8b 45 20             	mov    0x20(%ebp),%eax
8100338a:	8b 40 0c             	mov    0xc(%eax),%eax
8100338d:	e9 21 08 00 00       	jmp    81003bb3 <getopt_internal+0xb10>
81003392:	8b 45 20             	mov    0x20(%ebp),%eax
81003395:	8b 40 04             	mov    0x4(%eax),%eax
81003398:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100339f:	8b 45 0c             	mov    0xc(%ebp),%eax
810033a2:	01 d0                	add    %edx,%eax
810033a4:	8b 00                	mov    (%eax),%eax
810033a6:	83 ec 08             	sub    $0x8,%esp
810033a9:	ff 75 1c             	pushl  0x1c(%ebp)
810033ac:	50                   	push   %eax
810033ad:	e8 15 fc ff ff       	call   81002fc7 <is_option>
810033b2:	83 c4 10             	add    $0x10,%esp
810033b5:	85 c0                	test   %eax,%eax
810033b7:	75 10                	jne    810033c9 <getopt_internal+0x326>
810033b9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810033be:	e9 f0 07 00 00       	jmp    81003bb3 <getopt_internal+0xb10>
810033c3:	90                   	nop
810033c4:	eb 04                	jmp    810033ca <getopt_internal+0x327>
810033c6:	90                   	nop
810033c7:	eb 01                	jmp    810033ca <getopt_internal+0x327>
810033c9:	90                   	nop
810033ca:	8b 45 20             	mov    0x20(%ebp),%eax
810033cd:	8b 40 04             	mov    0x4(%eax),%eax
810033d0:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810033d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810033da:	01 d0                	add    %edx,%eax
810033dc:	8b 00                	mov    (%eax),%eax
810033de:	85 c0                	test   %eax,%eax
810033e0:	75 0a                	jne    810033ec <getopt_internal+0x349>
810033e2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810033e7:	e9 c7 07 00 00       	jmp    81003bb3 <getopt_internal+0xb10>
810033ec:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810033f0:	0f 84 15 03 00 00    	je     8100370b <getopt_internal+0x668>
810033f6:	8b 45 20             	mov    0x20(%ebp),%eax
810033f9:	8b 40 04             	mov    0x4(%eax),%eax
810033fc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003403:	8b 45 0c             	mov    0xc(%ebp),%eax
81003406:	01 d0                	add    %edx,%eax
81003408:	8b 00                	mov    (%eax),%eax
8100340a:	83 ec 04             	sub    $0x4,%esp
8100340d:	6a 02                	push   $0x2
8100340f:	68 fc 7f 00 81       	push   $0x81007ffc
81003414:	50                   	push   %eax
81003415:	e8 fb 15 00 00       	call   81004a15 <memcmp>
8100341a:	83 c4 10             	add    $0x10,%esp
8100341d:	85 c0                	test   %eax,%eax
8100341f:	74 29                	je     8100344a <getopt_internal+0x3a7>
81003421:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81003425:	0f 84 e0 02 00 00    	je     8100370b <getopt_internal+0x668>
8100342b:	8b 45 20             	mov    0x20(%ebp),%eax
8100342e:	8b 40 04             	mov    0x4(%eax),%eax
81003431:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003438:	8b 45 0c             	mov    0xc(%ebp),%eax
8100343b:	01 d0                	add    %edx,%eax
8100343d:	8b 00                	mov    (%eax),%eax
8100343f:	0f b6 00             	movzbl (%eax),%eax
81003442:	3c 2b                	cmp    $0x2b,%al
81003444:	0f 85 c1 02 00 00    	jne    8100370b <getopt_internal+0x668>
8100344a:	8b 45 20             	mov    0x20(%ebp),%eax
8100344d:	8b 40 10             	mov    0x10(%eax),%eax
81003450:	83 f8 01             	cmp    $0x1,%eax
81003453:	0f 85 b2 02 00 00    	jne    8100370b <getopt_internal+0x668>
81003459:	8b 45 20             	mov    0x20(%ebp),%eax
8100345c:	8b 40 04             	mov    0x4(%eax),%eax
8100345f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003466:	8b 45 0c             	mov    0xc(%ebp),%eax
81003469:	01 d0                	add    %edx,%eax
8100346b:	8b 00                	mov    (%eax),%eax
8100346d:	83 ec 04             	sub    $0x4,%esp
81003470:	6a 02                	push   $0x2
81003472:	68 fc 7f 00 81       	push   $0x81007ffc
81003477:	50                   	push   %eax
81003478:	e8 98 15 00 00       	call   81004a15 <memcmp>
8100347d:	83 c4 10             	add    $0x10,%esp
81003480:	85 c0                	test   %eax,%eax
81003482:	75 0a                	jne    8100348e <getopt_internal+0x3eb>
81003484:	8b 45 20             	mov    0x20(%ebp),%eax
81003487:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
8100348e:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81003495:	8b 45 20             	mov    0x20(%ebp),%eax
81003498:	8b 40 04             	mov    0x4(%eax),%eax
8100349b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810034a2:	8b 45 0c             	mov    0xc(%ebp),%eax
810034a5:	01 d0                	add    %edx,%eax
810034a7:	8b 10                	mov    (%eax),%edx
810034a9:	8b 45 20             	mov    0x20(%ebp),%eax
810034ac:	8b 40 10             	mov    0x10(%eax),%eax
810034af:	01 d0                	add    %edx,%eax
810034b1:	83 ec 08             	sub    $0x8,%esp
810034b4:	6a 3d                	push   $0x3d
810034b6:	50                   	push   %eax
810034b7:	e8 84 34 00 00       	call   81006940 <strchr>
810034bc:	83 c4 10             	add    $0x10,%esp
810034bf:	89 45 e8             	mov    %eax,-0x18(%ebp)
810034c2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810034c6:	75 4a                	jne    81003512 <getopt_internal+0x46f>
810034c8:	8b 45 20             	mov    0x20(%ebp),%eax
810034cb:	8b 40 04             	mov    0x4(%eax),%eax
810034ce:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810034d5:	8b 45 0c             	mov    0xc(%ebp),%eax
810034d8:	01 d0                	add    %edx,%eax
810034da:	8b 00                	mov    (%eax),%eax
810034dc:	83 ec 0c             	sub    $0xc,%esp
810034df:	50                   	push   %eax
810034e0:	e8 0b 36 00 00       	call   81006af0 <strlen>
810034e5:	83 c4 10             	add    $0x10,%esp
810034e8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810034eb:	8b 45 20             	mov    0x20(%ebp),%eax
810034ee:	8b 40 04             	mov    0x4(%eax),%eax
810034f1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810034f8:	8b 45 0c             	mov    0xc(%ebp),%eax
810034fb:	01 d0                	add    %edx,%eax
810034fd:	8b 10                	mov    (%eax),%edx
810034ff:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003502:	01 d0                	add    %edx,%eax
81003504:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003507:	8b 45 20             	mov    0x20(%ebp),%eax
8100350a:	8b 40 10             	mov    0x10(%eax),%eax
8100350d:	29 45 ec             	sub    %eax,-0x14(%ebp)
81003510:	eb 28                	jmp    8100353a <getopt_internal+0x497>
81003512:	8b 45 20             	mov    0x20(%ebp),%eax
81003515:	8b 40 04             	mov    0x4(%eax),%eax
81003518:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100351f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003522:	01 d0                	add    %edx,%eax
81003524:	8b 08                	mov    (%eax),%ecx
81003526:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003529:	29 c8                	sub    %ecx,%eax
8100352b:	89 c2                	mov    %eax,%edx
8100352d:	8b 45 20             	mov    0x20(%ebp),%eax
81003530:	8b 48 10             	mov    0x10(%eax),%ecx
81003533:	89 d0                	mov    %edx,%eax
81003535:	29 c8                	sub    %ecx,%eax
81003537:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100353a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003541:	e9 95 01 00 00       	jmp    810036db <getopt_internal+0x638>
81003546:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003549:	c1 e0 04             	shl    $0x4,%eax
8100354c:	89 c2                	mov    %eax,%edx
8100354e:	8b 45 14             	mov    0x14(%ebp),%eax
81003551:	01 d0                	add    %edx,%eax
81003553:	8b 00                	mov    (%eax),%eax
81003555:	8b 55 20             	mov    0x20(%ebp),%edx
81003558:	8b 52 04             	mov    0x4(%edx),%edx
8100355b:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81003562:	8b 55 0c             	mov    0xc(%ebp),%edx
81003565:	01 ca                	add    %ecx,%edx
81003567:	8b 0a                	mov    (%edx),%ecx
81003569:	8b 55 20             	mov    0x20(%ebp),%edx
8100356c:	8b 52 10             	mov    0x10(%edx),%edx
8100356f:	01 ca                	add    %ecx,%edx
81003571:	83 ec 04             	sub    $0x4,%esp
81003574:	ff 75 ec             	pushl  -0x14(%ebp)
81003577:	50                   	push   %eax
81003578:	52                   	push   %edx
81003579:	e8 97 14 00 00       	call   81004a15 <memcmp>
8100357e:	83 c4 10             	add    $0x10,%esp
81003581:	85 c0                	test   %eax,%eax
81003583:	0f 85 4e 01 00 00    	jne    810036d7 <getopt_internal+0x634>
81003589:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100358c:	c1 e0 04             	shl    $0x4,%eax
8100358f:	89 c2                	mov    %eax,%edx
81003591:	8b 45 14             	mov    0x14(%ebp),%eax
81003594:	01 d0                	add    %edx,%eax
81003596:	8b 00                	mov    (%eax),%eax
81003598:	83 ec 0c             	sub    $0xc,%esp
8100359b:	50                   	push   %eax
8100359c:	e8 4f 35 00 00       	call   81006af0 <strlen>
810035a1:	83 c4 10             	add    $0x10,%esp
810035a4:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810035a7:	75 0b                	jne    810035b4 <getopt_internal+0x511>
810035a9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035ac:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810035af:	e9 3e 01 00 00       	jmp    810036f2 <getopt_internal+0x64f>
810035b4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810035b8:	79 0b                	jns    810035c5 <getopt_internal+0x522>
810035ba:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035bd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810035c0:	e9 12 01 00 00       	jmp    810036d7 <getopt_internal+0x634>
810035c5:	8b 45 20             	mov    0x20(%ebp),%eax
810035c8:	8b 40 08             	mov    0x8(%eax),%eax
810035cb:	85 c0                	test   %eax,%eax
810035cd:	0f 84 ef 00 00 00    	je     810036c2 <getopt_internal+0x61f>
810035d3:	a1 44 88 00 81       	mov    0x81008844,%eax
810035d8:	8b 50 0c             	mov    0xc(%eax),%edx
810035db:	8b 45 0c             	mov    0xc(%ebp),%eax
810035de:	8b 00                	mov    (%eax),%eax
810035e0:	83 ec 08             	sub    $0x8,%esp
810035e3:	52                   	push   %edx
810035e4:	50                   	push   %eax
810035e5:	e8 98 e5 ff ff       	call   81001b82 <fputs>
810035ea:	83 c4 10             	add    $0x10,%esp
810035ed:	a1 44 88 00 81       	mov    0x81008844,%eax
810035f2:	8b 40 0c             	mov    0xc(%eax),%eax
810035f5:	83 ec 08             	sub    $0x8,%esp
810035f8:	50                   	push   %eax
810035f9:	68 0f 80 00 81       	push   $0x8100800f
810035fe:	e8 7f e5 ff ff       	call   81001b82 <fputs>
81003603:	83 c4 10             	add    $0x10,%esp
81003606:	a1 44 88 00 81       	mov    0x81008844,%eax
8100360b:	8b 50 0c             	mov    0xc(%eax),%edx
8100360e:	8b 45 20             	mov    0x20(%ebp),%eax
81003611:	8b 40 04             	mov    0x4(%eax),%eax
81003614:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
8100361b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100361e:	01 c8                	add    %ecx,%eax
81003620:	8b 00                	mov    (%eax),%eax
81003622:	83 ec 08             	sub    $0x8,%esp
81003625:	52                   	push   %edx
81003626:	50                   	push   %eax
81003627:	e8 56 e5 ff ff       	call   81001b82 <fputs>
8100362c:	83 c4 10             	add    $0x10,%esp
8100362f:	a1 44 88 00 81       	mov    0x81008844,%eax
81003634:	8b 40 0c             	mov    0xc(%eax),%eax
81003637:	83 ec 08             	sub    $0x8,%esp
8100363a:	50                   	push   %eax
8100363b:	68 1a 80 00 81       	push   $0x8100801a
81003640:	e8 3d e5 ff ff       	call   81001b82 <fputs>
81003645:	83 c4 10             	add    $0x10,%esp
81003648:	a1 44 88 00 81       	mov    0x81008844,%eax
8100364d:	8b 50 0c             	mov    0xc(%eax),%edx
81003650:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003653:	c1 e0 04             	shl    $0x4,%eax
81003656:	89 c1                	mov    %eax,%ecx
81003658:	8b 45 14             	mov    0x14(%ebp),%eax
8100365b:	01 c8                	add    %ecx,%eax
8100365d:	8b 00                	mov    (%eax),%eax
8100365f:	83 ec 08             	sub    $0x8,%esp
81003662:	52                   	push   %edx
81003663:	50                   	push   %eax
81003664:	e8 19 e5 ff ff       	call   81001b82 <fputs>
81003669:	83 c4 10             	add    $0x10,%esp
8100366c:	a1 44 88 00 81       	mov    0x81008844,%eax
81003671:	8b 40 0c             	mov    0xc(%eax),%eax
81003674:	83 ec 08             	sub    $0x8,%esp
81003677:	50                   	push   %eax
81003678:	68 37 80 00 81       	push   $0x81008037
8100367d:	e8 00 e5 ff ff       	call   81001b82 <fputs>
81003682:	83 c4 10             	add    $0x10,%esp
81003685:	a1 44 88 00 81       	mov    0x81008844,%eax
8100368a:	8b 50 0c             	mov    0xc(%eax),%edx
8100368d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003690:	c1 e0 04             	shl    $0x4,%eax
81003693:	89 c1                	mov    %eax,%ecx
81003695:	8b 45 14             	mov    0x14(%ebp),%eax
81003698:	01 c8                	add    %ecx,%eax
8100369a:	8b 00                	mov    (%eax),%eax
8100369c:	83 ec 08             	sub    $0x8,%esp
8100369f:	52                   	push   %edx
810036a0:	50                   	push   %eax
810036a1:	e8 dc e4 ff ff       	call   81001b82 <fputs>
810036a6:	83 c4 10             	add    $0x10,%esp
810036a9:	a1 44 88 00 81       	mov    0x81008844,%eax
810036ae:	8b 40 0c             	mov    0xc(%eax),%eax
810036b1:	83 ec 08             	sub    $0x8,%esp
810036b4:	50                   	push   %eax
810036b5:	68 40 80 00 81       	push   $0x81008040
810036ba:	e8 c3 e4 ff ff       	call   81001b82 <fputs>
810036bf:	83 c4 10             	add    $0x10,%esp
810036c2:	8b 45 20             	mov    0x20(%ebp),%eax
810036c5:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
810036cc:	8b 45 20             	mov    0x20(%ebp),%eax
810036cf:	8b 40 0c             	mov    0xc(%eax),%eax
810036d2:	e9 dc 04 00 00       	jmp    81003bb3 <getopt_internal+0xb10>
810036d7:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810036db:	8b 45 f0             	mov    -0x10(%ebp),%eax
810036de:	c1 e0 04             	shl    $0x4,%eax
810036e1:	89 c2                	mov    %eax,%edx
810036e3:	8b 45 14             	mov    0x14(%ebp),%eax
810036e6:	01 d0                	add    %edx,%eax
810036e8:	8b 00                	mov    (%eax),%eax
810036ea:	85 c0                	test   %eax,%eax
810036ec:	0f 85 54 fe ff ff    	jne    81003546 <getopt_internal+0x4a3>
810036f2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810036f6:	78 13                	js     8100370b <getopt_internal+0x668>
810036f8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810036fb:	c1 e0 04             	shl    $0x4,%eax
810036fe:	89 c2                	mov    %eax,%edx
81003700:	8b 45 14             	mov    0x14(%ebp),%eax
81003703:	01 d0                	add    %edx,%eax
81003705:	8b 40 04             	mov    0x4(%eax),%eax
81003708:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100370b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100370f:	0f 89 9a 01 00 00    	jns    810038af <getopt_internal+0x80c>
81003715:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003719:	0f 84 90 01 00 00    	je     810038af <getopt_internal+0x80c>
8100371f:	8b 45 20             	mov    0x20(%ebp),%eax
81003722:	8b 40 04             	mov    0x4(%eax),%eax
81003725:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100372c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100372f:	01 d0                	add    %edx,%eax
81003731:	8b 10                	mov    (%eax),%edx
81003733:	8b 45 20             	mov    0x20(%ebp),%eax
81003736:	8b 40 10             	mov    0x10(%eax),%eax
81003739:	01 d0                	add    %edx,%eax
8100373b:	0f b6 00             	movzbl (%eax),%eax
8100373e:	0f be c0             	movsbl %al,%eax
81003741:	83 ec 08             	sub    $0x8,%esp
81003744:	50                   	push   %eax
81003745:	ff 75 10             	pushl  0x10(%ebp)
81003748:	e8 f3 31 00 00       	call   81006940 <strchr>
8100374d:	83 c4 10             	add    $0x10,%esp
81003750:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003753:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81003757:	0f 85 f1 00 00 00    	jne    8100384e <getopt_internal+0x7ab>
8100375d:	8b 45 20             	mov    0x20(%ebp),%eax
81003760:	8b 40 08             	mov    0x8(%eax),%eax
81003763:	85 c0                	test   %eax,%eax
81003765:	0f 84 83 00 00 00    	je     810037ee <getopt_internal+0x74b>
8100376b:	a1 44 88 00 81       	mov    0x81008844,%eax
81003770:	8b 50 0c             	mov    0xc(%eax),%edx
81003773:	8b 45 0c             	mov    0xc(%ebp),%eax
81003776:	8b 00                	mov    (%eax),%eax
81003778:	83 ec 08             	sub    $0x8,%esp
8100377b:	52                   	push   %edx
8100377c:	50                   	push   %eax
8100377d:	e8 00 e4 ff ff       	call   81001b82 <fputs>
81003782:	83 c4 10             	add    $0x10,%esp
81003785:	a1 44 88 00 81       	mov    0x81008844,%eax
8100378a:	8b 40 0c             	mov    0xc(%eax),%eax
8100378d:	83 ec 08             	sub    $0x8,%esp
81003790:	50                   	push   %eax
81003791:	68 44 80 00 81       	push   $0x81008044
81003796:	e8 e7 e3 ff ff       	call   81001b82 <fputs>
8100379b:	83 c4 10             	add    $0x10,%esp
8100379e:	a1 44 88 00 81       	mov    0x81008844,%eax
810037a3:	8b 50 0c             	mov    0xc(%eax),%edx
810037a6:	8b 45 20             	mov    0x20(%ebp),%eax
810037a9:	8b 40 04             	mov    0x4(%eax),%eax
810037ac:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
810037b3:	8b 45 0c             	mov    0xc(%ebp),%eax
810037b6:	01 c8                	add    %ecx,%eax
810037b8:	8b 08                	mov    (%eax),%ecx
810037ba:	8b 45 20             	mov    0x20(%ebp),%eax
810037bd:	8b 40 10             	mov    0x10(%eax),%eax
810037c0:	01 c8                	add    %ecx,%eax
810037c2:	0f b6 00             	movzbl (%eax),%eax
810037c5:	0f be c0             	movsbl %al,%eax
810037c8:	83 ec 08             	sub    $0x8,%esp
810037cb:	52                   	push   %edx
810037cc:	50                   	push   %eax
810037cd:	e8 30 3c 00 00       	call   81007402 <fputc>
810037d2:	83 c4 10             	add    $0x10,%esp
810037d5:	a1 44 88 00 81       	mov    0x81008844,%eax
810037da:	8b 40 0c             	mov    0xc(%eax),%eax
810037dd:	83 ec 08             	sub    $0x8,%esp
810037e0:	50                   	push   %eax
810037e1:	68 5b 80 00 81       	push   $0x8100805b
810037e6:	e8 97 e3 ff ff       	call   81001b82 <fputs>
810037eb:	83 c4 10             	add    $0x10,%esp
810037ee:	8b 45 20             	mov    0x20(%ebp),%eax
810037f1:	8b 40 10             	mov    0x10(%eax),%eax
810037f4:	8d 50 01             	lea    0x1(%eax),%edx
810037f7:	8b 45 20             	mov    0x20(%ebp),%eax
810037fa:	89 50 10             	mov    %edx,0x10(%eax)
810037fd:	8b 45 20             	mov    0x20(%ebp),%eax
81003800:	8b 40 04             	mov    0x4(%eax),%eax
81003803:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100380a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100380d:	01 d0                	add    %edx,%eax
8100380f:	8b 10                	mov    (%eax),%edx
81003811:	8b 45 20             	mov    0x20(%ebp),%eax
81003814:	8b 40 10             	mov    0x10(%eax),%eax
81003817:	01 d0                	add    %edx,%eax
81003819:	0f b6 00             	movzbl (%eax),%eax
8100381c:	84 c0                	test   %al,%al
8100381e:	75 19                	jne    81003839 <getopt_internal+0x796>
81003820:	8b 45 20             	mov    0x20(%ebp),%eax
81003823:	8b 40 04             	mov    0x4(%eax),%eax
81003826:	8d 50 01             	lea    0x1(%eax),%edx
81003829:	8b 45 20             	mov    0x20(%ebp),%eax
8100382c:	89 50 04             	mov    %edx,0x4(%eax)
8100382f:	8b 45 20             	mov    0x20(%ebp),%eax
81003832:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003839:	8b 45 20             	mov    0x20(%ebp),%eax
8100383c:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81003843:	8b 45 20             	mov    0x20(%ebp),%eax
81003846:	8b 40 0c             	mov    0xc(%eax),%eax
81003849:	e9 65 03 00 00       	jmp    81003bb3 <getopt_internal+0xb10>
8100384e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003851:	83 c0 01             	add    $0x1,%eax
81003854:	0f b6 00             	movzbl (%eax),%eax
81003857:	3c 3a                	cmp    $0x3a,%al
81003859:	75 1b                	jne    81003876 <getopt_internal+0x7d3>
8100385b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100385e:	83 c0 02             	add    $0x2,%eax
81003861:	0f b6 00             	movzbl (%eax),%eax
81003864:	3c 3a                	cmp    $0x3a,%al
81003866:	75 07                	jne    8100386f <getopt_internal+0x7cc>
81003868:	b8 02 00 00 00       	mov    $0x2,%eax
8100386d:	eb 0c                	jmp    8100387b <getopt_internal+0x7d8>
8100386f:	b8 01 00 00 00       	mov    $0x1,%eax
81003874:	eb 05                	jmp    8100387b <getopt_internal+0x7d8>
81003876:	b8 00 00 00 00       	mov    $0x0,%eax
8100387b:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100387e:	8b 45 20             	mov    0x20(%ebp),%eax
81003881:	8b 40 04             	mov    0x4(%eax),%eax
81003884:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100388b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100388e:	01 d0                	add    %edx,%eax
81003890:	8b 10                	mov    (%eax),%edx
81003892:	8b 45 20             	mov    0x20(%ebp),%eax
81003895:	8b 40 10             	mov    0x10(%eax),%eax
81003898:	83 c0 01             	add    $0x1,%eax
8100389b:	01 d0                	add    %edx,%eax
8100389d:	89 45 e8             	mov    %eax,-0x18(%ebp)
810038a0:	8b 45 dc             	mov    -0x24(%ebp),%eax
810038a3:	0f b6 00             	movzbl (%eax),%eax
810038a6:	0f be d0             	movsbl %al,%edx
810038a9:	8b 45 20             	mov    0x20(%ebp),%eax
810038ac:	89 50 0c             	mov    %edx,0xc(%eax)
810038af:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810038b6:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
810038ba:	74 40                	je     810038fc <getopt_internal+0x859>
810038bc:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
810038c0:	0f 85 b0 01 00 00    	jne    81003a76 <getopt_internal+0x9d3>
810038c6:	8b 45 e8             	mov    -0x18(%ebp),%eax
810038c9:	0f b6 00             	movzbl (%eax),%eax
810038cc:	3c 3d                	cmp    $0x3d,%al
810038ce:	75 04                	jne    810038d4 <getopt_internal+0x831>
810038d0:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
810038d4:	8b 45 e8             	mov    -0x18(%ebp),%eax
810038d7:	0f b6 00             	movzbl (%eax),%eax
810038da:	84 c0                	test   %al,%al
810038dc:	74 05                	je     810038e3 <getopt_internal+0x840>
810038de:	8b 45 e8             	mov    -0x18(%ebp),%eax
810038e1:	eb 05                	jmp    810038e8 <getopt_internal+0x845>
810038e3:	b8 00 00 00 00       	mov    $0x0,%eax
810038e8:	8b 55 20             	mov    0x20(%ebp),%edx
810038eb:	89 02                	mov    %eax,(%edx)
810038ed:	8b 45 20             	mov    0x20(%ebp),%eax
810038f0:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810038f7:	e9 d2 01 00 00       	jmp    81003ace <getopt_internal+0xa2b>
810038fc:	8b 45 e8             	mov    -0x18(%ebp),%eax
810038ff:	0f b6 00             	movzbl (%eax),%eax
81003902:	3c 3d                	cmp    $0x3d,%al
81003904:	75 04                	jne    8100390a <getopt_internal+0x867>
81003906:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
8100390a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100390d:	0f b6 00             	movzbl (%eax),%eax
81003910:	84 c0                	test   %al,%al
81003912:	74 17                	je     8100392b <getopt_internal+0x888>
81003914:	8b 45 20             	mov    0x20(%ebp),%eax
81003917:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100391a:	89 10                	mov    %edx,(%eax)
8100391c:	8b 45 20             	mov    0x20(%ebp),%eax
8100391f:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003926:	e9 a3 01 00 00       	jmp    81003ace <getopt_internal+0xa2b>
8100392b:	8b 45 20             	mov    0x20(%ebp),%eax
8100392e:	8b 40 04             	mov    0x4(%eax),%eax
81003931:	83 c0 01             	add    $0x1,%eax
81003934:	39 45 08             	cmp    %eax,0x8(%ebp)
81003937:	0f 8f 0a 01 00 00    	jg     81003a47 <getopt_internal+0x9a4>
8100393d:	8b 45 20             	mov    0x20(%ebp),%eax
81003940:	8b 40 08             	mov    0x8(%eax),%eax
81003943:	85 c0                	test   %eax,%eax
81003945:	0f 84 d3 00 00 00    	je     81003a1e <getopt_internal+0x97b>
8100394b:	a1 44 88 00 81       	mov    0x81008844,%eax
81003950:	8b 50 0c             	mov    0xc(%eax),%edx
81003953:	8b 45 0c             	mov    0xc(%ebp),%eax
81003956:	8b 00                	mov    (%eax),%eax
81003958:	83 ec 08             	sub    $0x8,%esp
8100395b:	52                   	push   %edx
8100395c:	50                   	push   %eax
8100395d:	e8 20 e2 ff ff       	call   81001b82 <fputs>
81003962:	83 c4 10             	add    $0x10,%esp
81003965:	a1 44 88 00 81       	mov    0x81008844,%eax
8100396a:	8b 40 0c             	mov    0xc(%eax),%eax
8100396d:	83 ec 08             	sub    $0x8,%esp
81003970:	50                   	push   %eax
81003971:	68 60 80 00 81       	push   $0x81008060
81003976:	e8 07 e2 ff ff       	call   81001b82 <fputs>
8100397b:	83 c4 10             	add    $0x10,%esp
8100397e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003982:	78 54                	js     810039d8 <getopt_internal+0x935>
81003984:	a1 44 88 00 81       	mov    0x81008844,%eax
81003989:	8b 40 0c             	mov    0xc(%eax),%eax
8100398c:	83 ec 08             	sub    $0x8,%esp
8100398f:	50                   	push   %eax
81003990:	6a 2d                	push   $0x2d
81003992:	e8 6b 3a 00 00       	call   81007402 <fputc>
81003997:	83 c4 10             	add    $0x10,%esp
8100399a:	a1 44 88 00 81       	mov    0x81008844,%eax
8100399f:	8b 50 0c             	mov    0xc(%eax),%edx
810039a2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810039a5:	c1 e0 04             	shl    $0x4,%eax
810039a8:	89 c1                	mov    %eax,%ecx
810039aa:	8b 45 14             	mov    0x14(%ebp),%eax
810039ad:	01 c8                	add    %ecx,%eax
810039af:	8b 00                	mov    (%eax),%eax
810039b1:	83 ec 08             	sub    $0x8,%esp
810039b4:	52                   	push   %edx
810039b5:	50                   	push   %eax
810039b6:	e8 c7 e1 ff ff       	call   81001b82 <fputs>
810039bb:	83 c4 10             	add    $0x10,%esp
810039be:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810039c2:	74 07                	je     810039cb <getopt_internal+0x928>
810039c4:	ba 3a 00 00 00       	mov    $0x3a,%edx
810039c9:	eb 05                	jmp    810039d0 <getopt_internal+0x92d>
810039cb:	ba 3f 00 00 00       	mov    $0x3f,%edx
810039d0:	8b 45 20             	mov    0x20(%ebp),%eax
810039d3:	89 50 0c             	mov    %edx,0xc(%eax)
810039d6:	eb 2d                	jmp    81003a05 <getopt_internal+0x962>
810039d8:	a1 44 88 00 81       	mov    0x81008844,%eax
810039dd:	8b 50 0c             	mov    0xc(%eax),%edx
810039e0:	8b 45 dc             	mov    -0x24(%ebp),%eax
810039e3:	0f b6 00             	movzbl (%eax),%eax
810039e6:	0f be c0             	movsbl %al,%eax
810039e9:	83 ec 08             	sub    $0x8,%esp
810039ec:	52                   	push   %edx
810039ed:	50                   	push   %eax
810039ee:	e8 0f 3a 00 00       	call   81007402 <fputc>
810039f3:	83 c4 10             	add    $0x10,%esp
810039f6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810039f9:	0f b6 00             	movzbl (%eax),%eax
810039fc:	0f be d0             	movsbl %al,%edx
810039ff:	8b 45 20             	mov    0x20(%ebp),%eax
81003a02:	89 50 0c             	mov    %edx,0xc(%eax)
81003a05:	a1 44 88 00 81       	mov    0x81008844,%eax
81003a0a:	8b 40 0c             	mov    0xc(%eax),%eax
81003a0d:	83 ec 08             	sub    $0x8,%esp
81003a10:	50                   	push   %eax
81003a11:	68 5b 80 00 81       	push   $0x8100805b
81003a16:	e8 67 e1 ff ff       	call   81001b82 <fputs>
81003a1b:	83 c4 10             	add    $0x10,%esp
81003a1e:	8b 45 20             	mov    0x20(%ebp),%eax
81003a21:	8b 40 04             	mov    0x4(%eax),%eax
81003a24:	8d 50 01             	lea    0x1(%eax),%edx
81003a27:	8b 45 20             	mov    0x20(%ebp),%eax
81003a2a:	89 50 04             	mov    %edx,0x4(%eax)
81003a2d:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81003a31:	74 0a                	je     81003a3d <getopt_internal+0x99a>
81003a33:	b8 3a 00 00 00       	mov    $0x3a,%eax
81003a38:	e9 76 01 00 00       	jmp    81003bb3 <getopt_internal+0xb10>
81003a3d:	b8 3f 00 00 00       	mov    $0x3f,%eax
81003a42:	e9 6c 01 00 00       	jmp    81003bb3 <getopt_internal+0xb10>
81003a47:	8b 45 20             	mov    0x20(%ebp),%eax
81003a4a:	8b 40 04             	mov    0x4(%eax),%eax
81003a4d:	83 c0 01             	add    $0x1,%eax
81003a50:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003a57:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a5a:	01 d0                	add    %edx,%eax
81003a5c:	8b 10                	mov    (%eax),%edx
81003a5e:	8b 45 20             	mov    0x20(%ebp),%eax
81003a61:	89 10                	mov    %edx,(%eax)
81003a63:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81003a6a:	8b 45 20             	mov    0x20(%ebp),%eax
81003a6d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003a74:	eb 58                	jmp    81003ace <getopt_internal+0xa2b>
81003a76:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003a7a:	79 3e                	jns    81003aba <getopt_internal+0xa17>
81003a7c:	8b 45 20             	mov    0x20(%ebp),%eax
81003a7f:	8b 40 10             	mov    0x10(%eax),%eax
81003a82:	8d 50 01             	lea    0x1(%eax),%edx
81003a85:	8b 45 20             	mov    0x20(%ebp),%eax
81003a88:	89 50 10             	mov    %edx,0x10(%eax)
81003a8b:	8b 45 20             	mov    0x20(%ebp),%eax
81003a8e:	8b 40 04             	mov    0x4(%eax),%eax
81003a91:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003a98:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a9b:	01 d0                	add    %edx,%eax
81003a9d:	8b 10                	mov    (%eax),%edx
81003a9f:	8b 45 20             	mov    0x20(%ebp),%eax
81003aa2:	8b 40 10             	mov    0x10(%eax),%eax
81003aa5:	01 d0                	add    %edx,%eax
81003aa7:	0f b6 00             	movzbl (%eax),%eax
81003aaa:	84 c0                	test   %al,%al
81003aac:	75 16                	jne    81003ac4 <getopt_internal+0xa21>
81003aae:	8b 45 20             	mov    0x20(%ebp),%eax
81003ab1:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003ab8:	eb 0a                	jmp    81003ac4 <getopt_internal+0xa21>
81003aba:	8b 45 20             	mov    0x20(%ebp),%eax
81003abd:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003ac4:	8b 45 20             	mov    0x20(%ebp),%eax
81003ac7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003acd:	90                   	nop
81003ace:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003ad2:	75 57                	jne    81003b2b <getopt_internal+0xa88>
81003ad4:	8b 45 20             	mov    0x20(%ebp),%eax
81003ad7:	8b 40 10             	mov    0x10(%eax),%eax
81003ada:	83 f8 01             	cmp    $0x1,%eax
81003add:	75 4c                	jne    81003b2b <getopt_internal+0xa88>
81003adf:	8b 45 20             	mov    0x20(%ebp),%eax
81003ae2:	8b 40 18             	mov    0x18(%eax),%eax
81003ae5:	85 c0                	test   %eax,%eax
81003ae7:	74 42                	je     81003b2b <getopt_internal+0xa88>
81003ae9:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003aec:	8d 48 01             	lea    0x1(%eax),%ecx
81003aef:	8b 45 20             	mov    0x20(%ebp),%eax
81003af2:	8b 40 18             	mov    0x18(%eax),%eax
81003af5:	8b 55 20             	mov    0x20(%ebp),%edx
81003af8:	8b 52 14             	mov    0x14(%edx),%edx
81003afb:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
81003b02:	8b 55 0c             	mov    0xc(%ebp),%edx
81003b05:	01 da                	add    %ebx,%edx
81003b07:	83 ec 04             	sub    $0x4,%esp
81003b0a:	51                   	push   %ecx
81003b0b:	50                   	push   %eax
81003b0c:	52                   	push   %edx
81003b0d:	e8 7f f4 ff ff       	call   81002f91 <permute>
81003b12:	83 c4 10             	add    $0x10,%esp
81003b15:	8b 45 20             	mov    0x20(%ebp),%eax
81003b18:	8b 40 14             	mov    0x14(%eax),%eax
81003b1b:	8d 50 01             	lea    0x1(%eax),%edx
81003b1e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b21:	01 c2                	add    %eax,%edx
81003b23:	8b 45 20             	mov    0x20(%ebp),%eax
81003b26:	89 50 04             	mov    %edx,0x4(%eax)
81003b29:	eb 1f                	jmp    81003b4a <getopt_internal+0xaa7>
81003b2b:	8b 45 20             	mov    0x20(%ebp),%eax
81003b2e:	8b 40 10             	mov    0x10(%eax),%eax
81003b31:	83 f8 01             	cmp    $0x1,%eax
81003b34:	75 14                	jne    81003b4a <getopt_internal+0xaa7>
81003b36:	8b 45 20             	mov    0x20(%ebp),%eax
81003b39:	8b 40 04             	mov    0x4(%eax),%eax
81003b3c:	8d 50 01             	lea    0x1(%eax),%edx
81003b3f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b42:	01 c2                	add    %eax,%edx
81003b44:	8b 45 20             	mov    0x20(%ebp),%eax
81003b47:	89 50 04             	mov    %edx,0x4(%eax)
81003b4a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003b4e:	78 5d                	js     81003bad <getopt_internal+0xb0a>
81003b50:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
81003b54:	74 08                	je     81003b5e <getopt_internal+0xabb>
81003b56:	8b 45 18             	mov    0x18(%ebp),%eax
81003b59:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003b5c:	89 10                	mov    %edx,(%eax)
81003b5e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003b61:	c1 e0 04             	shl    $0x4,%eax
81003b64:	89 c2                	mov    %eax,%edx
81003b66:	8b 45 14             	mov    0x14(%ebp),%eax
81003b69:	01 d0                	add    %edx,%eax
81003b6b:	8b 40 08             	mov    0x8(%eax),%eax
81003b6e:	85 c0                	test   %eax,%eax
81003b70:	74 29                	je     81003b9b <getopt_internal+0xaf8>
81003b72:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003b75:	c1 e0 04             	shl    $0x4,%eax
81003b78:	89 c2                	mov    %eax,%edx
81003b7a:	8b 45 14             	mov    0x14(%ebp),%eax
81003b7d:	01 c2                	add    %eax,%edx
81003b7f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003b82:	c1 e0 04             	shl    $0x4,%eax
81003b85:	89 c1                	mov    %eax,%ecx
81003b87:	8b 45 14             	mov    0x14(%ebp),%eax
81003b8a:	01 c8                	add    %ecx,%eax
81003b8c:	8b 40 08             	mov    0x8(%eax),%eax
81003b8f:	8b 52 0c             	mov    0xc(%edx),%edx
81003b92:	89 10                	mov    %edx,(%eax)
81003b94:	b8 00 00 00 00       	mov    $0x0,%eax
81003b99:	eb 18                	jmp    81003bb3 <getopt_internal+0xb10>
81003b9b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003b9e:	c1 e0 04             	shl    $0x4,%eax
81003ba1:	89 c2                	mov    %eax,%edx
81003ba3:	8b 45 14             	mov    0x14(%ebp),%eax
81003ba6:	01 d0                	add    %edx,%eax
81003ba8:	8b 40 0c             	mov    0xc(%eax),%eax
81003bab:	eb 06                	jmp    81003bb3 <getopt_internal+0xb10>
81003bad:	8b 45 20             	mov    0x20(%ebp),%eax
81003bb0:	8b 40 0c             	mov    0xc(%eax),%eax
81003bb3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003bb6:	c9                   	leave  
81003bb7:	c3                   	ret    

81003bb8 <getopt>:
81003bb8:	55                   	push   %ebp
81003bb9:	89 e5                	mov    %esp,%ebp
81003bbb:	83 ec 28             	sub    $0x28,%esp
81003bbe:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003bc1:	50                   	push   %eax
81003bc2:	e8 31 f4 ff ff       	call   81002ff8 <read_globals>
81003bc7:	83 c4 04             	add    $0x4,%esp
81003bca:	83 ec 04             	sub    $0x4,%esp
81003bcd:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003bd0:	50                   	push   %eax
81003bd1:	6a 00                	push   $0x0
81003bd3:	6a 00                	push   $0x0
81003bd5:	6a 00                	push   $0x0
81003bd7:	ff 75 10             	pushl  0x10(%ebp)
81003bda:	ff 75 0c             	pushl  0xc(%ebp)
81003bdd:	ff 75 08             	pushl  0x8(%ebp)
81003be0:	e8 be f4 ff ff       	call   810030a3 <getopt_internal>
81003be5:	83 c4 20             	add    $0x20,%esp
81003be8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003beb:	83 ec 0c             	sub    $0xc,%esp
81003bee:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003bf1:	50                   	push   %eax
81003bf2:	e8 5a f4 ff ff       	call   81003051 <write_globals>
81003bf7:	83 c4 10             	add    $0x10,%esp
81003bfa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bfd:	c9                   	leave  
81003bfe:	c3                   	ret    

81003bff <getopt_long>:
81003bff:	55                   	push   %ebp
81003c00:	89 e5                	mov    %esp,%ebp
81003c02:	83 ec 28             	sub    $0x28,%esp
81003c05:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c08:	50                   	push   %eax
81003c09:	e8 ea f3 ff ff       	call   81002ff8 <read_globals>
81003c0e:	83 c4 04             	add    $0x4,%esp
81003c11:	83 ec 04             	sub    $0x4,%esp
81003c14:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c17:	50                   	push   %eax
81003c18:	6a 00                	push   $0x0
81003c1a:	ff 75 18             	pushl  0x18(%ebp)
81003c1d:	ff 75 14             	pushl  0x14(%ebp)
81003c20:	ff 75 10             	pushl  0x10(%ebp)
81003c23:	ff 75 0c             	pushl  0xc(%ebp)
81003c26:	ff 75 08             	pushl  0x8(%ebp)
81003c29:	e8 75 f4 ff ff       	call   810030a3 <getopt_internal>
81003c2e:	83 c4 20             	add    $0x20,%esp
81003c31:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c34:	83 ec 0c             	sub    $0xc,%esp
81003c37:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c3a:	50                   	push   %eax
81003c3b:	e8 11 f4 ff ff       	call   81003051 <write_globals>
81003c40:	83 c4 10             	add    $0x10,%esp
81003c43:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c46:	c9                   	leave  
81003c47:	c3                   	ret    

81003c48 <getopt_long_only>:
81003c48:	55                   	push   %ebp
81003c49:	89 e5                	mov    %esp,%ebp
81003c4b:	83 ec 28             	sub    $0x28,%esp
81003c4e:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c51:	50                   	push   %eax
81003c52:	e8 a1 f3 ff ff       	call   81002ff8 <read_globals>
81003c57:	83 c4 04             	add    $0x4,%esp
81003c5a:	83 ec 04             	sub    $0x4,%esp
81003c5d:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c60:	50                   	push   %eax
81003c61:	6a 01                	push   $0x1
81003c63:	ff 75 18             	pushl  0x18(%ebp)
81003c66:	ff 75 14             	pushl  0x14(%ebp)
81003c69:	ff 75 10             	pushl  0x10(%ebp)
81003c6c:	ff 75 0c             	pushl  0xc(%ebp)
81003c6f:	ff 75 08             	pushl  0x8(%ebp)
81003c72:	e8 2c f4 ff ff       	call   810030a3 <getopt_internal>
81003c77:	83 c4 20             	add    $0x20,%esp
81003c7a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c7d:	83 ec 0c             	sub    $0xc,%esp
81003c80:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c83:	50                   	push   %eax
81003c84:	e8 c8 f3 ff ff       	call   81003051 <write_globals>
81003c89:	83 c4 10             	add    $0x10,%esp
81003c8c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c8f:	c9                   	leave  
81003c90:	c3                   	ret    

81003c91 <__getopt_r>:
81003c91:	55                   	push   %ebp
81003c92:	89 e5                	mov    %esp,%ebp
81003c94:	83 ec 08             	sub    $0x8,%esp
81003c97:	83 ec 04             	sub    $0x4,%esp
81003c9a:	ff 75 14             	pushl  0x14(%ebp)
81003c9d:	6a 00                	push   $0x0
81003c9f:	6a 00                	push   $0x0
81003ca1:	6a 00                	push   $0x0
81003ca3:	ff 75 10             	pushl  0x10(%ebp)
81003ca6:	ff 75 0c             	pushl  0xc(%ebp)
81003ca9:	ff 75 08             	pushl  0x8(%ebp)
81003cac:	e8 f2 f3 ff ff       	call   810030a3 <getopt_internal>
81003cb1:	83 c4 20             	add    $0x20,%esp
81003cb4:	c9                   	leave  
81003cb5:	c3                   	ret    

81003cb6 <__getopt_long_r>:
81003cb6:	55                   	push   %ebp
81003cb7:	89 e5                	mov    %esp,%ebp
81003cb9:	83 ec 08             	sub    $0x8,%esp
81003cbc:	83 ec 04             	sub    $0x4,%esp
81003cbf:	ff 75 1c             	pushl  0x1c(%ebp)
81003cc2:	6a 00                	push   $0x0
81003cc4:	ff 75 18             	pushl  0x18(%ebp)
81003cc7:	ff 75 14             	pushl  0x14(%ebp)
81003cca:	ff 75 10             	pushl  0x10(%ebp)
81003ccd:	ff 75 0c             	pushl  0xc(%ebp)
81003cd0:	ff 75 08             	pushl  0x8(%ebp)
81003cd3:	e8 cb f3 ff ff       	call   810030a3 <getopt_internal>
81003cd8:	83 c4 20             	add    $0x20,%esp
81003cdb:	c9                   	leave  
81003cdc:	c3                   	ret    

81003cdd <__getopt_long_only_r>:
81003cdd:	55                   	push   %ebp
81003cde:	89 e5                	mov    %esp,%ebp
81003ce0:	83 ec 08             	sub    $0x8,%esp
81003ce3:	83 ec 04             	sub    $0x4,%esp
81003ce6:	ff 75 1c             	pushl  0x1c(%ebp)
81003ce9:	6a 01                	push   $0x1
81003ceb:	ff 75 18             	pushl  0x18(%ebp)
81003cee:	ff 75 14             	pushl  0x14(%ebp)
81003cf1:	ff 75 10             	pushl  0x10(%ebp)
81003cf4:	ff 75 0c             	pushl  0xc(%ebp)
81003cf7:	ff 75 08             	pushl  0x8(%ebp)
81003cfa:	e8 a4 f3 ff ff       	call   810030a3 <getopt_internal>
81003cff:	83 c4 20             	add    $0x20,%esp
81003d02:	c9                   	leave  
81003d03:	c3                   	ret    

81003d04 <__smakebuf_r>:
81003d04:	55                   	push   %ebp
81003d05:	89 e5                	mov    %esp,%ebp
81003d07:	56                   	push   %esi
81003d08:	53                   	push   %ebx
81003d09:	83 ec 10             	sub    $0x10,%esp
81003d0c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003d0f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003d13:	98                   	cwtl   
81003d14:	83 e0 02             	and    $0x2,%eax
81003d17:	85 c0                	test   %eax,%eax
81003d19:	74 16                	je     81003d31 <__smakebuf_r+0x2d>
81003d1b:	8d 43 43             	lea    0x43(%ebx),%eax
81003d1e:	89 03                	mov    %eax,(%ebx)
81003d20:	8b 03                	mov    (%ebx),%eax
81003d22:	89 43 10             	mov    %eax,0x10(%ebx)
81003d25:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003d2c:	e9 b9 00 00 00       	jmp    81003dea <__smakebuf_r+0xe6>
81003d31:	8d 45 ec             	lea    -0x14(%ebp),%eax
81003d34:	50                   	push   %eax
81003d35:	8d 45 f0             	lea    -0x10(%ebp),%eax
81003d38:	50                   	push   %eax
81003d39:	53                   	push   %ebx
81003d3a:	ff 75 08             	pushl  0x8(%ebp)
81003d3d:	e8 af 00 00 00       	call   81003df1 <__swhatbuf_r>
81003d42:	83 c4 10             	add    $0x10,%esp
81003d45:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d48:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d4b:	83 ec 08             	sub    $0x8,%esp
81003d4e:	50                   	push   %eax
81003d4f:	ff 75 08             	pushl  0x8(%ebp)
81003d52:	e8 f9 03 00 00       	call   81004150 <_malloc_r>
81003d57:	83 c4 10             	add    $0x10,%esp
81003d5a:	89 c6                	mov    %eax,%esi
81003d5c:	85 f6                	test   %esi,%esi
81003d5e:	75 2f                	jne    81003d8f <__smakebuf_r+0x8b>
81003d60:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003d64:	98                   	cwtl   
81003d65:	25 00 02 00 00       	and    $0x200,%eax
81003d6a:	85 c0                	test   %eax,%eax
81003d6c:	75 7c                	jne    81003dea <__smakebuf_r+0xe6>
81003d6e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003d72:	83 e0 fc             	and    $0xfffffffc,%eax
81003d75:	83 c8 02             	or     $0x2,%eax
81003d78:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003d7c:	8d 43 43             	lea    0x43(%ebx),%eax
81003d7f:	89 03                	mov    %eax,(%ebx)
81003d81:	8b 03                	mov    (%ebx),%eax
81003d83:	89 43 10             	mov    %eax,0x10(%ebx)
81003d86:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003d8d:	eb 5b                	jmp    81003dea <__smakebuf_r+0xe6>
81003d8f:	8b 45 08             	mov    0x8(%ebp),%eax
81003d92:	c7 40 3c 4b 18 00 81 	movl   $0x8100184b,0x3c(%eax)
81003d99:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003d9d:	0c 80                	or     $0x80,%al
81003d9f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003da3:	89 33                	mov    %esi,(%ebx)
81003da5:	8b 03                	mov    (%ebx),%eax
81003da7:	89 43 10             	mov    %eax,0x10(%ebx)
81003daa:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003dad:	89 43 14             	mov    %eax,0x14(%ebx)
81003db0:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003db3:	85 c0                	test   %eax,%eax
81003db5:	74 26                	je     81003ddd <__smakebuf_r+0xd9>
81003db7:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003dbb:	98                   	cwtl   
81003dbc:	83 ec 08             	sub    $0x8,%esp
81003dbf:	50                   	push   %eax
81003dc0:	ff 75 08             	pushl  0x8(%ebp)
81003dc3:	e8 87 39 00 00       	call   8100774f <_isatty_r>
81003dc8:	83 c4 10             	add    $0x10,%esp
81003dcb:	85 c0                	test   %eax,%eax
81003dcd:	74 0e                	je     81003ddd <__smakebuf_r+0xd9>
81003dcf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003dd3:	83 e0 fc             	and    $0xfffffffc,%eax
81003dd6:	83 c8 01             	or     $0x1,%eax
81003dd9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003ddd:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81003de1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003de4:	09 d0                	or     %edx,%eax
81003de6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003dea:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003ded:	5b                   	pop    %ebx
81003dee:	5e                   	pop    %esi
81003def:	5d                   	pop    %ebp
81003df0:	c3                   	ret    

81003df1 <__swhatbuf_r>:
81003df1:	55                   	push   %ebp
81003df2:	89 e5                	mov    %esp,%ebp
81003df4:	83 ec 58             	sub    $0x58,%esp
81003df7:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81003dfe:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e01:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003e05:	66 85 c0             	test   %ax,%ax
81003e08:	78 1f                	js     81003e29 <__swhatbuf_r+0x38>
81003e0a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e0d:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003e11:	98                   	cwtl   
81003e12:	83 ec 04             	sub    $0x4,%esp
81003e15:	8d 55 ac             	lea    -0x54(%ebp),%edx
81003e18:	52                   	push   %edx
81003e19:	50                   	push   %eax
81003e1a:	ff 75 08             	pushl  0x8(%ebp)
81003e1d:	e8 63 ea ff ff       	call   81002885 <_fstat_r>
81003e22:	83 c4 10             	add    $0x10,%esp
81003e25:	85 c0                	test   %eax,%eax
81003e27:	79 35                	jns    81003e5e <__swhatbuf_r+0x6d>
81003e29:	8b 45 14             	mov    0x14(%ebp),%eax
81003e2c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003e32:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e35:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003e39:	98                   	cwtl   
81003e3a:	25 80 00 00 00       	and    $0x80,%eax
81003e3f:	85 c0                	test   %eax,%eax
81003e41:	74 0b                	je     81003e4e <__swhatbuf_r+0x5d>
81003e43:	8b 45 10             	mov    0x10(%ebp),%eax
81003e46:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81003e4c:	eb 09                	jmp    81003e57 <__swhatbuf_r+0x66>
81003e4e:	8b 45 10             	mov    0x10(%ebp),%eax
81003e51:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003e57:	b8 00 00 00 00       	mov    $0x0,%eax
81003e5c:	eb 24                	jmp    81003e82 <__swhatbuf_r+0x91>
81003e5e:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003e61:	25 00 f0 00 00       	and    $0xf000,%eax
81003e66:	3d 00 20 00 00       	cmp    $0x2000,%eax
81003e6b:	0f 94 c0             	sete   %al
81003e6e:	0f b6 d0             	movzbl %al,%edx
81003e71:	8b 45 14             	mov    0x14(%ebp),%eax
81003e74:	89 10                	mov    %edx,(%eax)
81003e76:	8b 45 10             	mov    0x10(%ebp),%eax
81003e79:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003e7f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e82:	c9                   	leave  
81003e83:	c3                   	ret    

81003e84 <malloc>:
81003e84:	55                   	push   %ebp
81003e85:	89 e5                	mov    %esp,%ebp
81003e87:	83 ec 08             	sub    $0x8,%esp
81003e8a:	a1 44 88 00 81       	mov    0x81008844,%eax
81003e8f:	83 ec 08             	sub    $0x8,%esp
81003e92:	ff 75 08             	pushl  0x8(%ebp)
81003e95:	50                   	push   %eax
81003e96:	e8 b5 02 00 00       	call   81004150 <_malloc_r>
81003e9b:	83 c4 10             	add    $0x10,%esp
81003e9e:	c9                   	leave  
81003e9f:	c3                   	ret    

81003ea0 <free>:
81003ea0:	55                   	push   %ebp
81003ea1:	89 e5                	mov    %esp,%ebp
81003ea3:	83 ec 08             	sub    $0x8,%esp
81003ea6:	a1 44 88 00 81       	mov    0x81008844,%eax
81003eab:	83 ec 08             	sub    $0x8,%esp
81003eae:	ff 75 08             	pushl  0x8(%ebp)
81003eb1:	50                   	push   %eax
81003eb2:	e8 84 df ff ff       	call   81001e3b <_free_r>
81003eb7:	83 c4 10             	add    $0x10,%esp
81003eba:	90                   	nop
81003ebb:	c9                   	leave  
81003ebc:	c3                   	ret    

81003ebd <malloc_extend_top>:
81003ebd:	55                   	push   %ebp
81003ebe:	89 e5                	mov    %esp,%ebp
81003ec0:	83 ec 38             	sub    $0x38,%esp
81003ec3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003eca:	b8 60 88 00 81       	mov    $0x81008860,%eax
81003ecf:	8b 40 08             	mov    0x8(%eax),%eax
81003ed2:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003ed5:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003ed8:	8b 40 04             	mov    0x4(%eax),%eax
81003edb:	83 e0 fc             	and    $0xfffffffc,%eax
81003ede:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003ee1:	8b 55 e0             	mov    -0x20(%ebp),%edx
81003ee4:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003ee7:	01 d0                	add    %edx,%eax
81003ee9:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003eec:	8b 15 40 92 00 81    	mov    0x81009240,%edx
81003ef2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ef5:	01 d0                	add    %edx,%eax
81003ef7:	83 c0 10             	add    $0x10,%eax
81003efa:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003efd:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81003f04:	a1 6c 8c 00 81       	mov    0x81008c6c,%eax
81003f09:	83 f8 ff             	cmp    $0xffffffff,%eax
81003f0c:	74 15                	je     81003f23 <malloc_extend_top+0x66>
81003f0e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003f11:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f14:	01 d0                	add    %edx,%eax
81003f16:	8d 50 ff             	lea    -0x1(%eax),%edx
81003f19:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003f1c:	f7 d8                	neg    %eax
81003f1e:	21 d0                	and    %edx,%eax
81003f20:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003f23:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f26:	83 ec 08             	sub    $0x8,%esp
81003f29:	50                   	push   %eax
81003f2a:	ff 75 08             	pushl  0x8(%ebp)
81003f2d:	e8 a7 26 00 00       	call   810065d9 <_sbrk_r>
81003f32:	83 c4 10             	add    $0x10,%esp
81003f35:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003f38:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003f3c:	0f 84 0b 02 00 00    	je     8100414d <malloc_extend_top+0x290>
81003f42:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f45:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003f48:	73 0e                	jae    81003f58 <malloc_extend_top+0x9b>
81003f4a:	b8 60 88 00 81       	mov    $0x81008860,%eax
81003f4f:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81003f52:	0f 85 f5 01 00 00    	jne    8100414d <malloc_extend_top+0x290>
81003f58:	a1 60 92 00 81       	mov    0x81009260,%eax
81003f5d:	89 c2                	mov    %eax,%edx
81003f5f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f62:	01 d0                	add    %edx,%eax
81003f64:	a3 60 92 00 81       	mov    %eax,0x81009260
81003f69:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f6c:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003f6f:	75 30                	jne    81003fa1 <malloc_extend_top+0xe4>
81003f71:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003f74:	8d 50 ff             	lea    -0x1(%eax),%edx
81003f77:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003f7a:	21 d0                	and    %edx,%eax
81003f7c:	85 c0                	test   %eax,%eax
81003f7e:	75 21                	jne    81003fa1 <malloc_extend_top+0xe4>
81003f80:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003f83:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003f86:	01 d0                	add    %edx,%eax
81003f88:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003f8b:	b8 60 88 00 81       	mov    $0x81008860,%eax
81003f90:	8b 40 08             	mov    0x8(%eax),%eax
81003f93:	8b 55 d0             	mov    -0x30(%ebp),%edx
81003f96:	83 ca 01             	or     $0x1,%edx
81003f99:	89 50 04             	mov    %edx,0x4(%eax)
81003f9c:	e9 76 01 00 00       	jmp    81004117 <malloc_extend_top+0x25a>
81003fa1:	a1 6c 8c 00 81       	mov    0x81008c6c,%eax
81003fa6:	83 f8 ff             	cmp    $0xffffffff,%eax
81003fa9:	75 0a                	jne    81003fb5 <malloc_extend_top+0xf8>
81003fab:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003fae:	a3 6c 8c 00 81       	mov    %eax,0x81008c6c
81003fb3:	eb 13                	jmp    81003fc8 <malloc_extend_top+0x10b>
81003fb5:	8b 15 60 92 00 81    	mov    0x81009260,%edx
81003fbb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003fbe:	2b 45 d8             	sub    -0x28(%ebp),%eax
81003fc1:	01 d0                	add    %edx,%eax
81003fc3:	a3 60 92 00 81       	mov    %eax,0x81009260
81003fc8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003fcb:	83 c0 08             	add    $0x8,%eax
81003fce:	83 e0 07             	and    $0x7,%eax
81003fd1:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003fd4:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81003fd8:	74 13                	je     81003fed <malloc_extend_top+0x130>
81003fda:	b8 08 00 00 00       	mov    $0x8,%eax
81003fdf:	2b 45 cc             	sub    -0x34(%ebp),%eax
81003fe2:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003fe5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003fe8:	01 45 f4             	add    %eax,-0xc(%ebp)
81003feb:	eb 07                	jmp    81003ff4 <malloc_extend_top+0x137>
81003fed:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003ff4:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003ff7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003ffa:	01 d0                	add    %edx,%eax
81003ffc:	89 c2                	mov    %eax,%edx
81003ffe:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004001:	83 e8 01             	sub    $0x1,%eax
81004004:	21 c2                	and    %eax,%edx
81004006:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004009:	29 d0                	sub    %edx,%eax
8100400b:	01 45 f0             	add    %eax,-0x10(%ebp)
8100400e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004011:	83 e8 01             	sub    $0x1,%eax
81004014:	21 45 f0             	and    %eax,-0x10(%ebp)
81004017:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100401a:	83 ec 08             	sub    $0x8,%esp
8100401d:	50                   	push   %eax
8100401e:	ff 75 08             	pushl  0x8(%ebp)
81004021:	e8 b3 25 00 00       	call   810065d9 <_sbrk_r>
81004026:	83 c4 10             	add    $0x10,%esp
81004029:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100402c:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
81004030:	75 28                	jne    8100405a <malloc_extend_top+0x19d>
81004032:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004039:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81004040:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004043:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004046:	01 d0                	add    %edx,%eax
81004048:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100404b:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
8100404f:	74 09                	je     8100405a <malloc_extend_top+0x19d>
81004051:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004054:	83 e8 08             	sub    $0x8,%eax
81004057:	01 45 ec             	add    %eax,-0x14(%ebp)
8100405a:	a1 60 92 00 81       	mov    0x81009260,%eax
8100405f:	89 c2                	mov    %eax,%edx
81004061:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004064:	01 d0                	add    %edx,%eax
81004066:	a3 60 92 00 81       	mov    %eax,0x81009260
8100406b:	ba 60 88 00 81       	mov    $0x81008860,%edx
81004070:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004073:	89 42 08             	mov    %eax,0x8(%edx)
81004076:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004079:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100407c:	89 c2                	mov    %eax,%edx
8100407e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004081:	01 d0                	add    %edx,%eax
81004083:	89 45 d0             	mov    %eax,-0x30(%ebp)
81004086:	b8 60 88 00 81       	mov    $0x81008860,%eax
8100408b:	8b 40 08             	mov    0x8(%eax),%eax
8100408e:	8b 55 d0             	mov    -0x30(%ebp),%edx
81004091:	83 ca 01             	or     $0x1,%edx
81004094:	89 50 04             	mov    %edx,0x4(%eax)
81004097:	b8 60 88 00 81       	mov    $0x81008860,%eax
8100409c:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100409f:	74 76                	je     81004117 <malloc_extend_top+0x25a>
810040a1:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810040a5:	77 14                	ja     810040bb <malloc_extend_top+0x1fe>
810040a7:	b8 60 88 00 81       	mov    $0x81008860,%eax
810040ac:	8b 40 08             	mov    0x8(%eax),%eax
810040af:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
810040b6:	e9 93 00 00 00       	jmp    8100414e <malloc_extend_top+0x291>
810040bb:	8b 45 dc             	mov    -0x24(%ebp),%eax
810040be:	83 e8 0c             	sub    $0xc,%eax
810040c1:	83 e0 f8             	and    $0xfffffff8,%eax
810040c4:	89 45 dc             	mov    %eax,-0x24(%ebp)
810040c7:	8b 45 e0             	mov    -0x20(%ebp),%eax
810040ca:	8b 40 04             	mov    0x4(%eax),%eax
810040cd:	83 e0 01             	and    $0x1,%eax
810040d0:	0b 45 dc             	or     -0x24(%ebp),%eax
810040d3:	89 c2                	mov    %eax,%edx
810040d5:	8b 45 e0             	mov    -0x20(%ebp),%eax
810040d8:	89 50 04             	mov    %edx,0x4(%eax)
810040db:	8b 55 e0             	mov    -0x20(%ebp),%edx
810040de:	8b 45 dc             	mov    -0x24(%ebp),%eax
810040e1:	01 d0                	add    %edx,%eax
810040e3:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810040ea:	8b 45 dc             	mov    -0x24(%ebp),%eax
810040ed:	8d 50 04             	lea    0x4(%eax),%edx
810040f0:	8b 45 e0             	mov    -0x20(%ebp),%eax
810040f3:	01 d0                	add    %edx,%eax
810040f5:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810040fc:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81004100:	76 15                	jbe    81004117 <malloc_extend_top+0x25a>
81004102:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004105:	83 c0 08             	add    $0x8,%eax
81004108:	83 ec 08             	sub    $0x8,%esp
8100410b:	50                   	push   %eax
8100410c:	ff 75 08             	pushl  0x8(%ebp)
8100410f:	e8 27 dd ff ff       	call   81001e3b <_free_r>
81004114:	83 c4 10             	add    $0x10,%esp
81004117:	a1 60 92 00 81       	mov    0x81009260,%eax
8100411c:	89 c2                	mov    %eax,%edx
8100411e:	a1 44 92 00 81       	mov    0x81009244,%eax
81004123:	39 c2                	cmp    %eax,%edx
81004125:	76 0a                	jbe    81004131 <malloc_extend_top+0x274>
81004127:	a1 60 92 00 81       	mov    0x81009260,%eax
8100412c:	a3 44 92 00 81       	mov    %eax,0x81009244
81004131:	a1 60 92 00 81       	mov    0x81009260,%eax
81004136:	89 c2                	mov    %eax,%edx
81004138:	a1 48 92 00 81       	mov    0x81009248,%eax
8100413d:	39 c2                	cmp    %eax,%edx
8100413f:	76 0d                	jbe    8100414e <malloc_extend_top+0x291>
81004141:	a1 60 92 00 81       	mov    0x81009260,%eax
81004146:	a3 48 92 00 81       	mov    %eax,0x81009248
8100414b:	eb 01                	jmp    8100414e <malloc_extend_top+0x291>
8100414d:	90                   	nop
8100414e:	c9                   	leave  
8100414f:	c3                   	ret    

81004150 <_malloc_r>:
81004150:	55                   	push   %ebp
81004151:	89 e5                	mov    %esp,%ebp
81004153:	53                   	push   %ebx
81004154:	83 ec 44             	sub    $0x44,%esp
81004157:	8b 45 0c             	mov    0xc(%ebp),%eax
8100415a:	83 c0 0b             	add    $0xb,%eax
8100415d:	83 f8 16             	cmp    $0x16,%eax
81004160:	76 0b                	jbe    8100416d <_malloc_r+0x1d>
81004162:	8b 45 0c             	mov    0xc(%ebp),%eax
81004165:	83 c0 0b             	add    $0xb,%eax
81004168:	83 e0 f8             	and    $0xfffffff8,%eax
8100416b:	eb 05                	jmp    81004172 <_malloc_r+0x22>
8100416d:	b8 10 00 00 00       	mov    $0x10,%eax
81004172:	89 45 d0             	mov    %eax,-0x30(%ebp)
81004175:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004178:	85 c0                	test   %eax,%eax
8100417a:	78 08                	js     81004184 <_malloc_r+0x34>
8100417c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100417f:	3b 45 0c             	cmp    0xc(%ebp),%eax
81004182:	73 13                	jae    81004197 <_malloc_r+0x47>
81004184:	8b 45 08             	mov    0x8(%ebp),%eax
81004187:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100418d:	b8 00 00 00 00       	mov    $0x0,%eax
81004192:	e9 d6 07 00 00       	jmp    8100496d <_malloc_r+0x81d>
81004197:	83 ec 0c             	sub    $0xc,%esp
8100419a:	ff 75 08             	pushl  0x8(%ebp)
8100419d:	e8 23 0a 00 00       	call   81004bc5 <__malloc_lock>
810041a2:	83 c4 10             	add    $0x10,%esp
810041a5:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
810041ac:	0f 87 b0 00 00 00    	ja     81004262 <_malloc_r+0x112>
810041b2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041b5:	c1 e8 03             	shr    $0x3,%eax
810041b8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810041bb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810041be:	83 c0 01             	add    $0x1,%eax
810041c1:	01 c0                	add    %eax,%eax
810041c3:	c1 e0 02             	shl    $0x2,%eax
810041c6:	05 60 88 00 81       	add    $0x81008860,%eax
810041cb:	83 e8 08             	sub    $0x8,%eax
810041ce:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810041d1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810041d4:	8b 40 0c             	mov    0xc(%eax),%eax
810041d7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810041da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041dd:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
810041e0:	75 0d                	jne    810041ef <_malloc_r+0x9f>
810041e2:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
810041e6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810041e9:	8b 40 0c             	mov    0xc(%eax),%eax
810041ec:	89 45 f4             	mov    %eax,-0xc(%ebp)
810041ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041f2:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
810041f5:	74 62                	je     81004259 <_malloc_r+0x109>
810041f7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041fa:	8b 40 04             	mov    0x4(%eax),%eax
810041fd:	83 e0 fc             	and    $0xfffffffc,%eax
81004200:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004203:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004206:	8b 40 0c             	mov    0xc(%eax),%eax
81004209:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100420c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100420f:	8b 40 08             	mov    0x8(%eax),%eax
81004212:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004215:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004218:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100421b:	89 50 0c             	mov    %edx,0xc(%eax)
8100421e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004221:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004224:	89 50 08             	mov    %edx,0x8(%eax)
81004227:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100422a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100422d:	01 d0                	add    %edx,%eax
8100422f:	8b 50 04             	mov    0x4(%eax),%edx
81004232:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81004235:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004238:	01 c8                	add    %ecx,%eax
8100423a:	83 ca 01             	or     $0x1,%edx
8100423d:	89 50 04             	mov    %edx,0x4(%eax)
81004240:	83 ec 0c             	sub    $0xc,%esp
81004243:	ff 75 08             	pushl  0x8(%ebp)
81004246:	e8 80 09 00 00       	call   81004bcb <__malloc_unlock>
8100424b:	83 c4 10             	add    $0x10,%esp
8100424e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004251:	83 c0 08             	add    $0x8,%eax
81004254:	e9 14 07 00 00       	jmp    8100496d <_malloc_r+0x81d>
81004259:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
8100425d:	e9 46 01 00 00       	jmp    810043a8 <_malloc_r+0x258>
81004262:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004265:	c1 e8 09             	shr    $0x9,%eax
81004268:	85 c0                	test   %eax,%eax
8100426a:	75 08                	jne    81004274 <_malloc_r+0x124>
8100426c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100426f:	c1 e8 03             	shr    $0x3,%eax
81004272:	eb 77                	jmp    810042eb <_malloc_r+0x19b>
81004274:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004277:	c1 e8 09             	shr    $0x9,%eax
8100427a:	83 f8 04             	cmp    $0x4,%eax
8100427d:	77 0b                	ja     8100428a <_malloc_r+0x13a>
8100427f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004282:	c1 e8 06             	shr    $0x6,%eax
81004285:	83 c0 38             	add    $0x38,%eax
81004288:	eb 61                	jmp    810042eb <_malloc_r+0x19b>
8100428a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100428d:	c1 e8 09             	shr    $0x9,%eax
81004290:	83 f8 14             	cmp    $0x14,%eax
81004293:	77 0b                	ja     810042a0 <_malloc_r+0x150>
81004295:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004298:	c1 e8 09             	shr    $0x9,%eax
8100429b:	83 c0 5b             	add    $0x5b,%eax
8100429e:	eb 4b                	jmp    810042eb <_malloc_r+0x19b>
810042a0:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042a3:	c1 e8 09             	shr    $0x9,%eax
810042a6:	83 f8 54             	cmp    $0x54,%eax
810042a9:	77 0b                	ja     810042b6 <_malloc_r+0x166>
810042ab:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042ae:	c1 e8 0c             	shr    $0xc,%eax
810042b1:	83 c0 6e             	add    $0x6e,%eax
810042b4:	eb 35                	jmp    810042eb <_malloc_r+0x19b>
810042b6:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042b9:	c1 e8 09             	shr    $0x9,%eax
810042bc:	3d 54 01 00 00       	cmp    $0x154,%eax
810042c1:	77 0b                	ja     810042ce <_malloc_r+0x17e>
810042c3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042c6:	c1 e8 0f             	shr    $0xf,%eax
810042c9:	83 c0 77             	add    $0x77,%eax
810042cc:	eb 1d                	jmp    810042eb <_malloc_r+0x19b>
810042ce:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042d1:	c1 e8 09             	shr    $0x9,%eax
810042d4:	3d 54 05 00 00       	cmp    $0x554,%eax
810042d9:	77 0b                	ja     810042e6 <_malloc_r+0x196>
810042db:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042de:	c1 e8 12             	shr    $0x12,%eax
810042e1:	83 c0 7c             	add    $0x7c,%eax
810042e4:	eb 05                	jmp    810042eb <_malloc_r+0x19b>
810042e6:	b8 7e 00 00 00       	mov    $0x7e,%eax
810042eb:	89 45 f0             	mov    %eax,-0x10(%ebp)
810042ee:	8b 45 f0             	mov    -0x10(%ebp),%eax
810042f1:	83 c0 01             	add    $0x1,%eax
810042f4:	01 c0                	add    %eax,%eax
810042f6:	c1 e0 02             	shl    $0x2,%eax
810042f9:	05 60 88 00 81       	add    $0x81008860,%eax
810042fe:	83 e8 08             	sub    $0x8,%eax
81004301:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004304:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004307:	8b 40 0c             	mov    0xc(%eax),%eax
8100430a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100430d:	e9 86 00 00 00       	jmp    81004398 <_malloc_r+0x248>
81004312:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004315:	8b 40 04             	mov    0x4(%eax),%eax
81004318:	83 e0 fc             	and    $0xfffffffc,%eax
8100431b:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100431e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004321:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004324:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004327:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100432b:	7e 06                	jle    81004333 <_malloc_r+0x1e3>
8100432d:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81004331:	eb 71                	jmp    810043a4 <_malloc_r+0x254>
81004333:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81004337:	78 56                	js     8100438f <_malloc_r+0x23f>
81004339:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100433c:	8b 40 0c             	mov    0xc(%eax),%eax
8100433f:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004342:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004345:	8b 40 08             	mov    0x8(%eax),%eax
81004348:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100434b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100434e:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004351:	89 50 0c             	mov    %edx,0xc(%eax)
81004354:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004357:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100435a:	89 50 08             	mov    %edx,0x8(%eax)
8100435d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004360:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004363:	01 d0                	add    %edx,%eax
81004365:	8b 50 04             	mov    0x4(%eax),%edx
81004368:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100436b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100436e:	01 c8                	add    %ecx,%eax
81004370:	83 ca 01             	or     $0x1,%edx
81004373:	89 50 04             	mov    %edx,0x4(%eax)
81004376:	83 ec 0c             	sub    $0xc,%esp
81004379:	ff 75 08             	pushl  0x8(%ebp)
8100437c:	e8 4a 08 00 00       	call   81004bcb <__malloc_unlock>
81004381:	83 c4 10             	add    $0x10,%esp
81004384:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004387:	83 c0 08             	add    $0x8,%eax
8100438a:	e9 de 05 00 00       	jmp    8100496d <_malloc_r+0x81d>
8100438f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004392:	8b 40 0c             	mov    0xc(%eax),%eax
81004395:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004398:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100439b:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100439e:	0f 85 6e ff ff ff    	jne    81004312 <_malloc_r+0x1c2>
810043a4:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810043a8:	b8 68 88 00 81       	mov    $0x81008868,%eax
810043ad:	8b 40 08             	mov    0x8(%eax),%eax
810043b0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810043b3:	b8 68 88 00 81       	mov    $0x81008868,%eax
810043b8:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810043bb:	0f 84 9c 02 00 00    	je     8100465d <_malloc_r+0x50d>
810043c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043c4:	8b 40 04             	mov    0x4(%eax),%eax
810043c7:	83 e0 fc             	and    $0xfffffffc,%eax
810043ca:	89 45 cc             	mov    %eax,-0x34(%ebp)
810043cd:	8b 45 cc             	mov    -0x34(%ebp),%eax
810043d0:	2b 45 d0             	sub    -0x30(%ebp),%eax
810043d3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810043d6:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810043da:	7e 7a                	jle    81004456 <_malloc_r+0x306>
810043dc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810043df:	8b 45 d0             	mov    -0x30(%ebp),%eax
810043e2:	01 d0                	add    %edx,%eax
810043e4:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810043e7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810043ea:	83 c8 01             	or     $0x1,%eax
810043ed:	89 c2                	mov    %eax,%edx
810043ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043f2:	89 50 04             	mov    %edx,0x4(%eax)
810043f5:	b8 68 88 00 81       	mov    $0x81008868,%eax
810043fa:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810043fd:	89 50 0c             	mov    %edx,0xc(%eax)
81004400:	ba 68 88 00 81       	mov    $0x81008868,%edx
81004405:	8b 40 0c             	mov    0xc(%eax),%eax
81004408:	89 42 08             	mov    %eax,0x8(%edx)
8100440b:	ba 68 88 00 81       	mov    $0x81008868,%edx
81004410:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004413:	89 50 0c             	mov    %edx,0xc(%eax)
81004416:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004419:	8b 50 0c             	mov    0xc(%eax),%edx
8100441c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100441f:	89 50 08             	mov    %edx,0x8(%eax)
81004422:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004425:	83 c8 01             	or     $0x1,%eax
81004428:	89 c2                	mov    %eax,%edx
8100442a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100442d:	89 50 04             	mov    %edx,0x4(%eax)
81004430:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004433:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004436:	01 c2                	add    %eax,%edx
81004438:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100443b:	89 02                	mov    %eax,(%edx)
8100443d:	83 ec 0c             	sub    $0xc,%esp
81004440:	ff 75 08             	pushl  0x8(%ebp)
81004443:	e8 83 07 00 00       	call   81004bcb <__malloc_unlock>
81004448:	83 c4 10             	add    $0x10,%esp
8100444b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100444e:	83 c0 08             	add    $0x8,%eax
81004451:	e9 17 05 00 00       	jmp    8100496d <_malloc_r+0x81d>
81004456:	b8 68 88 00 81       	mov    $0x81008868,%eax
8100445b:	ba 68 88 00 81       	mov    $0x81008868,%edx
81004460:	89 50 0c             	mov    %edx,0xc(%eax)
81004463:	ba 68 88 00 81       	mov    $0x81008868,%edx
81004468:	8b 40 0c             	mov    0xc(%eax),%eax
8100446b:	89 42 08             	mov    %eax,0x8(%edx)
8100446e:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81004472:	78 32                	js     810044a6 <_malloc_r+0x356>
81004474:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004477:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100447a:	01 d0                	add    %edx,%eax
8100447c:	8b 50 04             	mov    0x4(%eax),%edx
8100447f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81004482:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004485:	01 c8                	add    %ecx,%eax
81004487:	83 ca 01             	or     $0x1,%edx
8100448a:	89 50 04             	mov    %edx,0x4(%eax)
8100448d:	83 ec 0c             	sub    $0xc,%esp
81004490:	ff 75 08             	pushl  0x8(%ebp)
81004493:	e8 33 07 00 00       	call   81004bcb <__malloc_unlock>
81004498:	83 c4 10             	add    $0x10,%esp
8100449b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100449e:	83 c0 08             	add    $0x8,%eax
810044a1:	e9 c7 04 00 00       	jmp    8100496d <_malloc_r+0x81d>
810044a6:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
810044ad:	77 7f                	ja     8100452e <_malloc_r+0x3de>
810044af:	8b 45 cc             	mov    -0x34(%ebp),%eax
810044b2:	c1 e8 03             	shr    $0x3,%eax
810044b5:	89 45 c8             	mov    %eax,-0x38(%ebp)
810044b8:	b8 60 88 00 81       	mov    $0x81008860,%eax
810044bd:	8b 58 04             	mov    0x4(%eax),%ebx
810044c0:	8b 45 c8             	mov    -0x38(%ebp),%eax
810044c3:	8d 50 03             	lea    0x3(%eax),%edx
810044c6:	85 c0                	test   %eax,%eax
810044c8:	0f 48 c2             	cmovs  %edx,%eax
810044cb:	c1 f8 02             	sar    $0x2,%eax
810044ce:	ba 01 00 00 00       	mov    $0x1,%edx
810044d3:	89 c1                	mov    %eax,%ecx
810044d5:	d3 e2                	shl    %cl,%edx
810044d7:	89 d0                	mov    %edx,%eax
810044d9:	ba 60 88 00 81       	mov    $0x81008860,%edx
810044de:	09 d8                	or     %ebx,%eax
810044e0:	89 42 04             	mov    %eax,0x4(%edx)
810044e3:	8b 45 c8             	mov    -0x38(%ebp),%eax
810044e6:	83 c0 01             	add    $0x1,%eax
810044e9:	01 c0                	add    %eax,%eax
810044eb:	c1 e0 02             	shl    $0x2,%eax
810044ee:	05 60 88 00 81       	add    $0x81008860,%eax
810044f3:	83 e8 08             	sub    $0x8,%eax
810044f6:	89 45 d8             	mov    %eax,-0x28(%ebp)
810044f9:	8b 45 d8             	mov    -0x28(%ebp),%eax
810044fc:	8b 40 08             	mov    0x8(%eax),%eax
810044ff:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004502:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004505:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004508:	89 50 0c             	mov    %edx,0xc(%eax)
8100450b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100450e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004511:	89 50 08             	mov    %edx,0x8(%eax)
81004514:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004517:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100451a:	89 50 08             	mov    %edx,0x8(%eax)
8100451d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004520:	8b 50 08             	mov    0x8(%eax),%edx
81004523:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004526:	89 50 0c             	mov    %edx,0xc(%eax)
81004529:	e9 2f 01 00 00       	jmp    8100465d <_malloc_r+0x50d>
8100452e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004531:	c1 e8 09             	shr    $0x9,%eax
81004534:	85 c0                	test   %eax,%eax
81004536:	75 08                	jne    81004540 <_malloc_r+0x3f0>
81004538:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100453b:	c1 e8 03             	shr    $0x3,%eax
8100453e:	eb 77                	jmp    810045b7 <_malloc_r+0x467>
81004540:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004543:	c1 e8 09             	shr    $0x9,%eax
81004546:	83 f8 04             	cmp    $0x4,%eax
81004549:	77 0b                	ja     81004556 <_malloc_r+0x406>
8100454b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100454e:	c1 e8 06             	shr    $0x6,%eax
81004551:	83 c0 38             	add    $0x38,%eax
81004554:	eb 61                	jmp    810045b7 <_malloc_r+0x467>
81004556:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004559:	c1 e8 09             	shr    $0x9,%eax
8100455c:	83 f8 14             	cmp    $0x14,%eax
8100455f:	77 0b                	ja     8100456c <_malloc_r+0x41c>
81004561:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004564:	c1 e8 09             	shr    $0x9,%eax
81004567:	83 c0 5b             	add    $0x5b,%eax
8100456a:	eb 4b                	jmp    810045b7 <_malloc_r+0x467>
8100456c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100456f:	c1 e8 09             	shr    $0x9,%eax
81004572:	83 f8 54             	cmp    $0x54,%eax
81004575:	77 0b                	ja     81004582 <_malloc_r+0x432>
81004577:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100457a:	c1 e8 0c             	shr    $0xc,%eax
8100457d:	83 c0 6e             	add    $0x6e,%eax
81004580:	eb 35                	jmp    810045b7 <_malloc_r+0x467>
81004582:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004585:	c1 e8 09             	shr    $0x9,%eax
81004588:	3d 54 01 00 00       	cmp    $0x154,%eax
8100458d:	77 0b                	ja     8100459a <_malloc_r+0x44a>
8100458f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004592:	c1 e8 0f             	shr    $0xf,%eax
81004595:	83 c0 77             	add    $0x77,%eax
81004598:	eb 1d                	jmp    810045b7 <_malloc_r+0x467>
8100459a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100459d:	c1 e8 09             	shr    $0x9,%eax
810045a0:	3d 54 05 00 00       	cmp    $0x554,%eax
810045a5:	77 0b                	ja     810045b2 <_malloc_r+0x462>
810045a7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045aa:	c1 e8 12             	shr    $0x12,%eax
810045ad:	83 c0 7c             	add    $0x7c,%eax
810045b0:	eb 05                	jmp    810045b7 <_malloc_r+0x467>
810045b2:	b8 7e 00 00 00       	mov    $0x7e,%eax
810045b7:	89 45 c8             	mov    %eax,-0x38(%ebp)
810045ba:	8b 45 c8             	mov    -0x38(%ebp),%eax
810045bd:	83 c0 01             	add    $0x1,%eax
810045c0:	01 c0                	add    %eax,%eax
810045c2:	c1 e0 02             	shl    $0x2,%eax
810045c5:	05 60 88 00 81       	add    $0x81008860,%eax
810045ca:	83 e8 08             	sub    $0x8,%eax
810045cd:	89 45 d8             	mov    %eax,-0x28(%ebp)
810045d0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810045d3:	8b 40 08             	mov    0x8(%eax),%eax
810045d6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810045d9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810045dc:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810045df:	75 36                	jne    81004617 <_malloc_r+0x4c7>
810045e1:	b8 60 88 00 81       	mov    $0x81008860,%eax
810045e6:	8b 58 04             	mov    0x4(%eax),%ebx
810045e9:	8b 45 c8             	mov    -0x38(%ebp),%eax
810045ec:	8d 50 03             	lea    0x3(%eax),%edx
810045ef:	85 c0                	test   %eax,%eax
810045f1:	0f 48 c2             	cmovs  %edx,%eax
810045f4:	c1 f8 02             	sar    $0x2,%eax
810045f7:	ba 01 00 00 00       	mov    $0x1,%edx
810045fc:	89 c1                	mov    %eax,%ecx
810045fe:	d3 e2                	shl    %cl,%edx
81004600:	89 d0                	mov    %edx,%eax
81004602:	ba 60 88 00 81       	mov    $0x81008860,%edx
81004607:	09 d8                	or     %ebx,%eax
81004609:	89 42 04             	mov    %eax,0x4(%edx)
8100460c:	eb 28                	jmp    81004636 <_malloc_r+0x4e6>
8100460e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004611:	8b 40 08             	mov    0x8(%eax),%eax
81004614:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004617:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100461a:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100461d:	74 0e                	je     8100462d <_malloc_r+0x4dd>
8100461f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004622:	8b 40 04             	mov    0x4(%eax),%eax
81004625:	83 e0 fc             	and    $0xfffffffc,%eax
81004628:	39 45 cc             	cmp    %eax,-0x34(%ebp)
8100462b:	72 e1                	jb     8100460e <_malloc_r+0x4be>
8100462d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004630:	8b 40 0c             	mov    0xc(%eax),%eax
81004633:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004636:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004639:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100463c:	89 50 0c             	mov    %edx,0xc(%eax)
8100463f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004642:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004645:	89 50 08             	mov    %edx,0x8(%eax)
81004648:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100464b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100464e:	89 50 08             	mov    %edx,0x8(%eax)
81004651:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004654:	8b 50 08             	mov    0x8(%eax),%edx
81004657:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100465a:	89 50 0c             	mov    %edx,0xc(%eax)
8100465d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004660:	8d 50 03             	lea    0x3(%eax),%edx
81004663:	85 c0                	test   %eax,%eax
81004665:	0f 48 c2             	cmovs  %edx,%eax
81004668:	c1 f8 02             	sar    $0x2,%eax
8100466b:	ba 01 00 00 00       	mov    $0x1,%edx
81004670:	89 c1                	mov    %eax,%ecx
81004672:	d3 e2                	shl    %cl,%edx
81004674:	89 d0                	mov    %edx,%eax
81004676:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004679:	b8 60 88 00 81       	mov    $0x81008860,%eax
8100467e:	8b 40 04             	mov    0x4(%eax),%eax
81004681:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81004684:	0f 87 13 02 00 00    	ja     8100489d <_malloc_r+0x74d>
8100468a:	b8 60 88 00 81       	mov    $0x81008860,%eax
8100468f:	8b 40 04             	mov    0x4(%eax),%eax
81004692:	23 45 e4             	and    -0x1c(%ebp),%eax
81004695:	85 c0                	test   %eax,%eax
81004697:	75 27                	jne    810046c0 <_malloc_r+0x570>
81004699:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100469c:	83 e0 fc             	and    $0xfffffffc,%eax
8100469f:	83 c0 04             	add    $0x4,%eax
810046a2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810046a5:	d1 65 e4             	shll   -0x1c(%ebp)
810046a8:	eb 07                	jmp    810046b1 <_malloc_r+0x561>
810046aa:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810046ae:	d1 65 e4             	shll   -0x1c(%ebp)
810046b1:	b8 60 88 00 81       	mov    $0x81008860,%eax
810046b6:	8b 40 04             	mov    0x4(%eax),%eax
810046b9:	23 45 e4             	and    -0x1c(%ebp),%eax
810046bc:	85 c0                	test   %eax,%eax
810046be:	74 ea                	je     810046aa <_malloc_r+0x55a>
810046c0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810046c3:	89 45 e0             	mov    %eax,-0x20(%ebp)
810046c6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810046c9:	83 c0 01             	add    $0x1,%eax
810046cc:	01 c0                	add    %eax,%eax
810046ce:	c1 e0 02             	shl    $0x2,%eax
810046d1:	05 60 88 00 81       	add    $0x81008860,%eax
810046d6:	83 e8 08             	sub    $0x8,%eax
810046d9:	89 45 ec             	mov    %eax,-0x14(%ebp)
810046dc:	8b 45 ec             	mov    -0x14(%ebp),%eax
810046df:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810046e2:	8b 45 ec             	mov    -0x14(%ebp),%eax
810046e5:	8b 40 0c             	mov    0xc(%eax),%eax
810046e8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810046eb:	e9 22 01 00 00       	jmp    81004812 <_malloc_r+0x6c2>
810046f0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046f3:	8b 40 04             	mov    0x4(%eax),%eax
810046f6:	83 e0 fc             	and    $0xfffffffc,%eax
810046f9:	89 45 cc             	mov    %eax,-0x34(%ebp)
810046fc:	8b 45 cc             	mov    -0x34(%ebp),%eax
810046ff:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004702:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004705:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004709:	0f 8e 9e 00 00 00    	jle    810047ad <_malloc_r+0x65d>
8100470f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004712:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004715:	01 d0                	add    %edx,%eax
81004717:	89 45 c4             	mov    %eax,-0x3c(%ebp)
8100471a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100471d:	83 c8 01             	or     $0x1,%eax
81004720:	89 c2                	mov    %eax,%edx
81004722:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004725:	89 50 04             	mov    %edx,0x4(%eax)
81004728:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100472b:	8b 40 0c             	mov    0xc(%eax),%eax
8100472e:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004731:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004734:	8b 40 08             	mov    0x8(%eax),%eax
81004737:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100473a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100473d:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004740:	89 50 0c             	mov    %edx,0xc(%eax)
81004743:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004746:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004749:	89 50 08             	mov    %edx,0x8(%eax)
8100474c:	b8 68 88 00 81       	mov    $0x81008868,%eax
81004751:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81004754:	89 50 0c             	mov    %edx,0xc(%eax)
81004757:	ba 68 88 00 81       	mov    $0x81008868,%edx
8100475c:	8b 40 0c             	mov    0xc(%eax),%eax
8100475f:	89 42 08             	mov    %eax,0x8(%edx)
81004762:	ba 68 88 00 81       	mov    $0x81008868,%edx
81004767:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100476a:	89 50 0c             	mov    %edx,0xc(%eax)
8100476d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004770:	8b 50 0c             	mov    0xc(%eax),%edx
81004773:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004776:	89 50 08             	mov    %edx,0x8(%eax)
81004779:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100477c:	83 c8 01             	or     $0x1,%eax
8100477f:	89 c2                	mov    %eax,%edx
81004781:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004784:	89 50 04             	mov    %edx,0x4(%eax)
81004787:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100478a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100478d:	01 c2                	add    %eax,%edx
8100478f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004792:	89 02                	mov    %eax,(%edx)
81004794:	83 ec 0c             	sub    $0xc,%esp
81004797:	ff 75 08             	pushl  0x8(%ebp)
8100479a:	e8 2c 04 00 00       	call   81004bcb <__malloc_unlock>
8100479f:	83 c4 10             	add    $0x10,%esp
810047a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810047a5:	83 c0 08             	add    $0x8,%eax
810047a8:	e9 c0 01 00 00       	jmp    8100496d <_malloc_r+0x81d>
810047ad:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810047b1:	78 56                	js     81004809 <_malloc_r+0x6b9>
810047b3:	8b 55 f4             	mov    -0xc(%ebp),%edx
810047b6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810047b9:	01 d0                	add    %edx,%eax
810047bb:	8b 50 04             	mov    0x4(%eax),%edx
810047be:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810047c1:	8b 45 cc             	mov    -0x34(%ebp),%eax
810047c4:	01 c8                	add    %ecx,%eax
810047c6:	83 ca 01             	or     $0x1,%edx
810047c9:	89 50 04             	mov    %edx,0x4(%eax)
810047cc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810047cf:	8b 40 0c             	mov    0xc(%eax),%eax
810047d2:	89 45 d8             	mov    %eax,-0x28(%ebp)
810047d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810047d8:	8b 40 08             	mov    0x8(%eax),%eax
810047db:	89 45 dc             	mov    %eax,-0x24(%ebp)
810047de:	8b 45 dc             	mov    -0x24(%ebp),%eax
810047e1:	8b 55 d8             	mov    -0x28(%ebp),%edx
810047e4:	89 50 0c             	mov    %edx,0xc(%eax)
810047e7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810047ea:	8b 55 dc             	mov    -0x24(%ebp),%edx
810047ed:	89 50 08             	mov    %edx,0x8(%eax)
810047f0:	83 ec 0c             	sub    $0xc,%esp
810047f3:	ff 75 08             	pushl  0x8(%ebp)
810047f6:	e8 d0 03 00 00       	call   81004bcb <__malloc_unlock>
810047fb:	83 c4 10             	add    $0x10,%esp
810047fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004801:	83 c0 08             	add    $0x8,%eax
81004804:	e9 64 01 00 00       	jmp    8100496d <_malloc_r+0x81d>
81004809:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100480c:	8b 40 0c             	mov    0xc(%eax),%eax
8100480f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004812:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004815:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81004818:	0f 85 d2 fe ff ff    	jne    810046f0 <_malloc_r+0x5a0>
8100481e:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81004822:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004826:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004829:	83 e0 03             	and    $0x3,%eax
8100482c:	85 c0                	test   %eax,%eax
8100482e:	0f 85 ae fe ff ff    	jne    810046e2 <_malloc_r+0x592>
81004834:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004837:	83 e0 03             	and    $0x3,%eax
8100483a:	85 c0                	test   %eax,%eax
8100483c:	75 19                	jne    81004857 <_malloc_r+0x707>
8100483e:	b8 60 88 00 81       	mov    $0x81008860,%eax
81004843:	8b 48 04             	mov    0x4(%eax),%ecx
81004846:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004849:	f7 d0                	not    %eax
8100484b:	ba 60 88 00 81       	mov    $0x81008860,%edx
81004850:	21 c8                	and    %ecx,%eax
81004852:	89 42 04             	mov    %eax,0x4(%edx)
81004855:	eb 13                	jmp    8100486a <_malloc_r+0x71a>
81004857:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
8100485b:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
8100485f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004862:	8b 40 08             	mov    0x8(%eax),%eax
81004865:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81004868:	74 ca                	je     81004834 <_malloc_r+0x6e4>
8100486a:	d1 65 e4             	shll   -0x1c(%ebp)
8100486d:	b8 60 88 00 81       	mov    $0x81008860,%eax
81004872:	8b 40 04             	mov    0x4(%eax),%eax
81004875:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81004878:	77 23                	ja     8100489d <_malloc_r+0x74d>
8100487a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100487e:	74 1d                	je     8100489d <_malloc_r+0x74d>
81004880:	eb 07                	jmp    81004889 <_malloc_r+0x739>
81004882:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81004886:	d1 65 e4             	shll   -0x1c(%ebp)
81004889:	b8 60 88 00 81       	mov    $0x81008860,%eax
8100488e:	8b 40 04             	mov    0x4(%eax),%eax
81004891:	23 45 e4             	and    -0x1c(%ebp),%eax
81004894:	85 c0                	test   %eax,%eax
81004896:	74 ea                	je     81004882 <_malloc_r+0x732>
81004898:	e9 23 fe ff ff       	jmp    810046c0 <_malloc_r+0x570>
8100489d:	b8 60 88 00 81       	mov    $0x81008860,%eax
810048a2:	8b 40 08             	mov    0x8(%eax),%eax
810048a5:	8b 40 04             	mov    0x4(%eax),%eax
810048a8:	83 e0 fc             	and    $0xfffffffc,%eax
810048ab:	2b 45 d0             	sub    -0x30(%ebp),%eax
810048ae:	89 45 e8             	mov    %eax,-0x18(%ebp)
810048b1:	b8 60 88 00 81       	mov    $0x81008860,%eax
810048b6:	8b 40 08             	mov    0x8(%eax),%eax
810048b9:	8b 40 04             	mov    0x4(%eax),%eax
810048bc:	83 e0 fc             	and    $0xfffffffc,%eax
810048bf:	39 45 d0             	cmp    %eax,-0x30(%ebp)
810048c2:	77 06                	ja     810048ca <_malloc_r+0x77a>
810048c4:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810048c8:	7f 53                	jg     8100491d <_malloc_r+0x7cd>
810048ca:	83 ec 08             	sub    $0x8,%esp
810048cd:	ff 75 d0             	pushl  -0x30(%ebp)
810048d0:	ff 75 08             	pushl  0x8(%ebp)
810048d3:	e8 e5 f5 ff ff       	call   81003ebd <malloc_extend_top>
810048d8:	83 c4 10             	add    $0x10,%esp
810048db:	b8 60 88 00 81       	mov    $0x81008860,%eax
810048e0:	8b 40 08             	mov    0x8(%eax),%eax
810048e3:	8b 40 04             	mov    0x4(%eax),%eax
810048e6:	83 e0 fc             	and    $0xfffffffc,%eax
810048e9:	2b 45 d0             	sub    -0x30(%ebp),%eax
810048ec:	89 45 e8             	mov    %eax,-0x18(%ebp)
810048ef:	b8 60 88 00 81       	mov    $0x81008860,%eax
810048f4:	8b 40 08             	mov    0x8(%eax),%eax
810048f7:	8b 40 04             	mov    0x4(%eax),%eax
810048fa:	83 e0 fc             	and    $0xfffffffc,%eax
810048fd:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81004900:	77 06                	ja     81004908 <_malloc_r+0x7b8>
81004902:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004906:	7f 15                	jg     8100491d <_malloc_r+0x7cd>
81004908:	83 ec 0c             	sub    $0xc,%esp
8100490b:	ff 75 08             	pushl  0x8(%ebp)
8100490e:	e8 b8 02 00 00       	call   81004bcb <__malloc_unlock>
81004913:	83 c4 10             	add    $0x10,%esp
81004916:	b8 00 00 00 00       	mov    $0x0,%eax
8100491b:	eb 50                	jmp    8100496d <_malloc_r+0x81d>
8100491d:	b8 60 88 00 81       	mov    $0x81008860,%eax
81004922:	8b 40 08             	mov    0x8(%eax),%eax
81004925:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004928:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100492b:	83 c8 01             	or     $0x1,%eax
8100492e:	89 c2                	mov    %eax,%edx
81004930:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004933:	89 50 04             	mov    %edx,0x4(%eax)
81004936:	ba 60 88 00 81       	mov    $0x81008860,%edx
8100493b:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100493e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004941:	01 c8                	add    %ecx,%eax
81004943:	89 42 08             	mov    %eax,0x8(%edx)
81004946:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004949:	83 c8 01             	or     $0x1,%eax
8100494c:	89 c2                	mov    %eax,%edx
8100494e:	b8 60 88 00 81       	mov    $0x81008860,%eax
81004953:	8b 40 08             	mov    0x8(%eax),%eax
81004956:	89 50 04             	mov    %edx,0x4(%eax)
81004959:	83 ec 0c             	sub    $0xc,%esp
8100495c:	ff 75 08             	pushl  0x8(%ebp)
8100495f:	e8 67 02 00 00       	call   81004bcb <__malloc_unlock>
81004964:	83 c4 10             	add    $0x10,%esp
81004967:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100496a:	83 c0 08             	add    $0x8,%eax
8100496d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004970:	c9                   	leave  
81004971:	c3                   	ret    
81004972:	66 90                	xchg   %ax,%ax
81004974:	66 90                	xchg   %ax,%ax
81004976:	66 90                	xchg   %ax,%ax
81004978:	66 90                	xchg   %ax,%ax
8100497a:	66 90                	xchg   %ax,%ax
8100497c:	66 90                	xchg   %ax,%ax
8100497e:	66 90                	xchg   %ax,%ax

81004980 <memchr>:
81004980:	55                   	push   %ebp
81004981:	89 e5                	mov    %esp,%ebp
81004983:	57                   	push   %edi
81004984:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81004988:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100498b:	8b 7d 08             	mov    0x8(%ebp),%edi
8100498e:	31 d2                	xor    %edx,%edx
81004990:	85 c9                	test   %ecx,%ecx
81004992:	74 79                	je     81004a0d <L20>
81004994:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100499a:	74 28                	je     810049c4 <L5>
8100499c:	3a 07                	cmp    (%edi),%al
8100499e:	74 6a                	je     81004a0a <L15>
810049a0:	47                   	inc    %edi
810049a1:	49                   	dec    %ecx
810049a2:	74 69                	je     81004a0d <L20>
810049a4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810049aa:	74 18                	je     810049c4 <L5>
810049ac:	3a 07                	cmp    (%edi),%al
810049ae:	74 5a                	je     81004a0a <L15>
810049b0:	47                   	inc    %edi
810049b1:	49                   	dec    %ecx
810049b2:	74 59                	je     81004a0d <L20>
810049b4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810049ba:	74 08                	je     810049c4 <L5>
810049bc:	3a 07                	cmp    (%edi),%al
810049be:	74 4a                	je     81004a0a <L15>
810049c0:	47                   	inc    %edi
810049c1:	49                   	dec    %ecx
810049c2:	74 49                	je     81004a0d <L20>

810049c4 <L5>:
810049c4:	88 c4                	mov    %al,%ah
810049c6:	89 c2                	mov    %eax,%edx
810049c8:	c1 e2 10             	shl    $0x10,%edx
810049cb:	09 d0                	or     %edx,%eax
810049cd:	53                   	push   %ebx
810049ce:	66 90                	xchg   %ax,%ax

810049d0 <L8>:
810049d0:	83 e9 04             	sub    $0x4,%ecx
810049d3:	72 1c                	jb     810049f1 <L9>
810049d5:	8b 17                	mov    (%edi),%edx
810049d7:	83 c7 04             	add    $0x4,%edi
810049da:	31 c2                	xor    %eax,%edx
810049dc:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
810049e2:	f7 d2                	not    %edx
810049e4:	21 d3                	and    %edx,%ebx
810049e6:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
810049ec:	74 e2                	je     810049d0 <L8>
810049ee:	83 ef 04             	sub    $0x4,%edi

810049f1 <L9>:
810049f1:	5b                   	pop    %ebx
810049f2:	31 d2                	xor    %edx,%edx
810049f4:	83 c1 04             	add    $0x4,%ecx
810049f7:	74 14                	je     81004a0d <L20>
810049f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81004a00 <L10>:
81004a00:	3a 07                	cmp    (%edi),%al
81004a02:	74 06                	je     81004a0a <L15>
81004a04:	47                   	inc    %edi
81004a05:	49                   	dec    %ecx
81004a06:	75 f8                	jne    81004a00 <L10>
81004a08:	31 ff                	xor    %edi,%edi

81004a0a <L15>:
81004a0a:	4a                   	dec    %edx
81004a0b:	21 fa                	and    %edi,%edx

81004a0d <L20>:
81004a0d:	89 d0                	mov    %edx,%eax
81004a0f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004a12:	5f                   	pop    %edi
81004a13:	c9                   	leave  
81004a14:	c3                   	ret    

81004a15 <memcmp>:
81004a15:	55                   	push   %ebp
81004a16:	89 e5                	mov    %esp,%ebp
81004a18:	83 ec 10             	sub    $0x10,%esp
81004a1b:	53                   	push   %ebx
81004a1c:	57                   	push   %edi
81004a1d:	56                   	push   %esi
81004a1e:	8b 7d 08             	mov    0x8(%ebp),%edi
81004a21:	8b 75 0c             	mov    0xc(%ebp),%esi
81004a24:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004a27:	fc                   	cld    
81004a28:	31 c0                	xor    %eax,%eax
81004a2a:	85 c9                	test   %ecx,%ecx
81004a2c:	74 31                	je     81004a5f <L4>
81004a2e:	89 f8                	mov    %edi,%eax
81004a30:	09 f0                	or     %esi,%eax
81004a32:	a8 03                	test   $0x3,%al
81004a34:	75 1b                	jne    81004a51 <BYTECMP>
81004a36:	89 cb                	mov    %ecx,%ebx
81004a38:	c1 e9 02             	shr    $0x2,%ecx
81004a3b:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
81004a3d:	74 0d                	je     81004a4c <L5>
81004a3f:	83 ee 04             	sub    $0x4,%esi
81004a42:	83 ef 04             	sub    $0x4,%edi
81004a45:	b9 04 00 00 00       	mov    $0x4,%ecx
81004a4a:	eb 05                	jmp    81004a51 <BYTECMP>

81004a4c <L5>:
81004a4c:	83 e3 03             	and    $0x3,%ebx
81004a4f:	89 d9                	mov    %ebx,%ecx

81004a51 <BYTECMP>:
81004a51:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

81004a53 <L3>:
81004a53:	31 d2                	xor    %edx,%edx
81004a55:	8a 56 ff             	mov    -0x1(%esi),%dl
81004a58:	31 c0                	xor    %eax,%eax
81004a5a:	8a 47 ff             	mov    -0x1(%edi),%al
81004a5d:	29 d0                	sub    %edx,%eax

81004a5f <L4>:
81004a5f:	8d 65 e4             	lea    -0x1c(%ebp),%esp
81004a62:	5e                   	pop    %esi
81004a63:	5f                   	pop    %edi
81004a64:	5b                   	pop    %ebx
81004a65:	c9                   	leave  
81004a66:	c3                   	ret    
81004a67:	90                   	nop

81004a68 <memcpy>:
81004a68:	55                   	push   %ebp
81004a69:	89 e5                	mov    %esp,%ebp
81004a6b:	56                   	push   %esi
81004a6c:	57                   	push   %edi
81004a6d:	53                   	push   %ebx
81004a6e:	8b 7d 08             	mov    0x8(%ebp),%edi
81004a71:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004a74:	8b 75 0c             	mov    0xc(%ebp),%esi
81004a77:	fc                   	cld    
81004a78:	83 f9 08             	cmp    $0x8,%ecx
81004a7b:	76 26                	jbe    81004aa3 <memcpy+0x3b>
81004a7d:	89 fa                	mov    %edi,%edx
81004a7f:	89 cb                	mov    %ecx,%ebx
81004a81:	83 e2 03             	and    $0x3,%edx
81004a84:	74 10                	je     81004a96 <memcpy+0x2e>
81004a86:	b9 04 00 00 00       	mov    $0x4,%ecx
81004a8b:	29 d1                	sub    %edx,%ecx
81004a8d:	83 e1 03             	and    $0x3,%ecx
81004a90:	29 cb                	sub    %ecx,%ebx
81004a92:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004a94:	89 d9                	mov    %ebx,%ecx
81004a96:	c1 e9 02             	shr    $0x2,%ecx
81004a99:	8d 76 00             	lea    0x0(%esi),%esi
81004a9c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004a9e:	89 d9                	mov    %ebx,%ecx
81004aa0:	83 e1 03             	and    $0x3,%ecx
81004aa3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004aa5:	8b 45 08             	mov    0x8(%ebp),%eax
81004aa8:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004aab:	5b                   	pop    %ebx
81004aac:	5f                   	pop    %edi
81004aad:	5e                   	pop    %esi
81004aae:	c9                   	leave  
81004aaf:	c3                   	ret    

81004ab0 <memmove>:
81004ab0:	55                   	push   %ebp
81004ab1:	89 e5                	mov    %esp,%ebp
81004ab3:	56                   	push   %esi
81004ab4:	57                   	push   %edi
81004ab5:	53                   	push   %ebx
81004ab6:	8b 7d 08             	mov    0x8(%ebp),%edi
81004ab9:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004abc:	8b 75 0c             	mov    0xc(%ebp),%esi
81004abf:	fc                   	cld    
81004ac0:	39 fe                	cmp    %edi,%esi
81004ac2:	73 43                	jae    81004b07 <memmove+0x57>
81004ac4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81004ac8:	39 df                	cmp    %ebx,%edi
81004aca:	77 3b                	ja     81004b07 <memmove+0x57>
81004acc:	01 ce                	add    %ecx,%esi
81004ace:	01 cf                	add    %ecx,%edi
81004ad0:	fd                   	std    
81004ad1:	83 f9 08             	cmp    $0x8,%ecx
81004ad4:	76 2b                	jbe    81004b01 <memmove+0x51>
81004ad6:	89 fa                	mov    %edi,%edx
81004ad8:	89 cb                	mov    %ecx,%ebx
81004ada:	83 e2 03             	and    $0x3,%edx
81004add:	74 0c                	je     81004aeb <memmove+0x3b>
81004adf:	89 d1                	mov    %edx,%ecx
81004ae1:	4e                   	dec    %esi
81004ae2:	4f                   	dec    %edi
81004ae3:	29 cb                	sub    %ecx,%ebx
81004ae5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004ae7:	89 d9                	mov    %ebx,%ecx
81004ae9:	46                   	inc    %esi
81004aea:	47                   	inc    %edi
81004aeb:	c1 e9 02             	shr    $0x2,%ecx
81004aee:	83 ee 04             	sub    $0x4,%esi
81004af1:	83 ef 04             	sub    $0x4,%edi
81004af4:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004af6:	83 c6 04             	add    $0x4,%esi
81004af9:	83 c7 04             	add    $0x4,%edi
81004afc:	89 d9                	mov    %ebx,%ecx
81004afe:	83 e1 03             	and    $0x3,%ecx
81004b01:	4e                   	dec    %esi
81004b02:	4f                   	dec    %edi
81004b03:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b05:	eb 2a                	jmp    81004b31 <memmove+0x81>
81004b07:	83 f9 08             	cmp    $0x8,%ecx
81004b0a:	76 23                	jbe    81004b2f <memmove+0x7f>
81004b0c:	89 fa                	mov    %edi,%edx
81004b0e:	89 cb                	mov    %ecx,%ebx
81004b10:	83 e2 03             	and    $0x3,%edx
81004b13:	74 10                	je     81004b25 <memmove+0x75>
81004b15:	b9 04 00 00 00       	mov    $0x4,%ecx
81004b1a:	29 d1                	sub    %edx,%ecx
81004b1c:	83 e1 03             	and    $0x3,%ecx
81004b1f:	29 cb                	sub    %ecx,%ebx
81004b21:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b23:	89 d9                	mov    %ebx,%ecx
81004b25:	c1 e9 02             	shr    $0x2,%ecx
81004b28:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004b2a:	89 d9                	mov    %ebx,%ecx
81004b2c:	83 e1 03             	and    $0x3,%ecx
81004b2f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b31:	8b 45 08             	mov    0x8(%ebp),%eax
81004b34:	fc                   	cld    
81004b35:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004b38:	5b                   	pop    %ebx
81004b39:	5f                   	pop    %edi
81004b3a:	5e                   	pop    %esi
81004b3b:	c9                   	leave  
81004b3c:	c3                   	ret    

81004b3d <memset>:
81004b3d:	55                   	push   %ebp
81004b3e:	89 e5                	mov    %esp,%ebp
81004b40:	57                   	push   %edi
81004b41:	8b 7d 08             	mov    0x8(%ebp),%edi
81004b44:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81004b48:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004b4b:	fc                   	cld    
81004b4c:	83 f9 10             	cmp    $0x10,%ecx
81004b4f:	76 69                	jbe    81004bba <memset+0x7d>
81004b51:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004b57:	74 4c                	je     81004ba5 <memset+0x68>
81004b59:	88 07                	mov    %al,(%edi)
81004b5b:	47                   	inc    %edi
81004b5c:	49                   	dec    %ecx
81004b5d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004b63:	74 40                	je     81004ba5 <memset+0x68>
81004b65:	88 07                	mov    %al,(%edi)
81004b67:	47                   	inc    %edi
81004b68:	49                   	dec    %ecx
81004b69:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004b6f:	74 34                	je     81004ba5 <memset+0x68>
81004b71:	88 07                	mov    %al,(%edi)
81004b73:	47                   	inc    %edi
81004b74:	49                   	dec    %ecx
81004b75:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004b7b:	74 28                	je     81004ba5 <memset+0x68>
81004b7d:	88 07                	mov    %al,(%edi)
81004b7f:	47                   	inc    %edi
81004b80:	49                   	dec    %ecx
81004b81:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004b87:	74 1c                	je     81004ba5 <memset+0x68>
81004b89:	88 07                	mov    %al,(%edi)
81004b8b:	47                   	inc    %edi
81004b8c:	49                   	dec    %ecx
81004b8d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004b93:	74 10                	je     81004ba5 <memset+0x68>
81004b95:	88 07                	mov    %al,(%edi)
81004b97:	47                   	inc    %edi
81004b98:	49                   	dec    %ecx
81004b99:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004b9f:	74 04                	je     81004ba5 <memset+0x68>
81004ba1:	88 07                	mov    %al,(%edi)
81004ba3:	47                   	inc    %edi
81004ba4:	49                   	dec    %ecx
81004ba5:	88 c4                	mov    %al,%ah
81004ba7:	89 c2                	mov    %eax,%edx
81004ba9:	c1 e2 10             	shl    $0x10,%edx
81004bac:	09 d0                	or     %edx,%eax
81004bae:	89 ca                	mov    %ecx,%edx
81004bb0:	c1 e9 02             	shr    $0x2,%ecx
81004bb3:	83 e2 03             	and    $0x3,%edx
81004bb6:	f3 ab                	rep stos %eax,%es:(%edi)
81004bb8:	89 d1                	mov    %edx,%ecx
81004bba:	f3 aa                	rep stos %al,%es:(%edi)
81004bbc:	8b 45 08             	mov    0x8(%ebp),%eax
81004bbf:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004bc2:	5f                   	pop    %edi
81004bc3:	c9                   	leave  
81004bc4:	c3                   	ret    

81004bc5 <__malloc_lock>:
81004bc5:	55                   	push   %ebp
81004bc6:	89 e5                	mov    %esp,%ebp
81004bc8:	90                   	nop
81004bc9:	5d                   	pop    %ebp
81004bca:	c3                   	ret    

81004bcb <__malloc_unlock>:
81004bcb:	55                   	push   %ebp
81004bcc:	89 e5                	mov    %esp,%ebp
81004bce:	90                   	nop
81004bcf:	5d                   	pop    %ebp
81004bd0:	c3                   	ret    

81004bd1 <__sprint_r>:
81004bd1:	55                   	push   %ebp
81004bd2:	89 e5                	mov    %esp,%ebp
81004bd4:	56                   	push   %esi
81004bd5:	53                   	push   %ebx
81004bd6:	83 ec 10             	sub    $0x10,%esp
81004bd9:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004bdc:	be 00 00 00 00       	mov    $0x0,%esi
81004be1:	8b 43 08             	mov    0x8(%ebx),%eax
81004be4:	85 c0                	test   %eax,%eax
81004be6:	75 11                	jne    81004bf9 <__sprint_r+0x28>
81004be8:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004bef:	b8 00 00 00 00       	mov    $0x0,%eax
81004bf4:	e9 ad 00 00 00       	jmp    81004ca6 <__sprint_r+0xd5>
81004bf9:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bfc:	8b 40 64             	mov    0x64(%eax),%eax
81004bff:	25 00 20 00 00       	and    $0x2000,%eax
81004c04:	85 c0                	test   %eax,%eax
81004c06:	74 7a                	je     81004c82 <__sprint_r+0xb1>
81004c08:	8b 03                	mov    (%ebx),%eax
81004c0a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004c0d:	eb 6a                	jmp    81004c79 <__sprint_r+0xa8>
81004c0f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c12:	8b 00                	mov    (%eax),%eax
81004c14:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004c17:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c1a:	8b 40 04             	mov    0x4(%eax),%eax
81004c1d:	c1 e8 02             	shr    $0x2,%eax
81004c20:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004c23:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004c2a:	eb 33                	jmp    81004c5f <__sprint_r+0x8e>
81004c2c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004c2f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004c36:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004c39:	01 d0                	add    %edx,%eax
81004c3b:	8b 00                	mov    (%eax),%eax
81004c3d:	83 ec 04             	sub    $0x4,%esp
81004c40:	ff 75 0c             	pushl  0xc(%ebp)
81004c43:	50                   	push   %eax
81004c44:	ff 75 08             	pushl  0x8(%ebp)
81004c47:	e8 1a 29 00 00       	call   81007566 <_fputwc_r>
81004c4c:	83 c4 10             	add    $0x10,%esp
81004c4f:	83 f8 ff             	cmp    $0xffffffff,%eax
81004c52:	75 07                	jne    81004c5b <__sprint_r+0x8a>
81004c54:	be ff ff ff ff       	mov    $0xffffffff,%esi
81004c59:	eb 3b                	jmp    81004c96 <__sprint_r+0xc5>
81004c5b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004c5f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004c62:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81004c65:	7c c5                	jl     81004c2c <__sprint_r+0x5b>
81004c67:	8b 43 08             	mov    0x8(%ebx),%eax
81004c6a:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004c6d:	c1 e2 02             	shl    $0x2,%edx
81004c70:	29 d0                	sub    %edx,%eax
81004c72:	89 43 08             	mov    %eax,0x8(%ebx)
81004c75:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
81004c79:	8b 43 08             	mov    0x8(%ebx),%eax
81004c7c:	85 c0                	test   %eax,%eax
81004c7e:	75 8f                	jne    81004c0f <__sprint_r+0x3e>
81004c80:	eb 14                	jmp    81004c96 <__sprint_r+0xc5>
81004c82:	83 ec 04             	sub    $0x4,%esp
81004c85:	53                   	push   %ebx
81004c86:	ff 75 0c             	pushl  0xc(%ebp)
81004c89:	ff 75 08             	pushl  0x8(%ebp)
81004c8c:	e8 37 dc ff ff       	call   810028c8 <__sfvwrite_r>
81004c91:	83 c4 10             	add    $0x10,%esp
81004c94:	89 c6                	mov    %eax,%esi
81004c96:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004c9d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004ca4:	89 f0                	mov    %esi,%eax
81004ca6:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004ca9:	5b                   	pop    %ebx
81004caa:	5e                   	pop    %esi
81004cab:	5d                   	pop    %ebp
81004cac:	c3                   	ret    

81004cad <__sfputc_r>:
81004cad:	55                   	push   %ebp
81004cae:	89 e5                	mov    %esp,%ebp
81004cb0:	83 ec 08             	sub    $0x8,%esp
81004cb3:	8b 45 10             	mov    0x10(%ebp),%eax
81004cb6:	8b 40 08             	mov    0x8(%eax),%eax
81004cb9:	8d 50 ff             	lea    -0x1(%eax),%edx
81004cbc:	8b 45 10             	mov    0x10(%ebp),%eax
81004cbf:	89 50 08             	mov    %edx,0x8(%eax)
81004cc2:	8b 45 10             	mov    0x10(%ebp),%eax
81004cc5:	8b 40 08             	mov    0x8(%eax),%eax
81004cc8:	85 c0                	test   %eax,%eax
81004cca:	79 17                	jns    81004ce3 <__sfputc_r+0x36>
81004ccc:	8b 45 10             	mov    0x10(%ebp),%eax
81004ccf:	8b 50 08             	mov    0x8(%eax),%edx
81004cd2:	8b 45 10             	mov    0x10(%ebp),%eax
81004cd5:	8b 40 18             	mov    0x18(%eax),%eax
81004cd8:	39 c2                	cmp    %eax,%edx
81004cda:	7c 21                	jl     81004cfd <__sfputc_r+0x50>
81004cdc:	8b 45 0c             	mov    0xc(%ebp),%eax
81004cdf:	3c 0a                	cmp    $0xa,%al
81004ce1:	74 1a                	je     81004cfd <__sfputc_r+0x50>
81004ce3:	8b 45 10             	mov    0x10(%ebp),%eax
81004ce6:	8b 00                	mov    (%eax),%eax
81004ce8:	8d 48 01             	lea    0x1(%eax),%ecx
81004ceb:	8b 55 10             	mov    0x10(%ebp),%edx
81004cee:	89 0a                	mov    %ecx,(%edx)
81004cf0:	8b 55 0c             	mov    0xc(%ebp),%edx
81004cf3:	88 10                	mov    %dl,(%eax)
81004cf5:	0f b6 00             	movzbl (%eax),%eax
81004cf8:	0f b6 c0             	movzbl %al,%eax
81004cfb:	eb 14                	jmp    81004d11 <__sfputc_r+0x64>
81004cfd:	83 ec 04             	sub    $0x4,%esp
81004d00:	ff 75 10             	pushl  0x10(%ebp)
81004d03:	ff 75 0c             	pushl  0xc(%ebp)
81004d06:	ff 75 08             	pushl  0x8(%ebp)
81004d09:	e8 c1 21 00 00       	call   81006ecf <__swbuf_r>
81004d0e:	83 c4 10             	add    $0x10,%esp
81004d11:	c9                   	leave  
81004d12:	c3                   	ret    

81004d13 <__sfputs_r>:
81004d13:	55                   	push   %ebp
81004d14:	89 e5                	mov    %esp,%ebp
81004d16:	53                   	push   %ebx
81004d17:	83 ec 14             	sub    $0x14,%esp
81004d1a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d1d:	8b 40 64             	mov    0x64(%eax),%eax
81004d20:	25 00 20 00 00       	and    $0x2000,%eax
81004d25:	85 c0                	test   %eax,%eax
81004d27:	74 4c                	je     81004d75 <__sfputs_r+0x62>
81004d29:	8b 45 10             	mov    0x10(%ebp),%eax
81004d2c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d2f:	bb 00 00 00 00       	mov    $0x0,%ebx
81004d34:	eb 31                	jmp    81004d67 <__sfputs_r+0x54>
81004d36:	89 d8                	mov    %ebx,%eax
81004d38:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004d3f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d42:	01 d0                	add    %edx,%eax
81004d44:	8b 00                	mov    (%eax),%eax
81004d46:	83 ec 04             	sub    $0x4,%esp
81004d49:	ff 75 0c             	pushl  0xc(%ebp)
81004d4c:	50                   	push   %eax
81004d4d:	ff 75 08             	pushl  0x8(%ebp)
81004d50:	e8 11 28 00 00       	call   81007566 <_fputwc_r>
81004d55:	83 c4 10             	add    $0x10,%esp
81004d58:	83 f8 ff             	cmp    $0xffffffff,%eax
81004d5b:	75 07                	jne    81004d64 <__sfputs_r+0x51>
81004d5d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004d62:	eb 52                	jmp    81004db6 <__sfputs_r+0xa3>
81004d64:	83 c3 01             	add    $0x1,%ebx
81004d67:	8b 45 14             	mov    0x14(%ebp),%eax
81004d6a:	c1 e8 02             	shr    $0x2,%eax
81004d6d:	89 da                	mov    %ebx,%edx
81004d6f:	39 d0                	cmp    %edx,%eax
81004d71:	77 c3                	ja     81004d36 <__sfputs_r+0x23>
81004d73:	eb 3c                	jmp    81004db1 <__sfputs_r+0x9e>
81004d75:	bb 00 00 00 00       	mov    $0x0,%ebx
81004d7a:	eb 2e                	jmp    81004daa <__sfputs_r+0x97>
81004d7c:	89 da                	mov    %ebx,%edx
81004d7e:	8b 45 10             	mov    0x10(%ebp),%eax
81004d81:	01 d0                	add    %edx,%eax
81004d83:	0f b6 00             	movzbl (%eax),%eax
81004d86:	0f be c0             	movsbl %al,%eax
81004d89:	83 ec 04             	sub    $0x4,%esp
81004d8c:	ff 75 0c             	pushl  0xc(%ebp)
81004d8f:	50                   	push   %eax
81004d90:	ff 75 08             	pushl  0x8(%ebp)
81004d93:	e8 15 ff ff ff       	call   81004cad <__sfputc_r>
81004d98:	83 c4 10             	add    $0x10,%esp
81004d9b:	83 f8 ff             	cmp    $0xffffffff,%eax
81004d9e:	75 07                	jne    81004da7 <__sfputs_r+0x94>
81004da0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004da5:	eb 0f                	jmp    81004db6 <__sfputs_r+0xa3>
81004da7:	83 c3 01             	add    $0x1,%ebx
81004daa:	89 d8                	mov    %ebx,%eax
81004dac:	39 45 14             	cmp    %eax,0x14(%ebp)
81004daf:	77 cb                	ja     81004d7c <__sfputs_r+0x69>
81004db1:	b8 00 00 00 00       	mov    $0x0,%eax
81004db6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004db9:	c9                   	leave  
81004dba:	c3                   	ret    

81004dbb <vfiprintf>:
81004dbb:	55                   	push   %ebp
81004dbc:	89 e5                	mov    %esp,%ebp
81004dbe:	83 ec 18             	sub    $0x18,%esp
81004dc1:	a1 44 88 00 81       	mov    0x81008844,%eax
81004dc6:	ff 75 10             	pushl  0x10(%ebp)
81004dc9:	ff 75 0c             	pushl  0xc(%ebp)
81004dcc:	ff 75 08             	pushl  0x8(%ebp)
81004dcf:	50                   	push   %eax
81004dd0:	e8 0b 00 00 00       	call   81004de0 <_vfiprintf_r>
81004dd5:	83 c4 10             	add    $0x10,%esp
81004dd8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004ddb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004dde:	c9                   	leave  
81004ddf:	c3                   	ret    

81004de0 <_vfiprintf_r>:
81004de0:	55                   	push   %ebp
81004de1:	89 e5                	mov    %esp,%ebp
81004de3:	57                   	push   %edi
81004de4:	56                   	push   %esi
81004de5:	53                   	push   %ebx
81004de6:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81004dec:	c7 45 e4 13 4d 00 81 	movl   $0x81004d13,-0x1c(%ebp)
81004df3:	8b 45 08             	mov    0x8(%ebp),%eax
81004df6:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004df9:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81004dfd:	74 18                	je     81004e17 <_vfiprintf_r+0x37>
81004dff:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004e02:	8b 40 38             	mov    0x38(%eax),%eax
81004e05:	85 c0                	test   %eax,%eax
81004e07:	75 0e                	jne    81004e17 <_vfiprintf_r+0x37>
81004e09:	83 ec 0c             	sub    $0xc,%esp
81004e0c:	ff 75 e0             	pushl  -0x20(%ebp)
81004e0f:	e8 72 ca ff ff       	call   81001886 <__sinit>
81004e14:	83 c4 10             	add    $0x10,%esp
81004e17:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e1a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004e1e:	98                   	cwtl   
81004e1f:	83 e0 08             	and    $0x8,%eax
81004e22:	85 c0                	test   %eax,%eax
81004e24:	74 0a                	je     81004e30 <_vfiprintf_r+0x50>
81004e26:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e29:	8b 40 10             	mov    0x10(%eax),%eax
81004e2c:	85 c0                	test   %eax,%eax
81004e2e:	75 1f                	jne    81004e4f <_vfiprintf_r+0x6f>
81004e30:	83 ec 08             	sub    $0x8,%esp
81004e33:	ff 75 0c             	pushl  0xc(%ebp)
81004e36:	ff 75 08             	pushl  0x8(%ebp)
81004e39:	e8 0a 22 00 00       	call   81007048 <__swsetup_r>
81004e3e:	83 c4 10             	add    $0x10,%esp
81004e41:	85 c0                	test   %eax,%eax
81004e43:	74 0a                	je     81004e4f <_vfiprintf_r+0x6f>
81004e45:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004e4a:	e9 df 02 00 00       	jmp    8100512e <_vfiprintf_r+0x34e>
81004e4f:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004e52:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
81004e59:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81004e5d:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81004e61:	8b 45 14             	mov    0x14(%ebp),%eax
81004e64:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004e6a:	89 de                	mov    %ebx,%esi
81004e6c:	eb 03                	jmp    81004e71 <_vfiprintf_r+0x91>
81004e6e:	83 c3 01             	add    $0x1,%ebx
81004e71:	0f b6 03             	movzbl (%ebx),%eax
81004e74:	84 c0                	test   %al,%al
81004e76:	74 07                	je     81004e7f <_vfiprintf_r+0x9f>
81004e78:	0f b6 03             	movzbl (%ebx),%eax
81004e7b:	3c 25                	cmp    $0x25,%al
81004e7d:	75 ef                	jne    81004e6e <_vfiprintf_r+0x8e>
81004e7f:	89 d8                	mov    %ebx,%eax
81004e81:	29 f0                	sub    %esi,%eax
81004e83:	85 c0                	test   %eax,%eax
81004e85:	74 2b                	je     81004eb2 <_vfiprintf_r+0xd2>
81004e87:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81004e8d:	50                   	push   %eax
81004e8e:	56                   	push   %esi
81004e8f:	ff 75 0c             	pushl  0xc(%ebp)
81004e92:	ff 75 08             	pushl  0x8(%ebp)
81004e95:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004e98:	ff d0                	call   *%eax
81004e9a:	83 c4 10             	add    $0x10,%esp
81004e9d:	83 f8 ff             	cmp    $0xffffffff,%eax
81004ea0:	0f 84 68 02 00 00    	je     8100510e <_vfiprintf_r+0x32e>
81004ea6:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004ea9:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81004eaf:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004eb2:	0f b6 03             	movzbl (%ebx),%eax
81004eb5:	84 c0                	test   %al,%al
81004eb7:	0f 84 54 02 00 00    	je     81005111 <_vfiprintf_r+0x331>
81004ebd:	83 c3 01             	add    $0x1,%ebx
81004ec0:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
81004ec7:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81004ece:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004ed5:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81004edc:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81004ee0:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81004ee7:	c7 45 dc 88 80 00 81 	movl   $0x81008088,-0x24(%ebp)
81004eee:	eb 1b                	jmp    81004f0b <_vfiprintf_r+0x12b>
81004ef0:	8b 55 80             	mov    -0x80(%ebp),%edx
81004ef3:	89 f0                	mov    %esi,%eax
81004ef5:	2b 45 dc             	sub    -0x24(%ebp),%eax
81004ef8:	be 01 00 00 00       	mov    $0x1,%esi
81004efd:	89 c1                	mov    %eax,%ecx
81004eff:	d3 e6                	shl    %cl,%esi
81004f01:	89 f0                	mov    %esi,%eax
81004f03:	09 d0                	or     %edx,%eax
81004f05:	89 45 80             	mov    %eax,-0x80(%ebp)
81004f08:	83 c3 01             	add    $0x1,%ebx
81004f0b:	0f b6 03             	movzbl (%ebx),%eax
81004f0e:	0f be c0             	movsbl %al,%eax
81004f11:	83 ec 04             	sub    $0x4,%esp
81004f14:	6a 05                	push   $0x5
81004f16:	50                   	push   %eax
81004f17:	ff 75 dc             	pushl  -0x24(%ebp)
81004f1a:	e8 61 fa ff ff       	call   81004980 <memchr>
81004f1f:	83 c4 10             	add    $0x10,%esp
81004f22:	89 c6                	mov    %eax,%esi
81004f24:	85 f6                	test   %esi,%esi
81004f26:	75 c8                	jne    81004ef0 <_vfiprintf_r+0x110>
81004f28:	8b 45 80             	mov    -0x80(%ebp),%eax
81004f2b:	83 e0 10             	and    $0x10,%eax
81004f2e:	85 c0                	test   %eax,%eax
81004f30:	74 04                	je     81004f36 <_vfiprintf_r+0x156>
81004f32:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81004f36:	8b 45 80             	mov    -0x80(%ebp),%eax
81004f39:	83 e0 08             	and    $0x8,%eax
81004f3c:	85 c0                	test   %eax,%eax
81004f3e:	74 04                	je     81004f44 <_vfiprintf_r+0x164>
81004f40:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81004f44:	0f b6 03             	movzbl (%ebx),%eax
81004f47:	3c 2a                	cmp    $0x2a,%al
81004f49:	75 50                	jne    81004f9b <_vfiprintf_r+0x1bb>
81004f4b:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004f51:	8d 50 04             	lea    0x4(%eax),%edx
81004f54:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81004f5a:	8b 00                	mov    (%eax),%eax
81004f5c:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004f5f:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004f62:	85 c0                	test   %eax,%eax
81004f64:	79 11                	jns    81004f77 <_vfiprintf_r+0x197>
81004f66:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004f69:	f7 d8                	neg    %eax
81004f6b:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004f6e:	8b 45 80             	mov    -0x80(%ebp),%eax
81004f71:	83 c8 02             	or     $0x2,%eax
81004f74:	89 45 80             	mov    %eax,-0x80(%ebp)
81004f77:	83 c3 01             	add    $0x1,%ebx
81004f7a:	eb 2d                	jmp    81004fa9 <_vfiprintf_r+0x1c9>
81004f7c:	8b 55 8c             	mov    -0x74(%ebp),%edx
81004f7f:	89 d0                	mov    %edx,%eax
81004f81:	c1 e0 02             	shl    $0x2,%eax
81004f84:	01 d0                	add    %edx,%eax
81004f86:	01 c0                	add    %eax,%eax
81004f88:	89 c2                	mov    %eax,%edx
81004f8a:	0f b6 03             	movzbl (%ebx),%eax
81004f8d:	0f be c0             	movsbl %al,%eax
81004f90:	83 e8 30             	sub    $0x30,%eax
81004f93:	01 d0                	add    %edx,%eax
81004f95:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004f98:	83 c3 01             	add    $0x1,%ebx
81004f9b:	0f b6 03             	movzbl (%ebx),%eax
81004f9e:	0f be c0             	movsbl %al,%eax
81004fa1:	83 e8 30             	sub    $0x30,%eax
81004fa4:	83 f8 09             	cmp    $0x9,%eax
81004fa7:	76 d3                	jbe    81004f7c <_vfiprintf_r+0x19c>
81004fa9:	0f b6 03             	movzbl (%ebx),%eax
81004fac:	3c 2e                	cmp    $0x2e,%al
81004fae:	75 67                	jne    81005017 <_vfiprintf_r+0x237>
81004fb0:	83 c3 01             	add    $0x1,%ebx
81004fb3:	0f b6 03             	movzbl (%ebx),%eax
81004fb6:	3c 2a                	cmp    $0x2a,%al
81004fb8:	75 27                	jne    81004fe1 <_vfiprintf_r+0x201>
81004fba:	83 c3 01             	add    $0x1,%ebx
81004fbd:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004fc3:	8d 50 04             	lea    0x4(%eax),%edx
81004fc6:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81004fcc:	8b 00                	mov    (%eax),%eax
81004fce:	89 45 84             	mov    %eax,-0x7c(%ebp)
81004fd1:	8b 45 84             	mov    -0x7c(%ebp),%eax
81004fd4:	85 c0                	test   %eax,%eax
81004fd6:	79 3f                	jns    81005017 <_vfiprintf_r+0x237>
81004fd8:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004fdf:	eb 36                	jmp    81005017 <_vfiprintf_r+0x237>
81004fe1:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81004fe8:	eb 1f                	jmp    81005009 <_vfiprintf_r+0x229>
81004fea:	8b 55 84             	mov    -0x7c(%ebp),%edx
81004fed:	89 d0                	mov    %edx,%eax
81004fef:	c1 e0 02             	shl    $0x2,%eax
81004ff2:	01 d0                	add    %edx,%eax
81004ff4:	01 c0                	add    %eax,%eax
81004ff6:	89 c2                	mov    %eax,%edx
81004ff8:	0f b6 03             	movzbl (%ebx),%eax
81004ffb:	0f be c0             	movsbl %al,%eax
81004ffe:	83 e8 30             	sub    $0x30,%eax
81005001:	01 d0                	add    %edx,%eax
81005003:	89 45 84             	mov    %eax,-0x7c(%ebp)
81005006:	83 c3 01             	add    $0x1,%ebx
81005009:	0f b6 03             	movzbl (%ebx),%eax
8100500c:	0f be c0             	movsbl %al,%eax
8100500f:	83 e8 30             	sub    $0x30,%eax
81005012:	83 f8 09             	cmp    $0x9,%eax
81005015:	76 d3                	jbe    81004fea <_vfiprintf_r+0x20a>
81005017:	c7 45 dc 8e 80 00 81 	movl   $0x8100808e,-0x24(%ebp)
8100501e:	0f b6 03             	movzbl (%ebx),%eax
81005021:	0f be c0             	movsbl %al,%eax
81005024:	83 ec 04             	sub    $0x4,%esp
81005027:	6a 03                	push   $0x3
81005029:	50                   	push   %eax
8100502a:	ff 75 dc             	pushl  -0x24(%ebp)
8100502d:	e8 4e f9 ff ff       	call   81004980 <memchr>
81005032:	83 c4 10             	add    $0x10,%esp
81005035:	89 c6                	mov    %eax,%esi
81005037:	85 f6                	test   %esi,%esi
81005039:	74 1b                	je     81005056 <_vfiprintf_r+0x276>
8100503b:	8b 55 80             	mov    -0x80(%ebp),%edx
8100503e:	89 f0                	mov    %esi,%eax
81005040:	2b 45 dc             	sub    -0x24(%ebp),%eax
81005043:	be 40 00 00 00       	mov    $0x40,%esi
81005048:	89 c1                	mov    %eax,%ecx
8100504a:	d3 e6                	shl    %cl,%esi
8100504c:	89 f0                	mov    %esi,%eax
8100504e:	09 d0                	or     %edx,%eax
81005050:	89 45 80             	mov    %eax,-0x80(%ebp)
81005053:	83 c3 01             	add    $0x1,%ebx
81005056:	89 d8                	mov    %ebx,%eax
81005058:	8d 58 01             	lea    0x1(%eax),%ebx
8100505b:	0f b6 00             	movzbl (%eax),%eax
8100505e:	88 45 98             	mov    %al,-0x68(%ebp)
81005061:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81005065:	0f be c0             	movsbl %al,%eax
81005068:	83 ec 04             	sub    $0x4,%esp
8100506b:	6a 06                	push   $0x6
8100506d:	50                   	push   %eax
8100506e:	68 92 80 00 81       	push   $0x81008092
81005073:	e8 08 f9 ff ff       	call   81004980 <memchr>
81005078:	83 c4 10             	add    $0x10,%esp
8100507b:	89 c6                	mov    %eax,%esi
8100507d:	85 f6                	test   %esi,%esi
8100507f:	74 5a                	je     810050db <_vfiprintf_r+0x2fb>
81005081:	b8 00 00 00 00       	mov    $0x0,%eax
81005086:	85 c0                	test   %eax,%eax
81005088:	75 2e                	jne    810050b8 <_vfiprintf_r+0x2d8>
8100508a:	8b 45 80             	mov    -0x80(%ebp),%eax
8100508d:	25 00 01 00 00       	and    $0x100,%eax
81005092:	85 c0                	test   %eax,%eax
81005094:	74 11                	je     810050a7 <_vfiprintf_r+0x2c7>
81005096:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8100509c:	83 c0 0c             	add    $0xc,%eax
8100509f:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810050a5:	eb 55                	jmp    810050fc <_vfiprintf_r+0x31c>
810050a7:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810050ad:	83 c0 08             	add    $0x8,%eax
810050b0:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810050b6:	eb 44                	jmp    810050fc <_vfiprintf_r+0x31c>
810050b8:	83 ec 0c             	sub    $0xc,%esp
810050bb:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810050c1:	50                   	push   %eax
810050c2:	ff 75 e4             	pushl  -0x1c(%ebp)
810050c5:	ff 75 0c             	pushl  0xc(%ebp)
810050c8:	8d 45 80             	lea    -0x80(%ebp),%eax
810050cb:	50                   	push   %eax
810050cc:	ff 75 08             	pushl  0x8(%ebp)
810050cf:	e8 2c af ff 7e       	call   0 <do_help-0x81000000>
810050d4:	83 c4 20             	add    $0x20,%esp
810050d7:	89 c7                	mov    %eax,%edi
810050d9:	eb 21                	jmp    810050fc <_vfiprintf_r+0x31c>
810050db:	83 ec 0c             	sub    $0xc,%esp
810050de:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810050e4:	50                   	push   %eax
810050e5:	ff 75 e4             	pushl  -0x1c(%ebp)
810050e8:	ff 75 0c             	pushl  0xc(%ebp)
810050eb:	8d 45 80             	lea    -0x80(%ebp),%eax
810050ee:	50                   	push   %eax
810050ef:	ff 75 08             	pushl  0x8(%ebp)
810050f2:	e8 da 01 00 00       	call   810052d1 <_printf_i>
810050f7:	83 c4 20             	add    $0x20,%esp
810050fa:	89 c7                	mov    %eax,%edi
810050fc:	83 ff ff             	cmp    $0xffffffff,%edi
810050ff:	74 13                	je     81005114 <_vfiprintf_r+0x334>
81005101:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005104:	01 f8                	add    %edi,%eax
81005106:	89 45 94             	mov    %eax,-0x6c(%ebp)
81005109:	e9 5c fd ff ff       	jmp    81004e6a <_vfiprintf_r+0x8a>
8100510e:	90                   	nop
8100510f:	eb 04                	jmp    81005115 <_vfiprintf_r+0x335>
81005111:	90                   	nop
81005112:	eb 01                	jmp    81005115 <_vfiprintf_r+0x335>
81005114:	90                   	nop
81005115:	8b 45 0c             	mov    0xc(%ebp),%eax
81005118:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100511c:	98                   	cwtl   
8100511d:	83 e0 40             	and    $0x40,%eax
81005120:	85 c0                	test   %eax,%eax
81005122:	75 05                	jne    81005129 <_vfiprintf_r+0x349>
81005124:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005127:	eb 05                	jmp    8100512e <_vfiprintf_r+0x34e>
81005129:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100512e:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005131:	5b                   	pop    %ebx
81005132:	5e                   	pop    %esi
81005133:	5f                   	pop    %edi
81005134:	5d                   	pop    %ebp
81005135:	c3                   	ret    

81005136 <_printf_common>:
81005136:	55                   	push   %ebp
81005137:	89 e5                	mov    %esp,%ebp
81005139:	83 ec 18             	sub    $0x18,%esp
8100513c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100513f:	8b 50 10             	mov    0x10(%eax),%edx
81005142:	8b 45 0c             	mov    0xc(%ebp),%eax
81005145:	8b 40 08             	mov    0x8(%eax),%eax
81005148:	39 c2                	cmp    %eax,%edx
8100514a:	0f 4c d0             	cmovl  %eax,%edx
8100514d:	8b 45 10             	mov    0x10(%ebp),%eax
81005150:	89 10                	mov    %edx,(%eax)
81005152:	8b 45 0c             	mov    0xc(%ebp),%eax
81005155:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81005159:	84 c0                	test   %al,%al
8100515b:	74 0d                	je     8100516a <_printf_common+0x34>
8100515d:	8b 45 10             	mov    0x10(%ebp),%eax
81005160:	8b 00                	mov    (%eax),%eax
81005162:	8d 50 01             	lea    0x1(%eax),%edx
81005165:	8b 45 10             	mov    0x10(%ebp),%eax
81005168:	89 10                	mov    %edx,(%eax)
8100516a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100516d:	8b 00                	mov    (%eax),%eax
8100516f:	83 e0 20             	and    $0x20,%eax
81005172:	85 c0                	test   %eax,%eax
81005174:	74 0d                	je     81005183 <_printf_common+0x4d>
81005176:	8b 45 10             	mov    0x10(%ebp),%eax
81005179:	8b 00                	mov    (%eax),%eax
8100517b:	8d 50 02             	lea    0x2(%eax),%edx
8100517e:	8b 45 10             	mov    0x10(%ebp),%eax
81005181:	89 10                	mov    %edx,(%eax)
81005183:	8b 45 0c             	mov    0xc(%ebp),%eax
81005186:	8b 00                	mov    (%eax),%eax
81005188:	83 e0 06             	and    $0x6,%eax
8100518b:	85 c0                	test   %eax,%eax
8100518d:	75 41                	jne    810051d0 <_printf_common+0x9a>
8100518f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81005196:	eb 24                	jmp    810051bc <_printf_common+0x86>
81005198:	8b 45 0c             	mov    0xc(%ebp),%eax
8100519b:	83 c0 19             	add    $0x19,%eax
8100519e:	6a 01                	push   $0x1
810051a0:	50                   	push   %eax
810051a1:	ff 75 14             	pushl  0x14(%ebp)
810051a4:	ff 75 08             	pushl  0x8(%ebp)
810051a7:	8b 45 18             	mov    0x18(%ebp),%eax
810051aa:	ff d0                	call   *%eax
810051ac:	83 c4 10             	add    $0x10,%esp
810051af:	83 f8 ff             	cmp    $0xffffffff,%eax
810051b2:	0f 84 0b 01 00 00    	je     810052c3 <_printf_common+0x18d>
810051b8:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810051bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810051bf:	8b 50 0c             	mov    0xc(%eax),%edx
810051c2:	8b 45 10             	mov    0x10(%ebp),%eax
810051c5:	8b 08                	mov    (%eax),%ecx
810051c7:	89 d0                	mov    %edx,%eax
810051c9:	29 c8                	sub    %ecx,%eax
810051cb:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810051ce:	7c c8                	jl     81005198 <_printf_common+0x62>
810051d0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810051d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810051da:	0f b6 40 43          	movzbl 0x43(%eax),%eax
810051de:	84 c0                	test   %al,%al
810051e0:	74 04                	je     810051e6 <_printf_common+0xb0>
810051e2:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810051e6:	8b 45 0c             	mov    0xc(%ebp),%eax
810051e9:	8b 00                	mov    (%eax),%eax
810051eb:	83 e0 20             	and    $0x20,%eax
810051ee:	85 c0                	test   %eax,%eax
810051f0:	74 28                	je     8100521a <_printf_common+0xe4>
810051f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810051f5:	8d 50 01             	lea    0x1(%eax),%edx
810051f8:	89 55 f4             	mov    %edx,-0xc(%ebp)
810051fb:	8b 55 0c             	mov    0xc(%ebp),%edx
810051fe:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81005203:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005206:	8d 50 01             	lea    0x1(%eax),%edx
81005209:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100520c:	8b 55 0c             	mov    0xc(%ebp),%edx
8100520f:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81005213:	8b 55 0c             	mov    0xc(%ebp),%edx
81005216:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
8100521a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100521d:	8b 55 0c             	mov    0xc(%ebp),%edx
81005220:	83 c2 43             	add    $0x43,%edx
81005223:	50                   	push   %eax
81005224:	52                   	push   %edx
81005225:	ff 75 14             	pushl  0x14(%ebp)
81005228:	ff 75 08             	pushl  0x8(%ebp)
8100522b:	8b 45 18             	mov    0x18(%ebp),%eax
8100522e:	ff d0                	call   *%eax
81005230:	83 c4 10             	add    $0x10,%esp
81005233:	83 f8 ff             	cmp    $0xffffffff,%eax
81005236:	0f 84 8a 00 00 00    	je     810052c6 <_printf_common+0x190>
8100523c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100523f:	8b 50 0c             	mov    0xc(%eax),%edx
81005242:	8b 45 10             	mov    0x10(%ebp),%eax
81005245:	8b 08                	mov    (%eax),%ecx
81005247:	89 d0                	mov    %edx,%eax
81005249:	29 c8                	sub    %ecx,%eax
8100524b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100524e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005251:	8b 00                	mov    (%eax),%eax
81005253:	83 e0 06             	and    $0x6,%eax
81005256:	83 f8 04             	cmp    $0x4,%eax
81005259:	75 06                	jne    81005261 <_printf_common+0x12b>
8100525b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100525f:	79 07                	jns    81005268 <_printf_common+0x132>
81005261:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81005268:	8b 45 0c             	mov    0xc(%ebp),%eax
8100526b:	8b 50 08             	mov    0x8(%eax),%edx
8100526e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005271:	8b 40 10             	mov    0x10(%eax),%eax
81005274:	39 c2                	cmp    %eax,%edx
81005276:	7e 13                	jle    8100528b <_printf_common+0x155>
81005278:	8b 45 0c             	mov    0xc(%ebp),%eax
8100527b:	8b 50 08             	mov    0x8(%eax),%edx
8100527e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005281:	8b 48 10             	mov    0x10(%eax),%ecx
81005284:	89 d0                	mov    %edx,%eax
81005286:	29 c8                	sub    %ecx,%eax
81005288:	01 45 f4             	add    %eax,-0xc(%ebp)
8100528b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81005292:	eb 20                	jmp    810052b4 <_printf_common+0x17e>
81005294:	8b 45 0c             	mov    0xc(%ebp),%eax
81005297:	83 c0 1a             	add    $0x1a,%eax
8100529a:	6a 01                	push   $0x1
8100529c:	50                   	push   %eax
8100529d:	ff 75 14             	pushl  0x14(%ebp)
810052a0:	ff 75 08             	pushl  0x8(%ebp)
810052a3:	8b 45 18             	mov    0x18(%ebp),%eax
810052a6:	ff d0                	call   *%eax
810052a8:	83 c4 10             	add    $0x10,%esp
810052ab:	83 f8 ff             	cmp    $0xffffffff,%eax
810052ae:	74 19                	je     810052c9 <_printf_common+0x193>
810052b0:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
810052b4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810052b7:	3b 45 f4             	cmp    -0xc(%ebp),%eax
810052ba:	7c d8                	jl     81005294 <_printf_common+0x15e>
810052bc:	b8 00 00 00 00       	mov    $0x0,%eax
810052c1:	eb 0c                	jmp    810052cf <_printf_common+0x199>
810052c3:	90                   	nop
810052c4:	eb 04                	jmp    810052ca <_printf_common+0x194>
810052c6:	90                   	nop
810052c7:	eb 01                	jmp    810052ca <_printf_common+0x194>
810052c9:	90                   	nop
810052ca:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810052cf:	c9                   	leave  
810052d0:	c3                   	ret    

810052d1 <_printf_i>:
810052d1:	55                   	push   %ebp
810052d2:	89 e5                	mov    %esp,%ebp
810052d4:	53                   	push   %ebx
810052d5:	83 ec 24             	sub    $0x24,%esp
810052d8:	8b 45 0c             	mov    0xc(%ebp),%eax
810052db:	83 c0 1b             	add    $0x1b,%eax
810052de:	83 c0 28             	add    $0x28,%eax
810052e1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810052e4:	c7 45 e8 9c 80 00 81 	movl   $0x8100809c,-0x18(%ebp)
810052eb:	8b 45 0c             	mov    0xc(%ebp),%eax
810052ee:	0f b6 40 18          	movzbl 0x18(%eax),%eax
810052f2:	0f be c0             	movsbl %al,%eax
810052f5:	85 c0                	test   %eax,%eax
810052f7:	0f 84 00 03 00 00    	je     810055fd <_printf_i+0x32c>
810052fd:	85 c0                	test   %eax,%eax
810052ff:	0f 88 52 03 00 00    	js     81005657 <_printf_i+0x386>
81005305:	83 f8 78             	cmp    $0x78,%eax
81005308:	0f 8f 49 03 00 00    	jg     81005657 <_printf_i+0x386>
8100530e:	83 f8 58             	cmp    $0x58,%eax
81005311:	0f 8c 40 03 00 00    	jl     81005657 <_printf_i+0x386>
81005317:	83 e8 58             	sub    $0x58,%eax
8100531a:	83 f8 20             	cmp    $0x20,%eax
8100531d:	0f 87 34 03 00 00    	ja     81005657 <_printf_i+0x386>
81005323:	8b 04 85 c0 80 00 81 	mov    -0x7eff7f40(,%eax,4),%eax
8100532a:	ff e0                	jmp    *%eax
8100532c:	8b 45 18             	mov    0x18(%ebp),%eax
8100532f:	8b 00                	mov    (%eax),%eax
81005331:	8d 48 04             	lea    0x4(%eax),%ecx
81005334:	8b 55 18             	mov    0x18(%ebp),%edx
81005337:	89 0a                	mov    %ecx,(%edx)
81005339:	8b 00                	mov    (%eax),%eax
8100533b:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100533f:	89 c2                	mov    %eax,%edx
81005341:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005344:	88 10                	mov    %dl,(%eax)
81005346:	8b 45 0c             	mov    0xc(%ebp),%eax
81005349:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81005350:	e9 1c 03 00 00       	jmp    81005671 <_printf_i+0x3a0>
81005355:	8b 45 0c             	mov    0xc(%ebp),%eax
81005358:	8b 00                	mov    (%eax),%eax
8100535a:	25 80 00 00 00       	and    $0x80,%eax
8100535f:	85 c0                	test   %eax,%eax
81005361:	74 11                	je     81005374 <_printf_i+0xa3>
81005363:	8b 45 18             	mov    0x18(%ebp),%eax
81005366:	8b 00                	mov    (%eax),%eax
81005368:	8d 48 04             	lea    0x4(%eax),%ecx
8100536b:	8b 55 18             	mov    0x18(%ebp),%edx
8100536e:	89 0a                	mov    %ecx,(%edx)
81005370:	8b 00                	mov    (%eax),%eax
81005372:	eb 2d                	jmp    810053a1 <_printf_i+0xd0>
81005374:	8b 45 0c             	mov    0xc(%ebp),%eax
81005377:	8b 00                	mov    (%eax),%eax
81005379:	83 e0 40             	and    $0x40,%eax
8100537c:	85 c0                	test   %eax,%eax
8100537e:	74 12                	je     81005392 <_printf_i+0xc1>
81005380:	8b 45 18             	mov    0x18(%ebp),%eax
81005383:	8b 00                	mov    (%eax),%eax
81005385:	8d 48 04             	lea    0x4(%eax),%ecx
81005388:	8b 55 18             	mov    0x18(%ebp),%edx
8100538b:	89 0a                	mov    %ecx,(%edx)
8100538d:	8b 00                	mov    (%eax),%eax
8100538f:	98                   	cwtl   
81005390:	eb 0f                	jmp    810053a1 <_printf_i+0xd0>
81005392:	8b 45 18             	mov    0x18(%ebp),%eax
81005395:	8b 00                	mov    (%eax),%eax
81005397:	8d 48 04             	lea    0x4(%eax),%ecx
8100539a:	8b 55 18             	mov    0x18(%ebp),%edx
8100539d:	89 0a                	mov    %ecx,(%edx)
8100539f:	8b 00                	mov    (%eax),%eax
810053a1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810053a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810053a7:	85 c0                	test   %eax,%eax
810053a9:	79 0a                	jns    810053b5 <_printf_i+0xe4>
810053ab:	f7 5d f4             	negl   -0xc(%ebp)
810053ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810053b1:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
810053b5:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
810053bc:	e9 28 01 00 00       	jmp    810054e9 <_printf_i+0x218>
810053c1:	8b 45 0c             	mov    0xc(%ebp),%eax
810053c4:	8b 00                	mov    (%eax),%eax
810053c6:	25 80 00 00 00       	and    $0x80,%eax
810053cb:	85 c0                	test   %eax,%eax
810053cd:	74 11                	je     810053e0 <_printf_i+0x10f>
810053cf:	8b 45 18             	mov    0x18(%ebp),%eax
810053d2:	8b 00                	mov    (%eax),%eax
810053d4:	8d 48 04             	lea    0x4(%eax),%ecx
810053d7:	8b 55 18             	mov    0x18(%ebp),%edx
810053da:	89 0a                	mov    %ecx,(%edx)
810053dc:	8b 00                	mov    (%eax),%eax
810053de:	eb 2f                	jmp    8100540f <_printf_i+0x13e>
810053e0:	8b 45 0c             	mov    0xc(%ebp),%eax
810053e3:	8b 00                	mov    (%eax),%eax
810053e5:	83 e0 40             	and    $0x40,%eax
810053e8:	85 c0                	test   %eax,%eax
810053ea:	74 14                	je     81005400 <_printf_i+0x12f>
810053ec:	8b 45 18             	mov    0x18(%ebp),%eax
810053ef:	8b 00                	mov    (%eax),%eax
810053f1:	8d 48 04             	lea    0x4(%eax),%ecx
810053f4:	8b 55 18             	mov    0x18(%ebp),%edx
810053f7:	89 0a                	mov    %ecx,(%edx)
810053f9:	8b 00                	mov    (%eax),%eax
810053fb:	0f b7 c0             	movzwl %ax,%eax
810053fe:	eb 0f                	jmp    8100540f <_printf_i+0x13e>
81005400:	8b 45 18             	mov    0x18(%ebp),%eax
81005403:	8b 00                	mov    (%eax),%eax
81005405:	8d 48 04             	lea    0x4(%eax),%ecx
81005408:	8b 55 18             	mov    0x18(%ebp),%edx
8100540b:	89 0a                	mov    %ecx,(%edx)
8100540d:	8b 00                	mov    (%eax),%eax
8100540f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005412:	8b 45 0c             	mov    0xc(%ebp),%eax
81005415:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81005419:	3c 6f                	cmp    $0x6f,%al
8100541b:	75 07                	jne    81005424 <_printf_i+0x153>
8100541d:	b8 08 00 00 00       	mov    $0x8,%eax
81005422:	eb 05                	jmp    81005429 <_printf_i+0x158>
81005424:	b8 0a 00 00 00       	mov    $0xa,%eax
81005429:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100542c:	e9 b1 00 00 00       	jmp    810054e2 <_printf_i+0x211>
81005431:	8b 45 0c             	mov    0xc(%ebp),%eax
81005434:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81005438:	eb 1d                	jmp    81005457 <_printf_i+0x186>
8100543a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100543d:	8b 00                	mov    (%eax),%eax
8100543f:	83 c8 20             	or     $0x20,%eax
81005442:	89 c2                	mov    %eax,%edx
81005444:	8b 45 0c             	mov    0xc(%ebp),%eax
81005447:	89 10                	mov    %edx,(%eax)
81005449:	8b 45 0c             	mov    0xc(%ebp),%eax
8100544c:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81005450:	c7 45 e8 ad 80 00 81 	movl   $0x810080ad,-0x18(%ebp)
81005457:	8b 45 0c             	mov    0xc(%ebp),%eax
8100545a:	8b 00                	mov    (%eax),%eax
8100545c:	25 80 00 00 00       	and    $0x80,%eax
81005461:	85 c0                	test   %eax,%eax
81005463:	74 11                	je     81005476 <_printf_i+0x1a5>
81005465:	8b 45 18             	mov    0x18(%ebp),%eax
81005468:	8b 00                	mov    (%eax),%eax
8100546a:	8d 48 04             	lea    0x4(%eax),%ecx
8100546d:	8b 55 18             	mov    0x18(%ebp),%edx
81005470:	89 0a                	mov    %ecx,(%edx)
81005472:	8b 00                	mov    (%eax),%eax
81005474:	eb 2f                	jmp    810054a5 <_printf_i+0x1d4>
81005476:	8b 45 0c             	mov    0xc(%ebp),%eax
81005479:	8b 00                	mov    (%eax),%eax
8100547b:	83 e0 40             	and    $0x40,%eax
8100547e:	85 c0                	test   %eax,%eax
81005480:	74 14                	je     81005496 <_printf_i+0x1c5>
81005482:	8b 45 18             	mov    0x18(%ebp),%eax
81005485:	8b 00                	mov    (%eax),%eax
81005487:	8d 48 04             	lea    0x4(%eax),%ecx
8100548a:	8b 55 18             	mov    0x18(%ebp),%edx
8100548d:	89 0a                	mov    %ecx,(%edx)
8100548f:	8b 00                	mov    (%eax),%eax
81005491:	0f b7 c0             	movzwl %ax,%eax
81005494:	eb 0f                	jmp    810054a5 <_printf_i+0x1d4>
81005496:	8b 45 18             	mov    0x18(%ebp),%eax
81005499:	8b 00                	mov    (%eax),%eax
8100549b:	8d 48 04             	lea    0x4(%eax),%ecx
8100549e:	8b 55 18             	mov    0x18(%ebp),%edx
810054a1:	89 0a                	mov    %ecx,(%edx)
810054a3:	8b 00                	mov    (%eax),%eax
810054a5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810054a8:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
810054af:	8b 45 0c             	mov    0xc(%ebp),%eax
810054b2:	8b 00                	mov    (%eax),%eax
810054b4:	83 e0 01             	and    $0x1,%eax
810054b7:	85 c0                	test   %eax,%eax
810054b9:	74 0f                	je     810054ca <_printf_i+0x1f9>
810054bb:	8b 45 0c             	mov    0xc(%ebp),%eax
810054be:	8b 00                	mov    (%eax),%eax
810054c0:	83 c8 20             	or     $0x20,%eax
810054c3:	89 c2                	mov    %eax,%edx
810054c5:	8b 45 0c             	mov    0xc(%ebp),%eax
810054c8:	89 10                	mov    %edx,(%eax)
810054ca:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810054ce:	75 11                	jne    810054e1 <_printf_i+0x210>
810054d0:	8b 45 0c             	mov    0xc(%ebp),%eax
810054d3:	8b 00                	mov    (%eax),%eax
810054d5:	83 e0 df             	and    $0xffffffdf,%eax
810054d8:	89 c2                	mov    %eax,%edx
810054da:	8b 45 0c             	mov    0xc(%ebp),%eax
810054dd:	89 10                	mov    %edx,(%eax)
810054df:	eb 01                	jmp    810054e2 <_printf_i+0x211>
810054e1:	90                   	nop
810054e2:	8b 45 0c             	mov    0xc(%ebp),%eax
810054e5:	c6 40 43 00          	movb   $0x0,0x43(%eax)
810054e9:	8b 45 0c             	mov    0xc(%ebp),%eax
810054ec:	8b 50 04             	mov    0x4(%eax),%edx
810054ef:	8b 45 0c             	mov    0xc(%ebp),%eax
810054f2:	89 50 08             	mov    %edx,0x8(%eax)
810054f5:	8b 45 0c             	mov    0xc(%ebp),%eax
810054f8:	8b 40 08             	mov    0x8(%eax),%eax
810054fb:	85 c0                	test   %eax,%eax
810054fd:	78 0f                	js     8100550e <_printf_i+0x23d>
810054ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81005502:	8b 00                	mov    (%eax),%eax
81005504:	83 e0 fb             	and    $0xfffffffb,%eax
81005507:	89 c2                	mov    %eax,%edx
81005509:	8b 45 0c             	mov    0xc(%ebp),%eax
8100550c:	89 10                	mov    %edx,(%eax)
8100550e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005512:	75 0a                	jne    8100551e <_printf_i+0x24d>
81005514:	8b 45 0c             	mov    0xc(%ebp),%eax
81005517:	8b 40 04             	mov    0x4(%eax),%eax
8100551a:	85 c0                	test   %eax,%eax
8100551c:	74 34                	je     81005552 <_printf_i+0x281>
8100551e:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81005521:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005524:	ba 00 00 00 00       	mov    $0x0,%edx
81005529:	f7 f1                	div    %ecx
8100552b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100552e:	01 d0                	add    %edx,%eax
81005530:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81005534:	0f b6 10             	movzbl (%eax),%edx
81005537:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100553a:	88 10                	mov    %dl,(%eax)
8100553c:	8b 5d f0             	mov    -0x10(%ebp),%ebx
8100553f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005542:	ba 00 00 00 00       	mov    $0x0,%edx
81005547:	f7 f3                	div    %ebx
81005549:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100554c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005550:	75 cc                	jne    8100551e <_printf_i+0x24d>
81005552:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81005556:	75 26                	jne    8100557e <_printf_i+0x2ad>
81005558:	8b 45 0c             	mov    0xc(%ebp),%eax
8100555b:	8b 00                	mov    (%eax),%eax
8100555d:	83 e0 01             	and    $0x1,%eax
81005560:	85 c0                	test   %eax,%eax
81005562:	74 1a                	je     8100557e <_printf_i+0x2ad>
81005564:	8b 45 0c             	mov    0xc(%ebp),%eax
81005567:	8b 50 04             	mov    0x4(%eax),%edx
8100556a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100556d:	8b 40 10             	mov    0x10(%eax),%eax
81005570:	39 c2                	cmp    %eax,%edx
81005572:	7f 0a                	jg     8100557e <_printf_i+0x2ad>
81005574:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81005578:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100557b:	c6 00 30             	movb   $0x30,(%eax)
8100557e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005581:	83 c0 1b             	add    $0x1b,%eax
81005584:	83 c0 28             	add    $0x28,%eax
81005587:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100558a:	89 c2                	mov    %eax,%edx
8100558c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100558f:	89 50 10             	mov    %edx,0x10(%eax)
81005592:	e9 e2 00 00 00       	jmp    81005679 <_printf_i+0x3a8>
81005597:	8b 45 0c             	mov    0xc(%ebp),%eax
8100559a:	8b 00                	mov    (%eax),%eax
8100559c:	25 80 00 00 00       	and    $0x80,%eax
810055a1:	85 c0                	test   %eax,%eax
810055a3:	74 19                	je     810055be <_printf_i+0x2ed>
810055a5:	8b 45 18             	mov    0x18(%ebp),%eax
810055a8:	8b 00                	mov    (%eax),%eax
810055aa:	8d 48 04             	lea    0x4(%eax),%ecx
810055ad:	8b 55 18             	mov    0x18(%ebp),%edx
810055b0:	89 0a                	mov    %ecx,(%edx)
810055b2:	8b 00                	mov    (%eax),%eax
810055b4:	8b 55 0c             	mov    0xc(%ebp),%edx
810055b7:	8b 52 14             	mov    0x14(%edx),%edx
810055ba:	89 10                	mov    %edx,(%eax)
810055bc:	eb 3f                	jmp    810055fd <_printf_i+0x32c>
810055be:	8b 45 0c             	mov    0xc(%ebp),%eax
810055c1:	8b 00                	mov    (%eax),%eax
810055c3:	83 e0 40             	and    $0x40,%eax
810055c6:	85 c0                	test   %eax,%eax
810055c8:	74 1c                	je     810055e6 <_printf_i+0x315>
810055ca:	8b 45 0c             	mov    0xc(%ebp),%eax
810055cd:	8b 58 14             	mov    0x14(%eax),%ebx
810055d0:	8b 45 18             	mov    0x18(%ebp),%eax
810055d3:	8b 00                	mov    (%eax),%eax
810055d5:	8d 48 04             	lea    0x4(%eax),%ecx
810055d8:	8b 55 18             	mov    0x18(%ebp),%edx
810055db:	89 0a                	mov    %ecx,(%edx)
810055dd:	8b 00                	mov    (%eax),%eax
810055df:	89 da                	mov    %ebx,%edx
810055e1:	66 89 10             	mov    %dx,(%eax)
810055e4:	eb 17                	jmp    810055fd <_printf_i+0x32c>
810055e6:	8b 45 18             	mov    0x18(%ebp),%eax
810055e9:	8b 00                	mov    (%eax),%eax
810055eb:	8d 48 04             	lea    0x4(%eax),%ecx
810055ee:	8b 55 18             	mov    0x18(%ebp),%edx
810055f1:	89 0a                	mov    %ecx,(%edx)
810055f3:	8b 00                	mov    (%eax),%eax
810055f5:	8b 55 0c             	mov    0xc(%ebp),%edx
810055f8:	8b 52 14             	mov    0x14(%edx),%edx
810055fb:	89 10                	mov    %edx,(%eax)
810055fd:	8b 45 0c             	mov    0xc(%ebp),%eax
81005600:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81005607:	eb 70                	jmp    81005679 <_printf_i+0x3a8>
81005609:	8b 45 18             	mov    0x18(%ebp),%eax
8100560c:	8b 00                	mov    (%eax),%eax
8100560e:	8d 48 04             	lea    0x4(%eax),%ecx
81005611:	8b 55 18             	mov    0x18(%ebp),%edx
81005614:	89 0a                	mov    %ecx,(%edx)
81005616:	8b 00                	mov    (%eax),%eax
81005618:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100561b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100561e:	8b 40 04             	mov    0x4(%eax),%eax
81005621:	83 ec 04             	sub    $0x4,%esp
81005624:	50                   	push   %eax
81005625:	6a 00                	push   $0x0
81005627:	ff 75 ec             	pushl  -0x14(%ebp)
8100562a:	e8 51 f3 ff ff       	call   81004980 <memchr>
8100562f:	83 c4 10             	add    $0x10,%esp
81005632:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005635:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81005639:	74 0e                	je     81005649 <_printf_i+0x378>
8100563b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100563e:	2b 45 ec             	sub    -0x14(%ebp),%eax
81005641:	89 c2                	mov    %eax,%edx
81005643:	8b 45 0c             	mov    0xc(%ebp),%eax
81005646:	89 50 04             	mov    %edx,0x4(%eax)
81005649:	8b 45 0c             	mov    0xc(%ebp),%eax
8100564c:	8b 50 04             	mov    0x4(%eax),%edx
8100564f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005652:	89 50 10             	mov    %edx,0x10(%eax)
81005655:	eb 1a                	jmp    81005671 <_printf_i+0x3a0>
81005657:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100565b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100565e:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81005662:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005665:	88 10                	mov    %dl,(%eax)
81005667:	8b 45 0c             	mov    0xc(%ebp),%eax
8100566a:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81005671:	8b 45 0c             	mov    0xc(%ebp),%eax
81005674:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81005678:	90                   	nop
81005679:	83 ec 0c             	sub    $0xc,%esp
8100567c:	ff 75 14             	pushl  0x14(%ebp)
8100567f:	ff 75 10             	pushl  0x10(%ebp)
81005682:	8d 45 d8             	lea    -0x28(%ebp),%eax
81005685:	50                   	push   %eax
81005686:	ff 75 0c             	pushl  0xc(%ebp)
81005689:	ff 75 08             	pushl  0x8(%ebp)
8100568c:	e8 a5 fa ff ff       	call   81005136 <_printf_common>
81005691:	83 c4 20             	add    $0x20,%esp
81005694:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005697:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
8100569b:	74 72                	je     8100570f <_printf_i+0x43e>
8100569d:	8b 45 0c             	mov    0xc(%ebp),%eax
810056a0:	8b 40 10             	mov    0x10(%eax),%eax
810056a3:	50                   	push   %eax
810056a4:	ff 75 ec             	pushl  -0x14(%ebp)
810056a7:	ff 75 10             	pushl  0x10(%ebp)
810056aa:	ff 75 08             	pushl  0x8(%ebp)
810056ad:	8b 45 14             	mov    0x14(%ebp),%eax
810056b0:	ff d0                	call   *%eax
810056b2:	83 c4 10             	add    $0x10,%esp
810056b5:	83 f8 ff             	cmp    $0xffffffff,%eax
810056b8:	74 58                	je     81005712 <_printf_i+0x441>
810056ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810056bd:	8b 00                	mov    (%eax),%eax
810056bf:	83 e0 02             	and    $0x2,%eax
810056c2:	85 c0                	test   %eax,%eax
810056c4:	74 39                	je     810056ff <_printf_i+0x42e>
810056c6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810056cd:	eb 20                	jmp    810056ef <_printf_i+0x41e>
810056cf:	8b 45 0c             	mov    0xc(%ebp),%eax
810056d2:	83 c0 19             	add    $0x19,%eax
810056d5:	6a 01                	push   $0x1
810056d7:	50                   	push   %eax
810056d8:	ff 75 10             	pushl  0x10(%ebp)
810056db:	ff 75 08             	pushl  0x8(%ebp)
810056de:	8b 45 14             	mov    0x14(%ebp),%eax
810056e1:	ff d0                	call   *%eax
810056e3:	83 c4 10             	add    $0x10,%esp
810056e6:	83 f8 ff             	cmp    $0xffffffff,%eax
810056e9:	74 2a                	je     81005715 <_printf_i+0x444>
810056eb:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810056ef:	8b 45 0c             	mov    0xc(%ebp),%eax
810056f2:	8b 40 0c             	mov    0xc(%eax),%eax
810056f5:	8b 55 d8             	mov    -0x28(%ebp),%edx
810056f8:	29 d0                	sub    %edx,%eax
810056fa:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810056fd:	7c d0                	jl     810056cf <_printf_i+0x3fe>
810056ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81005702:	8b 50 0c             	mov    0xc(%eax),%edx
81005705:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005708:	39 c2                	cmp    %eax,%edx
8100570a:	0f 4d c2             	cmovge %edx,%eax
8100570d:	eb 0c                	jmp    8100571b <_printf_i+0x44a>
8100570f:	90                   	nop
81005710:	eb 04                	jmp    81005716 <_printf_i+0x445>
81005712:	90                   	nop
81005713:	eb 01                	jmp    81005716 <_printf_i+0x445>
81005715:	90                   	nop
81005716:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100571b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100571e:	c9                   	leave  
8100571f:	c3                   	ret    

81005720 <_open_r>:
81005720:	55                   	push   %ebp
81005721:	89 e5                	mov    %esp,%ebp
81005723:	83 ec 18             	sub    $0x18,%esp
81005726:	c7 05 8c 92 00 81 00 	movl   $0x0,0x8100928c
8100572d:	00 00 00 
81005730:	83 ec 04             	sub    $0x4,%esp
81005733:	ff 75 14             	pushl  0x14(%ebp)
81005736:	ff 75 10             	pushl  0x10(%ebp)
81005739:	ff 75 0c             	pushl  0xc(%ebp)
8100573c:	e8 b7 b4 ff ff       	call   81000bf8 <open>
81005741:	83 c4 10             	add    $0x10,%esp
81005744:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005747:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100574b:	75 14                	jne    81005761 <_open_r+0x41>
8100574d:	a1 8c 92 00 81       	mov    0x8100928c,%eax
81005752:	85 c0                	test   %eax,%eax
81005754:	74 0b                	je     81005761 <_open_r+0x41>
81005756:	8b 15 8c 92 00 81    	mov    0x8100928c,%edx
8100575c:	8b 45 08             	mov    0x8(%ebp),%eax
8100575f:	89 10                	mov    %edx,(%eax)
81005761:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005764:	c9                   	leave  
81005765:	c3                   	ret    

81005766 <_iprintf_r>:
81005766:	55                   	push   %ebp
81005767:	89 e5                	mov    %esp,%ebp
81005769:	83 ec 18             	sub    $0x18,%esp
8100576c:	8d 45 10             	lea    0x10(%ebp),%eax
8100576f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005772:	8b 55 f0             	mov    -0x10(%ebp),%edx
81005775:	8b 45 08             	mov    0x8(%ebp),%eax
81005778:	8b 40 08             	mov    0x8(%eax),%eax
8100577b:	52                   	push   %edx
8100577c:	ff 75 0c             	pushl  0xc(%ebp)
8100577f:	50                   	push   %eax
81005780:	ff 75 08             	pushl  0x8(%ebp)
81005783:	e8 58 f6 ff ff       	call   81004de0 <_vfiprintf_r>
81005788:	83 c4 10             	add    $0x10,%esp
8100578b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100578e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005791:	c9                   	leave  
81005792:	c3                   	ret    

81005793 <iprintf>:
81005793:	55                   	push   %ebp
81005794:	89 e5                	mov    %esp,%ebp
81005796:	83 ec 18             	sub    $0x18,%esp
81005799:	a1 44 88 00 81       	mov    0x81008844,%eax
8100579e:	89 45 f4             	mov    %eax,-0xc(%ebp)
810057a1:	8d 45 0c             	lea    0xc(%ebp),%eax
810057a4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810057a7:	8b 55 ec             	mov    -0x14(%ebp),%edx
810057aa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810057ad:	8b 40 08             	mov    0x8(%eax),%eax
810057b0:	52                   	push   %edx
810057b1:	ff 75 08             	pushl  0x8(%ebp)
810057b4:	50                   	push   %eax
810057b5:	ff 75 f4             	pushl  -0xc(%ebp)
810057b8:	e8 23 f6 ff ff       	call   81004de0 <_vfiprintf_r>
810057bd:	83 c4 10             	add    $0x10,%esp
810057c0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810057c3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810057c6:	c9                   	leave  
810057c7:	c3                   	ret    

810057c8 <_puts_r>:
810057c8:	55                   	push   %ebp
810057c9:	89 e5                	mov    %esp,%ebp
810057cb:	83 ec 38             	sub    $0x38,%esp
810057ce:	83 ec 0c             	sub    $0xc,%esp
810057d1:	ff 75 0c             	pushl  0xc(%ebp)
810057d4:	e8 17 13 00 00       	call   81006af0 <strlen>
810057d9:	83 c4 10             	add    $0x10,%esp
810057dc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810057df:	8b 45 0c             	mov    0xc(%ebp),%eax
810057e2:	89 45 cc             	mov    %eax,-0x34(%ebp)
810057e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810057e8:	89 45 d0             	mov    %eax,-0x30(%ebp)
810057eb:	c7 45 d4 44 81 00 81 	movl   $0x81008144,-0x2c(%ebp)
810057f2:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
810057f9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810057fc:	83 c0 01             	add    $0x1,%eax
810057ff:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005802:	8d 45 cc             	lea    -0x34(%ebp),%eax
81005805:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005808:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
8100580f:	8b 45 08             	mov    0x8(%ebp),%eax
81005812:	8b 40 08             	mov    0x8(%eax),%eax
81005815:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005818:	8b 45 08             	mov    0x8(%ebp),%eax
8100581b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100581e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005822:	74 18                	je     8100583c <_puts_r+0x74>
81005824:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005827:	8b 40 38             	mov    0x38(%eax),%eax
8100582a:	85 c0                	test   %eax,%eax
8100582c:	75 0e                	jne    8100583c <_puts_r+0x74>
8100582e:	83 ec 0c             	sub    $0xc,%esp
81005831:	ff 75 ec             	pushl  -0x14(%ebp)
81005834:	e8 4d c0 ff ff       	call   81001886 <__sinit>
81005839:	83 c4 10             	add    $0x10,%esp
8100583c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100583f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005843:	98                   	cwtl   
81005844:	25 00 20 00 00       	and    $0x2000,%eax
81005849:	85 c0                	test   %eax,%eax
8100584b:	75 24                	jne    81005871 <_puts_r+0xa9>
8100584d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005850:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005854:	80 cc 20             	or     $0x20,%ah
81005857:	89 c2                	mov    %eax,%edx
81005859:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100585c:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005860:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005863:	8b 40 64             	mov    0x64(%eax),%eax
81005866:	80 e4 df             	and    $0xdf,%ah
81005869:	89 c2                	mov    %eax,%edx
8100586b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100586e:	89 50 64             	mov    %edx,0x64(%eax)
81005871:	83 ec 04             	sub    $0x4,%esp
81005874:	8d 45 dc             	lea    -0x24(%ebp),%eax
81005877:	50                   	push   %eax
81005878:	ff 75 f0             	pushl  -0x10(%ebp)
8100587b:	ff 75 08             	pushl  0x8(%ebp)
8100587e:	e8 45 d0 ff ff       	call   810028c8 <__sfvwrite_r>
81005883:	83 c4 10             	add    $0x10,%esp
81005886:	85 c0                	test   %eax,%eax
81005888:	74 07                	je     81005891 <_puts_r+0xc9>
8100588a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100588f:	eb 05                	jmp    81005896 <_puts_r+0xce>
81005891:	b8 0a 00 00 00       	mov    $0xa,%eax
81005896:	89 45 e8             	mov    %eax,-0x18(%ebp)
81005899:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100589c:	c9                   	leave  
8100589d:	c3                   	ret    

8100589e <puts>:
8100589e:	55                   	push   %ebp
8100589f:	89 e5                	mov    %esp,%ebp
810058a1:	83 ec 08             	sub    $0x8,%esp
810058a4:	a1 44 88 00 81       	mov    0x81008844,%eax
810058a9:	83 ec 08             	sub    $0x8,%esp
810058ac:	ff 75 08             	pushl  0x8(%ebp)
810058af:	50                   	push   %eax
810058b0:	e8 13 ff ff ff       	call   810057c8 <_puts_r>
810058b5:	83 c4 10             	add    $0x10,%esp
810058b8:	c9                   	leave  
810058b9:	c3                   	ret    

810058ba <_realloc_r>:
810058ba:	55                   	push   %ebp
810058bb:	89 e5                	mov    %esp,%ebp
810058bd:	83 ec 78             	sub    $0x78,%esp
810058c0:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810058c4:	75 16                	jne    810058dc <_realloc_r+0x22>
810058c6:	83 ec 08             	sub    $0x8,%esp
810058c9:	ff 75 10             	pushl  0x10(%ebp)
810058cc:	ff 75 08             	pushl  0x8(%ebp)
810058cf:	e8 7c e8 ff ff       	call   81004150 <_malloc_r>
810058d4:	83 c4 10             	add    $0x10,%esp
810058d7:	e9 b6 08 00 00       	jmp    81006192 <_realloc_r+0x8d8>
810058dc:	83 ec 0c             	sub    $0xc,%esp
810058df:	ff 75 08             	pushl  0x8(%ebp)
810058e2:	e8 de f2 ff ff       	call   81004bc5 <__malloc_lock>
810058e7:	83 c4 10             	add    $0x10,%esp
810058ea:	8b 45 0c             	mov    0xc(%ebp),%eax
810058ed:	83 e8 08             	sub    $0x8,%eax
810058f0:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810058f3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810058f6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810058f9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810058fc:	8b 40 04             	mov    0x4(%eax),%eax
810058ff:	83 e0 fc             	and    $0xfffffffc,%eax
81005902:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005905:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005908:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100590b:	8b 45 10             	mov    0x10(%ebp),%eax
8100590e:	83 c0 0b             	add    $0xb,%eax
81005911:	83 f8 16             	cmp    $0x16,%eax
81005914:	76 0b                	jbe    81005921 <_realloc_r+0x67>
81005916:	8b 45 10             	mov    0x10(%ebp),%eax
81005919:	83 c0 0b             	add    $0xb,%eax
8100591c:	83 e0 f8             	and    $0xfffffff8,%eax
8100591f:	eb 05                	jmp    81005926 <_realloc_r+0x6c>
81005921:	b8 10 00 00 00       	mov    $0x10,%eax
81005926:	89 45 bc             	mov    %eax,-0x44(%ebp)
81005929:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100592c:	85 c0                	test   %eax,%eax
8100592e:	78 08                	js     81005938 <_realloc_r+0x7e>
81005930:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005933:	3b 45 10             	cmp    0x10(%ebp),%eax
81005936:	73 13                	jae    8100594b <_realloc_r+0x91>
81005938:	8b 45 08             	mov    0x8(%ebp),%eax
8100593b:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81005941:	b8 00 00 00 00       	mov    $0x0,%eax
81005946:	e9 47 08 00 00       	jmp    81006192 <_realloc_r+0x8d8>
8100594b:	8b 55 c0             	mov    -0x40(%ebp),%edx
8100594e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005951:	39 c2                	cmp    %eax,%edx
81005953:	0f 8d 8b 07 00 00    	jge    810060e4 <_realloc_r+0x82a>
81005959:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100595c:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100595f:	01 d0                	add    %edx,%eax
81005961:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005964:	b8 60 88 00 81       	mov    $0x81008860,%eax
81005969:	8b 40 08             	mov    0x8(%eax),%eax
8100596c:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100596f:	74 1e                	je     8100598f <_realloc_r+0xd5>
81005971:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005974:	8b 40 04             	mov    0x4(%eax),%eax
81005977:	83 e0 fe             	and    $0xfffffffe,%eax
8100597a:	89 c2                	mov    %eax,%edx
8100597c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100597f:	01 d0                	add    %edx,%eax
81005981:	8b 40 04             	mov    0x4(%eax),%eax
81005984:	83 e0 01             	and    $0x1,%eax
81005987:	85 c0                	test   %eax,%eax
81005989:	0f 85 ca 00 00 00    	jne    81005a59 <_realloc_r+0x19f>
8100598f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005992:	8b 40 04             	mov    0x4(%eax),%eax
81005995:	83 e0 fc             	and    $0xfffffffc,%eax
81005998:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100599b:	b8 60 88 00 81       	mov    $0x81008860,%eax
810059a0:	8b 40 08             	mov    0x8(%eax),%eax
810059a3:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810059a6:	75 71                	jne    81005a19 <_realloc_r+0x15f>
810059a8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810059ab:	8b 45 f0             	mov    -0x10(%ebp),%eax
810059ae:	01 d0                	add    %edx,%eax
810059b0:	89 c2                	mov    %eax,%edx
810059b2:	8b 45 bc             	mov    -0x44(%ebp),%eax
810059b5:	83 c0 10             	add    $0x10,%eax
810059b8:	39 c2                	cmp    %eax,%edx
810059ba:	0f 8c a9 00 00 00    	jl     81005a69 <_realloc_r+0x1af>
810059c0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810059c3:	01 45 f0             	add    %eax,-0x10(%ebp)
810059c6:	ba 60 88 00 81       	mov    $0x81008860,%edx
810059cb:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
810059ce:	8b 45 bc             	mov    -0x44(%ebp),%eax
810059d1:	01 c8                	add    %ecx,%eax
810059d3:	89 42 08             	mov    %eax,0x8(%edx)
810059d6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810059d9:	2b 45 bc             	sub    -0x44(%ebp),%eax
810059dc:	89 c2                	mov    %eax,%edx
810059de:	b8 60 88 00 81       	mov    $0x81008860,%eax
810059e3:	8b 40 08             	mov    0x8(%eax),%eax
810059e6:	83 ca 01             	or     $0x1,%edx
810059e9:	89 50 04             	mov    %edx,0x4(%eax)
810059ec:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810059ef:	8b 40 04             	mov    0x4(%eax),%eax
810059f2:	83 e0 01             	and    $0x1,%eax
810059f5:	0b 45 bc             	or     -0x44(%ebp),%eax
810059f8:	89 c2                	mov    %eax,%edx
810059fa:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810059fd:	89 50 04             	mov    %edx,0x4(%eax)
81005a00:	83 ec 0c             	sub    $0xc,%esp
81005a03:	ff 75 08             	pushl  0x8(%ebp)
81005a06:	e8 c0 f1 ff ff       	call   81004bcb <__malloc_unlock>
81005a0b:	83 c4 10             	add    $0x10,%esp
81005a0e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a11:	83 c0 08             	add    $0x8,%eax
81005a14:	e9 79 07 00 00       	jmp    81006192 <_realloc_r+0x8d8>
81005a19:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005a1c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a1f:	01 d0                	add    %edx,%eax
81005a21:	89 c2                	mov    %eax,%edx
81005a23:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005a26:	39 c2                	cmp    %eax,%edx
81005a28:	7c 3f                	jl     81005a69 <_realloc_r+0x1af>
81005a2a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005a2d:	8b 40 0c             	mov    0xc(%eax),%eax
81005a30:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005a33:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005a36:	8b 40 08             	mov    0x8(%eax),%eax
81005a39:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005a3c:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005a3f:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005a42:	89 50 0c             	mov    %edx,0xc(%eax)
81005a45:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005a48:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005a4b:	89 50 08             	mov    %edx,0x8(%eax)
81005a4e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005a51:	01 45 f0             	add    %eax,-0x10(%ebp)
81005a54:	e9 8c 06 00 00       	jmp    810060e5 <_realloc_r+0x82b>
81005a59:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81005a60:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81005a67:	eb 01                	jmp    81005a6a <_realloc_r+0x1b0>
81005a69:	90                   	nop
81005a6a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a6d:	8b 40 04             	mov    0x4(%eax),%eax
81005a70:	83 e0 01             	and    $0x1,%eax
81005a73:	85 c0                	test   %eax,%eax
81005a75:	0f 85 d6 04 00 00    	jne    81005f51 <_realloc_r+0x697>
81005a7b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a7e:	8b 00                	mov    (%eax),%eax
81005a80:	f7 d8                	neg    %eax
81005a82:	89 c2                	mov    %eax,%edx
81005a84:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a87:	01 d0                	add    %edx,%eax
81005a89:	89 45 b0             	mov    %eax,-0x50(%ebp)
81005a8c:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005a8f:	8b 40 04             	mov    0x4(%eax),%eax
81005a92:	83 e0 fc             	and    $0xfffffffc,%eax
81005a95:	89 45 ac             	mov    %eax,-0x54(%ebp)
81005a98:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005a9c:	0f 84 4a 03 00 00    	je     81005dec <_realloc_r+0x532>
81005aa2:	b8 60 88 00 81       	mov    $0x81008860,%eax
81005aa7:	8b 40 08             	mov    0x8(%eax),%eax
81005aaa:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005aad:	0f 85 b0 01 00 00    	jne    81005c63 <_realloc_r+0x3a9>
81005ab3:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005ab6:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005ab9:	01 c2                	add    %eax,%edx
81005abb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005abe:	01 d0                	add    %edx,%eax
81005ac0:	89 c2                	mov    %eax,%edx
81005ac2:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005ac5:	83 c0 10             	add    $0x10,%eax
81005ac8:	39 c2                	cmp    %eax,%edx
81005aca:	0f 8c 1c 03 00 00    	jl     81005dec <_realloc_r+0x532>
81005ad0:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005ad3:	8b 40 0c             	mov    0xc(%eax),%eax
81005ad6:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005ad9:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005adc:	8b 40 08             	mov    0x8(%eax),%eax
81005adf:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005ae2:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005ae5:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005ae8:	89 50 0c             	mov    %edx,0xc(%eax)
81005aeb:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005aee:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005af1:	89 50 08             	mov    %edx,0x8(%eax)
81005af4:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005af7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005afa:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005afd:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005b00:	01 d0                	add    %edx,%eax
81005b02:	01 45 f0             	add    %eax,-0x10(%ebp)
81005b05:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b08:	83 c0 08             	add    $0x8,%eax
81005b0b:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005b0e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005b11:	83 e8 04             	sub    $0x4,%eax
81005b14:	89 45 a0             	mov    %eax,-0x60(%ebp)
81005b17:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81005b1b:	0f 87 de 00 00 00    	ja     81005bff <_realloc_r+0x345>
81005b21:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b24:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005b27:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005b2a:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005b2d:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81005b31:	0f 86 90 00 00 00    	jbe    81005bc7 <_realloc_r+0x30d>
81005b37:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005b3a:	8d 42 04             	lea    0x4(%edx),%eax
81005b3d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005b40:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005b43:	8d 48 04             	lea    0x4(%eax),%ecx
81005b46:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005b49:	8b 12                	mov    (%edx),%edx
81005b4b:	89 10                	mov    %edx,(%eax)
81005b4d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005b50:	8d 42 04             	lea    0x4(%edx),%eax
81005b53:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005b56:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005b59:	8d 48 04             	lea    0x4(%eax),%ecx
81005b5c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005b5f:	8b 12                	mov    (%edx),%edx
81005b61:	89 10                	mov    %edx,(%eax)
81005b63:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81005b67:	76 5e                	jbe    81005bc7 <_realloc_r+0x30d>
81005b69:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005b6c:	8d 42 04             	lea    0x4(%edx),%eax
81005b6f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005b72:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005b75:	8d 48 04             	lea    0x4(%eax),%ecx
81005b78:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005b7b:	8b 12                	mov    (%edx),%edx
81005b7d:	89 10                	mov    %edx,(%eax)
81005b7f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005b82:	8d 42 04             	lea    0x4(%edx),%eax
81005b85:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005b88:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005b8b:	8d 48 04             	lea    0x4(%eax),%ecx
81005b8e:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005b91:	8b 12                	mov    (%edx),%edx
81005b93:	89 10                	mov    %edx,(%eax)
81005b95:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81005b99:	76 2c                	jbe    81005bc7 <_realloc_r+0x30d>
81005b9b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005b9e:	8d 42 04             	lea    0x4(%edx),%eax
81005ba1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005ba4:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005ba7:	8d 48 04             	lea    0x4(%eax),%ecx
81005baa:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005bad:	8b 12                	mov    (%edx),%edx
81005baf:	89 10                	mov    %edx,(%eax)
81005bb1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005bb4:	8d 42 04             	lea    0x4(%edx),%eax
81005bb7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005bba:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005bbd:	8d 48 04             	lea    0x4(%eax),%ecx
81005bc0:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005bc3:	8b 12                	mov    (%edx),%edx
81005bc5:	89 10                	mov    %edx,(%eax)
81005bc7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005bca:	8d 42 04             	lea    0x4(%edx),%eax
81005bcd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005bd0:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005bd3:	8d 48 04             	lea    0x4(%eax),%ecx
81005bd6:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005bd9:	8b 12                	mov    (%edx),%edx
81005bdb:	89 10                	mov    %edx,(%eax)
81005bdd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005be0:	8d 42 04             	lea    0x4(%edx),%eax
81005be3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005be6:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005be9:	8d 48 04             	lea    0x4(%eax),%ecx
81005bec:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005bef:	8b 12                	mov    (%edx),%edx
81005bf1:	89 10                	mov    %edx,(%eax)
81005bf3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005bf6:	8b 10                	mov    (%eax),%edx
81005bf8:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005bfb:	89 10                	mov    %edx,(%eax)
81005bfd:	eb 14                	jmp    81005c13 <_realloc_r+0x359>
81005bff:	83 ec 04             	sub    $0x4,%esp
81005c02:	ff 75 a0             	pushl  -0x60(%ebp)
81005c05:	ff 75 0c             	pushl  0xc(%ebp)
81005c08:	ff 75 a8             	pushl  -0x58(%ebp)
81005c0b:	e8 a0 ee ff ff       	call   81004ab0 <memmove>
81005c10:	83 c4 10             	add    $0x10,%esp
81005c13:	ba 60 88 00 81       	mov    $0x81008860,%edx
81005c18:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81005c1b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005c1e:	01 c8                	add    %ecx,%eax
81005c20:	89 42 08             	mov    %eax,0x8(%edx)
81005c23:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005c26:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005c29:	89 c2                	mov    %eax,%edx
81005c2b:	b8 60 88 00 81       	mov    $0x81008860,%eax
81005c30:	8b 40 08             	mov    0x8(%eax),%eax
81005c33:	83 ca 01             	or     $0x1,%edx
81005c36:	89 50 04             	mov    %edx,0x4(%eax)
81005c39:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005c3c:	8b 40 04             	mov    0x4(%eax),%eax
81005c3f:	83 e0 01             	and    $0x1,%eax
81005c42:	0b 45 bc             	or     -0x44(%ebp),%eax
81005c45:	89 c2                	mov    %eax,%edx
81005c47:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005c4a:	89 50 04             	mov    %edx,0x4(%eax)
81005c4d:	83 ec 0c             	sub    $0xc,%esp
81005c50:	ff 75 08             	pushl  0x8(%ebp)
81005c53:	e8 73 ef ff ff       	call   81004bcb <__malloc_unlock>
81005c58:	83 c4 10             	add    $0x10,%esp
81005c5b:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005c5e:	e9 2f 05 00 00       	jmp    81006192 <_realloc_r+0x8d8>
81005c63:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005c66:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005c69:	01 c2                	add    %eax,%edx
81005c6b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005c6e:	01 d0                	add    %edx,%eax
81005c70:	89 c2                	mov    %eax,%edx
81005c72:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005c75:	39 c2                	cmp    %eax,%edx
81005c77:	0f 8c 6f 01 00 00    	jl     81005dec <_realloc_r+0x532>
81005c7d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005c80:	8b 40 0c             	mov    0xc(%eax),%eax
81005c83:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005c86:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005c89:	8b 40 08             	mov    0x8(%eax),%eax
81005c8c:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005c8f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005c92:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005c95:	89 50 0c             	mov    %edx,0xc(%eax)
81005c98:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005c9b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005c9e:	89 50 08             	mov    %edx,0x8(%eax)
81005ca1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005ca4:	8b 40 0c             	mov    0xc(%eax),%eax
81005ca7:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005caa:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005cad:	8b 40 08             	mov    0x8(%eax),%eax
81005cb0:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005cb3:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005cb6:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005cb9:	89 50 0c             	mov    %edx,0xc(%eax)
81005cbc:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005cbf:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005cc2:	89 50 08             	mov    %edx,0x8(%eax)
81005cc5:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005cc8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005ccb:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005cce:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005cd1:	01 d0                	add    %edx,%eax
81005cd3:	01 45 f0             	add    %eax,-0x10(%ebp)
81005cd6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005cd9:	83 c0 08             	add    $0x8,%eax
81005cdc:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005cdf:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005ce2:	83 e8 04             	sub    $0x4,%eax
81005ce5:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81005ce8:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81005cec:	0f 87 e1 00 00 00    	ja     81005dd3 <_realloc_r+0x519>
81005cf2:	8b 45 0c             	mov    0xc(%ebp),%eax
81005cf5:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005cf8:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005cfb:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005cfe:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81005d02:	0f 86 90 00 00 00    	jbe    81005d98 <_realloc_r+0x4de>
81005d08:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d0b:	8d 42 04             	lea    0x4(%edx),%eax
81005d0e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d11:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d14:	8d 48 04             	lea    0x4(%eax),%ecx
81005d17:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005d1a:	8b 12                	mov    (%edx),%edx
81005d1c:	89 10                	mov    %edx,(%eax)
81005d1e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d21:	8d 42 04             	lea    0x4(%edx),%eax
81005d24:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d27:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d2a:	8d 48 04             	lea    0x4(%eax),%ecx
81005d2d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005d30:	8b 12                	mov    (%edx),%edx
81005d32:	89 10                	mov    %edx,(%eax)
81005d34:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81005d38:	76 5e                	jbe    81005d98 <_realloc_r+0x4de>
81005d3a:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d3d:	8d 42 04             	lea    0x4(%edx),%eax
81005d40:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d43:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d46:	8d 48 04             	lea    0x4(%eax),%ecx
81005d49:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005d4c:	8b 12                	mov    (%edx),%edx
81005d4e:	89 10                	mov    %edx,(%eax)
81005d50:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d53:	8d 42 04             	lea    0x4(%edx),%eax
81005d56:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d59:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d5c:	8d 48 04             	lea    0x4(%eax),%ecx
81005d5f:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005d62:	8b 12                	mov    (%edx),%edx
81005d64:	89 10                	mov    %edx,(%eax)
81005d66:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81005d6a:	76 2c                	jbe    81005d98 <_realloc_r+0x4de>
81005d6c:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d6f:	8d 42 04             	lea    0x4(%edx),%eax
81005d72:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d75:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d78:	8d 48 04             	lea    0x4(%eax),%ecx
81005d7b:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005d7e:	8b 12                	mov    (%edx),%edx
81005d80:	89 10                	mov    %edx,(%eax)
81005d82:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d85:	8d 42 04             	lea    0x4(%edx),%eax
81005d88:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d8b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d8e:	8d 48 04             	lea    0x4(%eax),%ecx
81005d91:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005d94:	8b 12                	mov    (%edx),%edx
81005d96:	89 10                	mov    %edx,(%eax)
81005d98:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d9b:	8d 42 04             	lea    0x4(%edx),%eax
81005d9e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005da1:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005da4:	8d 48 04             	lea    0x4(%eax),%ecx
81005da7:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005daa:	8b 12                	mov    (%edx),%edx
81005dac:	89 10                	mov    %edx,(%eax)
81005dae:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005db1:	8d 42 04             	lea    0x4(%edx),%eax
81005db4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005db7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005dba:	8d 48 04             	lea    0x4(%eax),%ecx
81005dbd:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005dc0:	8b 12                	mov    (%edx),%edx
81005dc2:	89 10                	mov    %edx,(%eax)
81005dc4:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005dc7:	8b 10                	mov    (%eax),%edx
81005dc9:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005dcc:	89 10                	mov    %edx,(%eax)
81005dce:	e9 12 03 00 00       	jmp    810060e5 <_realloc_r+0x82b>
81005dd3:	83 ec 04             	sub    $0x4,%esp
81005dd6:	ff 75 a4             	pushl  -0x5c(%ebp)
81005dd9:	ff 75 0c             	pushl  0xc(%ebp)
81005ddc:	ff 75 a8             	pushl  -0x58(%ebp)
81005ddf:	e8 cc ec ff ff       	call   81004ab0 <memmove>
81005de4:	83 c4 10             	add    $0x10,%esp
81005de7:	e9 f9 02 00 00       	jmp    810060e5 <_realloc_r+0x82b>
81005dec:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81005df0:	0f 84 5b 01 00 00    	je     81005f51 <_realloc_r+0x697>
81005df6:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005df9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005dfc:	01 d0                	add    %edx,%eax
81005dfe:	89 c2                	mov    %eax,%edx
81005e00:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005e03:	39 c2                	cmp    %eax,%edx
81005e05:	0f 8c 46 01 00 00    	jl     81005f51 <_realloc_r+0x697>
81005e0b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e0e:	8b 40 0c             	mov    0xc(%eax),%eax
81005e11:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005e14:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e17:	8b 40 08             	mov    0x8(%eax),%eax
81005e1a:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005e1d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005e20:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005e23:	89 50 0c             	mov    %edx,0xc(%eax)
81005e26:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005e29:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005e2c:	89 50 08             	mov    %edx,0x8(%eax)
81005e2f:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e32:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005e35:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005e38:	01 45 f0             	add    %eax,-0x10(%ebp)
81005e3b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005e3e:	83 c0 08             	add    $0x8,%eax
81005e41:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005e44:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005e47:	83 e8 04             	sub    $0x4,%eax
81005e4a:	89 45 9c             	mov    %eax,-0x64(%ebp)
81005e4d:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81005e51:	0f 87 e1 00 00 00    	ja     81005f38 <_realloc_r+0x67e>
81005e57:	8b 45 0c             	mov    0xc(%ebp),%eax
81005e5a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005e5d:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005e60:	89 45 d0             	mov    %eax,-0x30(%ebp)
81005e63:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81005e67:	0f 86 90 00 00 00    	jbe    81005efd <_realloc_r+0x643>
81005e6d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005e70:	8d 42 04             	lea    0x4(%edx),%eax
81005e73:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005e76:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005e79:	8d 48 04             	lea    0x4(%eax),%ecx
81005e7c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005e7f:	8b 12                	mov    (%edx),%edx
81005e81:	89 10                	mov    %edx,(%eax)
81005e83:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005e86:	8d 42 04             	lea    0x4(%edx),%eax
81005e89:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005e8c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005e8f:	8d 48 04             	lea    0x4(%eax),%ecx
81005e92:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005e95:	8b 12                	mov    (%edx),%edx
81005e97:	89 10                	mov    %edx,(%eax)
81005e99:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81005e9d:	76 5e                	jbe    81005efd <_realloc_r+0x643>
81005e9f:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005ea2:	8d 42 04             	lea    0x4(%edx),%eax
81005ea5:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005ea8:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005eab:	8d 48 04             	lea    0x4(%eax),%ecx
81005eae:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005eb1:	8b 12                	mov    (%edx),%edx
81005eb3:	89 10                	mov    %edx,(%eax)
81005eb5:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005eb8:	8d 42 04             	lea    0x4(%edx),%eax
81005ebb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005ebe:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005ec1:	8d 48 04             	lea    0x4(%eax),%ecx
81005ec4:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005ec7:	8b 12                	mov    (%edx),%edx
81005ec9:	89 10                	mov    %edx,(%eax)
81005ecb:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81005ecf:	76 2c                	jbe    81005efd <_realloc_r+0x643>
81005ed1:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005ed4:	8d 42 04             	lea    0x4(%edx),%eax
81005ed7:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005eda:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005edd:	8d 48 04             	lea    0x4(%eax),%ecx
81005ee0:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005ee3:	8b 12                	mov    (%edx),%edx
81005ee5:	89 10                	mov    %edx,(%eax)
81005ee7:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005eea:	8d 42 04             	lea    0x4(%edx),%eax
81005eed:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005ef0:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005ef3:	8d 48 04             	lea    0x4(%eax),%ecx
81005ef6:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005ef9:	8b 12                	mov    (%edx),%edx
81005efb:	89 10                	mov    %edx,(%eax)
81005efd:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f00:	8d 42 04             	lea    0x4(%edx),%eax
81005f03:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f06:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f09:	8d 48 04             	lea    0x4(%eax),%ecx
81005f0c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f0f:	8b 12                	mov    (%edx),%edx
81005f11:	89 10                	mov    %edx,(%eax)
81005f13:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f16:	8d 42 04             	lea    0x4(%edx),%eax
81005f19:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f1c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f1f:	8d 48 04             	lea    0x4(%eax),%ecx
81005f22:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f25:	8b 12                	mov    (%edx),%edx
81005f27:	89 10                	mov    %edx,(%eax)
81005f29:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81005f2c:	8b 10                	mov    (%eax),%edx
81005f2e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f31:	89 10                	mov    %edx,(%eax)
81005f33:	e9 ad 01 00 00       	jmp    810060e5 <_realloc_r+0x82b>
81005f38:	83 ec 04             	sub    $0x4,%esp
81005f3b:	ff 75 9c             	pushl  -0x64(%ebp)
81005f3e:	ff 75 0c             	pushl  0xc(%ebp)
81005f41:	ff 75 a8             	pushl  -0x58(%ebp)
81005f44:	e8 67 eb ff ff       	call   81004ab0 <memmove>
81005f49:	83 c4 10             	add    $0x10,%esp
81005f4c:	e9 94 01 00 00       	jmp    810060e5 <_realloc_r+0x82b>
81005f51:	83 ec 08             	sub    $0x8,%esp
81005f54:	ff 75 10             	pushl  0x10(%ebp)
81005f57:	ff 75 08             	pushl  0x8(%ebp)
81005f5a:	e8 f1 e1 ff ff       	call   81004150 <_malloc_r>
81005f5f:	83 c4 10             	add    $0x10,%esp
81005f62:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005f65:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81005f69:	75 18                	jne    81005f83 <_realloc_r+0x6c9>
81005f6b:	83 ec 0c             	sub    $0xc,%esp
81005f6e:	ff 75 08             	pushl  0x8(%ebp)
81005f71:	e8 55 ec ff ff       	call   81004bcb <__malloc_unlock>
81005f76:	83 c4 10             	add    $0x10,%esp
81005f79:	b8 00 00 00 00       	mov    $0x0,%eax
81005f7e:	e9 0f 02 00 00       	jmp    81006192 <_realloc_r+0x8d8>
81005f83:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005f86:	83 e8 08             	sub    $0x8,%eax
81005f89:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005f8c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005f8f:	8b 40 04             	mov    0x4(%eax),%eax
81005f92:	83 e0 fe             	and    $0xfffffffe,%eax
81005f95:	89 c2                	mov    %eax,%edx
81005f97:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005f9a:	01 d0                	add    %edx,%eax
81005f9c:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81005f9f:	75 17                	jne    81005fb8 <_realloc_r+0x6fe>
81005fa1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005fa4:	8b 40 04             	mov    0x4(%eax),%eax
81005fa7:	83 e0 fc             	and    $0xfffffffc,%eax
81005faa:	01 45 f0             	add    %eax,-0x10(%ebp)
81005fad:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005fb0:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005fb3:	e9 2d 01 00 00       	jmp    810060e5 <_realloc_r+0x82b>
81005fb8:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005fbb:	83 e8 04             	sub    $0x4,%eax
81005fbe:	89 45 98             	mov    %eax,-0x68(%ebp)
81005fc1:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81005fc5:	0f 87 de 00 00 00    	ja     810060a9 <_realloc_r+0x7ef>
81005fcb:	8b 45 0c             	mov    0xc(%ebp),%eax
81005fce:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005fd1:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005fd4:	89 45 c8             	mov    %eax,-0x38(%ebp)
81005fd7:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81005fdb:	0f 86 90 00 00 00    	jbe    81006071 <_realloc_r+0x7b7>
81005fe1:	8b 55 cc             	mov    -0x34(%ebp),%edx
81005fe4:	8d 42 04             	lea    0x4(%edx),%eax
81005fe7:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005fea:	8b 45 c8             	mov    -0x38(%ebp),%eax
81005fed:	8d 48 04             	lea    0x4(%eax),%ecx
81005ff0:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81005ff3:	8b 12                	mov    (%edx),%edx
81005ff5:	89 10                	mov    %edx,(%eax)
81005ff7:	8b 55 cc             	mov    -0x34(%ebp),%edx
81005ffa:	8d 42 04             	lea    0x4(%edx),%eax
81005ffd:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006000:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006003:	8d 48 04             	lea    0x4(%eax),%ecx
81006006:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006009:	8b 12                	mov    (%edx),%edx
8100600b:	89 10                	mov    %edx,(%eax)
8100600d:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81006011:	76 5e                	jbe    81006071 <_realloc_r+0x7b7>
81006013:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006016:	8d 42 04             	lea    0x4(%edx),%eax
81006019:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100601c:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100601f:	8d 48 04             	lea    0x4(%eax),%ecx
81006022:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006025:	8b 12                	mov    (%edx),%edx
81006027:	89 10                	mov    %edx,(%eax)
81006029:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100602c:	8d 42 04             	lea    0x4(%edx),%eax
8100602f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006032:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006035:	8d 48 04             	lea    0x4(%eax),%ecx
81006038:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100603b:	8b 12                	mov    (%edx),%edx
8100603d:	89 10                	mov    %edx,(%eax)
8100603f:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81006043:	76 2c                	jbe    81006071 <_realloc_r+0x7b7>
81006045:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006048:	8d 42 04             	lea    0x4(%edx),%eax
8100604b:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100604e:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006051:	8d 48 04             	lea    0x4(%eax),%ecx
81006054:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006057:	8b 12                	mov    (%edx),%edx
81006059:	89 10                	mov    %edx,(%eax)
8100605b:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100605e:	8d 42 04             	lea    0x4(%edx),%eax
81006061:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006064:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006067:	8d 48 04             	lea    0x4(%eax),%ecx
8100606a:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100606d:	8b 12                	mov    (%edx),%edx
8100606f:	89 10                	mov    %edx,(%eax)
81006071:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006074:	8d 42 04             	lea    0x4(%edx),%eax
81006077:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100607a:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100607d:	8d 48 04             	lea    0x4(%eax),%ecx
81006080:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006083:	8b 12                	mov    (%edx),%edx
81006085:	89 10                	mov    %edx,(%eax)
81006087:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100608a:	8d 42 04             	lea    0x4(%edx),%eax
8100608d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006090:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006093:	8d 48 04             	lea    0x4(%eax),%ecx
81006096:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006099:	8b 12                	mov    (%edx),%edx
8100609b:	89 10                	mov    %edx,(%eax)
8100609d:	8b 45 cc             	mov    -0x34(%ebp),%eax
810060a0:	8b 10                	mov    (%eax),%edx
810060a2:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060a5:	89 10                	mov    %edx,(%eax)
810060a7:	eb 14                	jmp    810060bd <_realloc_r+0x803>
810060a9:	83 ec 04             	sub    $0x4,%esp
810060ac:	ff 75 98             	pushl  -0x68(%ebp)
810060af:	ff 75 0c             	pushl  0xc(%ebp)
810060b2:	ff 75 a8             	pushl  -0x58(%ebp)
810060b5:	e8 f6 e9 ff ff       	call   81004ab0 <memmove>
810060ba:	83 c4 10             	add    $0x10,%esp
810060bd:	83 ec 08             	sub    $0x8,%esp
810060c0:	ff 75 0c             	pushl  0xc(%ebp)
810060c3:	ff 75 08             	pushl  0x8(%ebp)
810060c6:	e8 70 bd ff ff       	call   81001e3b <_free_r>
810060cb:	83 c4 10             	add    $0x10,%esp
810060ce:	83 ec 0c             	sub    $0xc,%esp
810060d1:	ff 75 08             	pushl  0x8(%ebp)
810060d4:	e8 f2 ea ff ff       	call   81004bcb <__malloc_unlock>
810060d9:	83 c4 10             	add    $0x10,%esp
810060dc:	8b 45 a8             	mov    -0x58(%ebp),%eax
810060df:	e9 ae 00 00 00       	jmp    81006192 <_realloc_r+0x8d8>
810060e4:	90                   	nop
810060e5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810060e8:	2b 45 bc             	sub    -0x44(%ebp),%eax
810060eb:	89 45 94             	mov    %eax,-0x6c(%ebp)
810060ee:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
810060f2:	76 5d                	jbe    81006151 <_realloc_r+0x897>
810060f4:	8b 55 f4             	mov    -0xc(%ebp),%edx
810060f7:	8b 45 bc             	mov    -0x44(%ebp),%eax
810060fa:	01 d0                	add    %edx,%eax
810060fc:	89 45 90             	mov    %eax,-0x70(%ebp)
810060ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006102:	8b 40 04             	mov    0x4(%eax),%eax
81006105:	83 e0 01             	and    $0x1,%eax
81006108:	0b 45 bc             	or     -0x44(%ebp),%eax
8100610b:	89 c2                	mov    %eax,%edx
8100610d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006110:	89 50 04             	mov    %edx,0x4(%eax)
81006113:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006116:	83 c8 01             	or     $0x1,%eax
81006119:	89 c2                	mov    %eax,%edx
8100611b:	8b 45 90             	mov    -0x70(%ebp),%eax
8100611e:	89 50 04             	mov    %edx,0x4(%eax)
81006121:	8b 55 90             	mov    -0x70(%ebp),%edx
81006124:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006127:	01 d0                	add    %edx,%eax
81006129:	8b 50 04             	mov    0x4(%eax),%edx
8100612c:	8b 4d 90             	mov    -0x70(%ebp),%ecx
8100612f:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006132:	01 c8                	add    %ecx,%eax
81006134:	83 ca 01             	or     $0x1,%edx
81006137:	89 50 04             	mov    %edx,0x4(%eax)
8100613a:	8b 45 90             	mov    -0x70(%ebp),%eax
8100613d:	83 c0 08             	add    $0x8,%eax
81006140:	83 ec 08             	sub    $0x8,%esp
81006143:	50                   	push   %eax
81006144:	ff 75 08             	pushl  0x8(%ebp)
81006147:	e8 ef bc ff ff       	call   81001e3b <_free_r>
8100614c:	83 c4 10             	add    $0x10,%esp
8100614f:	eb 2d                	jmp    8100617e <_realloc_r+0x8c4>
81006151:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006154:	8b 40 04             	mov    0x4(%eax),%eax
81006157:	83 e0 01             	and    $0x1,%eax
8100615a:	0b 45 f0             	or     -0x10(%ebp),%eax
8100615d:	89 c2                	mov    %eax,%edx
8100615f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006162:	89 50 04             	mov    %edx,0x4(%eax)
81006165:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006168:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100616b:	01 d0                	add    %edx,%eax
8100616d:	8b 50 04             	mov    0x4(%eax),%edx
81006170:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81006173:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006176:	01 c8                	add    %ecx,%eax
81006178:	83 ca 01             	or     $0x1,%edx
8100617b:	89 50 04             	mov    %edx,0x4(%eax)
8100617e:	83 ec 0c             	sub    $0xc,%esp
81006181:	ff 75 08             	pushl  0x8(%ebp)
81006184:	e8 42 ea ff ff       	call   81004bcb <__malloc_unlock>
81006189:	83 c4 10             	add    $0x10,%esp
8100618c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100618f:	83 c0 08             	add    $0x8,%eax
81006192:	c9                   	leave  
81006193:	c3                   	ret    

81006194 <cleanup_glue>:
81006194:	55                   	push   %ebp
81006195:	89 e5                	mov    %esp,%ebp
81006197:	83 ec 08             	sub    $0x8,%esp
8100619a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100619d:	8b 00                	mov    (%eax),%eax
8100619f:	85 c0                	test   %eax,%eax
810061a1:	74 14                	je     810061b7 <cleanup_glue+0x23>
810061a3:	8b 45 0c             	mov    0xc(%ebp),%eax
810061a6:	8b 00                	mov    (%eax),%eax
810061a8:	83 ec 08             	sub    $0x8,%esp
810061ab:	50                   	push   %eax
810061ac:	ff 75 08             	pushl  0x8(%ebp)
810061af:	e8 e0 ff ff ff       	call   81006194 <cleanup_glue>
810061b4:	83 c4 10             	add    $0x10,%esp
810061b7:	83 ec 08             	sub    $0x8,%esp
810061ba:	ff 75 0c             	pushl  0xc(%ebp)
810061bd:	ff 75 08             	pushl  0x8(%ebp)
810061c0:	e8 76 bc ff ff       	call   81001e3b <_free_r>
810061c5:	83 c4 10             	add    $0x10,%esp
810061c8:	90                   	nop
810061c9:	c9                   	leave  
810061ca:	c3                   	ret    

810061cb <_reclaim_reent>:
810061cb:	55                   	push   %ebp
810061cc:	89 e5                	mov    %esp,%ebp
810061ce:	83 ec 28             	sub    $0x28,%esp
810061d1:	a1 44 88 00 81       	mov    0x81008844,%eax
810061d6:	39 45 08             	cmp    %eax,0x8(%ebp)
810061d9:	0f 84 49 01 00 00    	je     81006328 <_reclaim_reent+0x15d>
810061df:	8b 45 08             	mov    0x8(%ebp),%eax
810061e2:	8b 40 4c             	mov    0x4c(%eax),%eax
810061e5:	85 c0                	test   %eax,%eax
810061e7:	74 64                	je     8100624d <_reclaim_reent+0x82>
810061e9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810061f0:	eb 3e                	jmp    81006230 <_reclaim_reent+0x65>
810061f2:	8b 45 08             	mov    0x8(%ebp),%eax
810061f5:	8b 50 4c             	mov    0x4c(%eax),%edx
810061f8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810061fb:	c1 e0 02             	shl    $0x2,%eax
810061fe:	01 d0                	add    %edx,%eax
81006200:	8b 00                	mov    (%eax),%eax
81006202:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006205:	eb 1f                	jmp    81006226 <_reclaim_reent+0x5b>
81006207:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100620a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100620d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006210:	8b 00                	mov    (%eax),%eax
81006212:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006215:	83 ec 08             	sub    $0x8,%esp
81006218:	ff 75 e8             	pushl  -0x18(%ebp)
8100621b:	ff 75 08             	pushl  0x8(%ebp)
8100621e:	e8 18 bc ff ff       	call   81001e3b <_free_r>
81006223:	83 c4 10             	add    $0x10,%esp
81006226:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100622a:	75 db                	jne    81006207 <_reclaim_reent+0x3c>
8100622c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81006230:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006233:	83 f8 1f             	cmp    $0x1f,%eax
81006236:	76 ba                	jbe    810061f2 <_reclaim_reent+0x27>
81006238:	8b 45 08             	mov    0x8(%ebp),%eax
8100623b:	8b 40 4c             	mov    0x4c(%eax),%eax
8100623e:	83 ec 08             	sub    $0x8,%esp
81006241:	50                   	push   %eax
81006242:	ff 75 08             	pushl  0x8(%ebp)
81006245:	e8 f1 bb ff ff       	call   81001e3b <_free_r>
8100624a:	83 c4 10             	add    $0x10,%esp
8100624d:	8b 45 08             	mov    0x8(%ebp),%eax
81006250:	8b 40 40             	mov    0x40(%eax),%eax
81006253:	85 c0                	test   %eax,%eax
81006255:	74 15                	je     8100626c <_reclaim_reent+0xa1>
81006257:	8b 45 08             	mov    0x8(%ebp),%eax
8100625a:	8b 40 40             	mov    0x40(%eax),%eax
8100625d:	83 ec 08             	sub    $0x8,%esp
81006260:	50                   	push   %eax
81006261:	ff 75 08             	pushl  0x8(%ebp)
81006264:	e8 d2 bb ff ff       	call   81001e3b <_free_r>
81006269:	83 c4 10             	add    $0x10,%esp
8100626c:	8b 45 08             	mov    0x8(%ebp),%eax
8100626f:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81006275:	85 c0                	test   %eax,%eax
81006277:	74 50                	je     810062c9 <_reclaim_reent+0xfe>
81006279:	8b 45 08             	mov    0x8(%ebp),%eax
8100627c:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81006282:	8b 55 08             	mov    0x8(%ebp),%edx
81006285:	81 c2 4c 01 00 00    	add    $0x14c,%edx
8100628b:	39 d0                	cmp    %edx,%eax
8100628d:	74 3a                	je     810062c9 <_reclaim_reent+0xfe>
8100628f:	8b 45 08             	mov    0x8(%ebp),%eax
81006292:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81006298:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100629b:	eb 1f                	jmp    810062bc <_reclaim_reent+0xf1>
8100629d:	8b 45 ec             	mov    -0x14(%ebp),%eax
810062a0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810062a3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810062a6:	8b 00                	mov    (%eax),%eax
810062a8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810062ab:	83 ec 08             	sub    $0x8,%esp
810062ae:	ff 75 e4             	pushl  -0x1c(%ebp)
810062b1:	ff 75 08             	pushl  0x8(%ebp)
810062b4:	e8 82 bb ff ff       	call   81001e3b <_free_r>
810062b9:	83 c4 10             	add    $0x10,%esp
810062bc:	8b 45 08             	mov    0x8(%ebp),%eax
810062bf:	05 4c 01 00 00       	add    $0x14c,%eax
810062c4:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810062c7:	75 d4                	jne    8100629d <_reclaim_reent+0xd2>
810062c9:	8b 45 08             	mov    0x8(%ebp),%eax
810062cc:	8b 40 54             	mov    0x54(%eax),%eax
810062cf:	85 c0                	test   %eax,%eax
810062d1:	74 15                	je     810062e8 <_reclaim_reent+0x11d>
810062d3:	8b 45 08             	mov    0x8(%ebp),%eax
810062d6:	8b 40 54             	mov    0x54(%eax),%eax
810062d9:	83 ec 08             	sub    $0x8,%esp
810062dc:	50                   	push   %eax
810062dd:	ff 75 08             	pushl  0x8(%ebp)
810062e0:	e8 56 bb ff ff       	call   81001e3b <_free_r>
810062e5:	83 c4 10             	add    $0x10,%esp
810062e8:	8b 45 08             	mov    0x8(%ebp),%eax
810062eb:	8b 40 38             	mov    0x38(%eax),%eax
810062ee:	85 c0                	test   %eax,%eax
810062f0:	74 36                	je     81006328 <_reclaim_reent+0x15d>
810062f2:	8b 45 08             	mov    0x8(%ebp),%eax
810062f5:	8b 40 3c             	mov    0x3c(%eax),%eax
810062f8:	83 ec 0c             	sub    $0xc,%esp
810062fb:	ff 75 08             	pushl  0x8(%ebp)
810062fe:	ff d0                	call   *%eax
81006300:	83 c4 10             	add    $0x10,%esp
81006303:	8b 45 08             	mov    0x8(%ebp),%eax
81006306:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
8100630c:	85 c0                	test   %eax,%eax
8100630e:	74 18                	je     81006328 <_reclaim_reent+0x15d>
81006310:	8b 45 08             	mov    0x8(%ebp),%eax
81006313:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81006319:	83 ec 08             	sub    $0x8,%esp
8100631c:	50                   	push   %eax
8100631d:	ff 75 08             	pushl  0x8(%ebp)
81006320:	e8 6f fe ff ff       	call   81006194 <cleanup_glue>
81006325:	83 c4 10             	add    $0x10,%esp
81006328:	90                   	nop
81006329:	c9                   	leave  
8100632a:	c3                   	ret    

8100632b <lflush>:
8100632b:	55                   	push   %ebp
8100632c:	89 e5                	mov    %esp,%ebp
8100632e:	83 ec 08             	sub    $0x8,%esp
81006331:	8b 45 08             	mov    0x8(%ebp),%eax
81006334:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006338:	98                   	cwtl   
81006339:	83 e0 09             	and    $0x9,%eax
8100633c:	83 f8 09             	cmp    $0x9,%eax
8100633f:	75 10                	jne    81006351 <lflush+0x26>
81006341:	83 ec 0c             	sub    $0xc,%esp
81006344:	ff 75 08             	pushl  0x8(%ebp)
81006347:	e8 a5 af ff ff       	call   810012f1 <fflush>
8100634c:	83 c4 10             	add    $0x10,%esp
8100634f:	eb 05                	jmp    81006356 <lflush+0x2b>
81006351:	b8 00 00 00 00       	mov    $0x0,%eax
81006356:	c9                   	leave  
81006357:	c3                   	ret    

81006358 <__srefill_r>:
81006358:	55                   	push   %ebp
81006359:	89 e5                	mov    %esp,%ebp
8100635b:	56                   	push   %esi
8100635c:	53                   	push   %ebx
8100635d:	83 ec 10             	sub    $0x10,%esp
81006360:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006363:	8b 45 08             	mov    0x8(%ebp),%eax
81006366:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006369:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100636d:	74 18                	je     81006387 <__srefill_r+0x2f>
8100636f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006372:	8b 40 38             	mov    0x38(%eax),%eax
81006375:	85 c0                	test   %eax,%eax
81006377:	75 0e                	jne    81006387 <__srefill_r+0x2f>
81006379:	83 ec 0c             	sub    $0xc,%esp
8100637c:	ff 75 f4             	pushl  -0xc(%ebp)
8100637f:	e8 02 b5 ff ff       	call   81001886 <__sinit>
81006384:	83 c4 10             	add    $0x10,%esp
81006387:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100638b:	98                   	cwtl   
8100638c:	25 00 20 00 00       	and    $0x2000,%eax
81006391:	85 c0                	test   %eax,%eax
81006393:	75 14                	jne    810063a9 <__srefill_r+0x51>
81006395:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006399:	80 cc 20             	or     $0x20,%ah
8100639c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810063a0:	8b 43 64             	mov    0x64(%ebx),%eax
810063a3:	80 e4 df             	and    $0xdf,%ah
810063a6:	89 43 64             	mov    %eax,0x64(%ebx)
810063a9:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810063b0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063b4:	98                   	cwtl   
810063b5:	83 e0 20             	and    $0x20,%eax
810063b8:	85 c0                	test   %eax,%eax
810063ba:	74 0a                	je     810063c6 <__srefill_r+0x6e>
810063bc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810063c1:	e9 8c 01 00 00       	jmp    81006552 <__srefill_r+0x1fa>
810063c6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063ca:	98                   	cwtl   
810063cb:	83 e0 04             	and    $0x4,%eax
810063ce:	85 c0                	test   %eax,%eax
810063d0:	75 79                	jne    8100644b <__srefill_r+0xf3>
810063d2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063d6:	98                   	cwtl   
810063d7:	83 e0 10             	and    $0x10,%eax
810063da:	85 c0                	test   %eax,%eax
810063dc:	75 1e                	jne    810063fc <__srefill_r+0xa4>
810063de:	8b 45 08             	mov    0x8(%ebp),%eax
810063e1:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810063e7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063eb:	83 c8 40             	or     $0x40,%eax
810063ee:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810063f2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810063f7:	e9 56 01 00 00       	jmp    81006552 <__srefill_r+0x1fa>
810063fc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006400:	98                   	cwtl   
81006401:	83 e0 08             	and    $0x8,%eax
81006404:	85 c0                	test   %eax,%eax
81006406:	74 36                	je     8100643e <__srefill_r+0xe6>
81006408:	83 ec 08             	sub    $0x8,%esp
8100640b:	53                   	push   %ebx
8100640c:	ff 75 08             	pushl  0x8(%ebp)
8100640f:	e8 85 ae ff ff       	call   81001299 <_fflush_r>
81006414:	83 c4 10             	add    $0x10,%esp
81006417:	85 c0                	test   %eax,%eax
81006419:	74 0a                	je     81006425 <__srefill_r+0xcd>
8100641b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006420:	e9 2d 01 00 00       	jmp    81006552 <__srefill_r+0x1fa>
81006425:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006429:	83 e0 f7             	and    $0xfffffff7,%eax
8100642c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006430:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006437:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
8100643e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006442:	83 c8 04             	or     $0x4,%eax
81006445:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006449:	eb 46                	jmp    81006491 <__srefill_r+0x139>
8100644b:	8b 43 30             	mov    0x30(%ebx),%eax
8100644e:	85 c0                	test   %eax,%eax
81006450:	74 3f                	je     81006491 <__srefill_r+0x139>
81006452:	8b 53 30             	mov    0x30(%ebx),%edx
81006455:	8d 43 40             	lea    0x40(%ebx),%eax
81006458:	39 c2                	cmp    %eax,%edx
8100645a:	74 12                	je     8100646e <__srefill_r+0x116>
8100645c:	8b 43 30             	mov    0x30(%ebx),%eax
8100645f:	83 ec 08             	sub    $0x8,%esp
81006462:	50                   	push   %eax
81006463:	ff 75 08             	pushl  0x8(%ebp)
81006466:	e8 d0 b9 ff ff       	call   81001e3b <_free_r>
8100646b:	83 c4 10             	add    $0x10,%esp
8100646e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81006475:	8b 43 3c             	mov    0x3c(%ebx),%eax
81006478:	89 43 04             	mov    %eax,0x4(%ebx)
8100647b:	8b 43 04             	mov    0x4(%ebx),%eax
8100647e:	85 c0                	test   %eax,%eax
81006480:	74 0f                	je     81006491 <__srefill_r+0x139>
81006482:	8b 43 38             	mov    0x38(%ebx),%eax
81006485:	89 03                	mov    %eax,(%ebx)
81006487:	b8 00 00 00 00       	mov    $0x0,%eax
8100648c:	e9 c1 00 00 00       	jmp    81006552 <__srefill_r+0x1fa>
81006491:	8b 43 10             	mov    0x10(%ebx),%eax
81006494:	85 c0                	test   %eax,%eax
81006496:	75 0f                	jne    810064a7 <__srefill_r+0x14f>
81006498:	83 ec 08             	sub    $0x8,%esp
8100649b:	53                   	push   %ebx
8100649c:	ff 75 08             	pushl  0x8(%ebp)
8100649f:	e8 60 d8 ff ff       	call   81003d04 <__smakebuf_r>
810064a4:	83 c4 10             	add    $0x10,%esp
810064a7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810064ab:	98                   	cwtl   
810064ac:	83 e0 03             	and    $0x3,%eax
810064af:	85 c0                	test   %eax,%eax
810064b1:	74 48                	je     810064fb <__srefill_r+0x1a3>
810064b3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810064b7:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
810064bb:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
810064c1:	a1 84 80 00 81       	mov    0x81008084,%eax
810064c6:	83 ec 08             	sub    $0x8,%esp
810064c9:	68 2b 63 00 81       	push   $0x8100632b
810064ce:	50                   	push   %eax
810064cf:	e8 92 c8 ff ff       	call   81002d66 <_fwalk>
810064d4:	83 c4 10             	add    $0x10,%esp
810064d7:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
810064db:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810064df:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810064e3:	98                   	cwtl   
810064e4:	83 e0 09             	and    $0x9,%eax
810064e7:	83 f8 09             	cmp    $0x9,%eax
810064ea:	75 0f                	jne    810064fb <__srefill_r+0x1a3>
810064ec:	83 ec 08             	sub    $0x8,%esp
810064ef:	53                   	push   %ebx
810064f0:	ff 75 08             	pushl  0x8(%ebp)
810064f3:	e8 7b ab ff ff       	call   81001073 <__sflush_r>
810064f8:	83 c4 10             	add    $0x10,%esp
810064fb:	8b 43 10             	mov    0x10(%ebx),%eax
810064fe:	89 03                	mov    %eax,(%ebx)
81006500:	8b 43 20             	mov    0x20(%ebx),%eax
81006503:	8b 73 14             	mov    0x14(%ebx),%esi
81006506:	8b 0b                	mov    (%ebx),%ecx
81006508:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100650b:	56                   	push   %esi
8100650c:	51                   	push   %ecx
8100650d:	52                   	push   %edx
8100650e:	ff 75 08             	pushl  0x8(%ebp)
81006511:	ff d0                	call   *%eax
81006513:	83 c4 10             	add    $0x10,%esp
81006516:	89 43 04             	mov    %eax,0x4(%ebx)
81006519:	8b 43 04             	mov    0x4(%ebx),%eax
8100651c:	85 c0                	test   %eax,%eax
8100651e:	7f 2d                	jg     8100654d <__srefill_r+0x1f5>
81006520:	8b 43 04             	mov    0x4(%ebx),%eax
81006523:	85 c0                	test   %eax,%eax
81006525:	75 0d                	jne    81006534 <__srefill_r+0x1dc>
81006527:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100652b:	83 c8 20             	or     $0x20,%eax
8100652e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006532:	eb 12                	jmp    81006546 <__srefill_r+0x1ee>
81006534:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100653b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100653f:	83 c8 40             	or     $0x40,%eax
81006542:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006546:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100654b:	eb 05                	jmp    81006552 <__srefill_r+0x1fa>
8100654d:	b8 00 00 00 00       	mov    $0x0,%eax
81006552:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006555:	5b                   	pop    %ebx
81006556:	5e                   	pop    %esi
81006557:	5d                   	pop    %ebp
81006558:	c3                   	ret    

81006559 <__srget_r>:
81006559:	55                   	push   %ebp
8100655a:	89 e5                	mov    %esp,%ebp
8100655c:	53                   	push   %ebx
8100655d:	83 ec 14             	sub    $0x14,%esp
81006560:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006563:	8b 45 08             	mov    0x8(%ebp),%eax
81006566:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006569:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100656d:	74 18                	je     81006587 <__srget_r+0x2e>
8100656f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006572:	8b 40 38             	mov    0x38(%eax),%eax
81006575:	85 c0                	test   %eax,%eax
81006577:	75 0e                	jne    81006587 <__srget_r+0x2e>
81006579:	83 ec 0c             	sub    $0xc,%esp
8100657c:	ff 75 f4             	pushl  -0xc(%ebp)
8100657f:	e8 02 b3 ff ff       	call   81001886 <__sinit>
81006584:	83 c4 10             	add    $0x10,%esp
81006587:	83 ec 08             	sub    $0x8,%esp
8100658a:	53                   	push   %ebx
8100658b:	ff 75 08             	pushl  0x8(%ebp)
8100658e:	e8 c5 fd ff ff       	call   81006358 <__srefill_r>
81006593:	83 c4 10             	add    $0x10,%esp
81006596:	85 c0                	test   %eax,%eax
81006598:	75 18                	jne    810065b2 <__srget_r+0x59>
8100659a:	8b 43 04             	mov    0x4(%ebx),%eax
8100659d:	83 e8 01             	sub    $0x1,%eax
810065a0:	89 43 04             	mov    %eax,0x4(%ebx)
810065a3:	8b 03                	mov    (%ebx),%eax
810065a5:	8d 50 01             	lea    0x1(%eax),%edx
810065a8:	89 13                	mov    %edx,(%ebx)
810065aa:	0f b6 00             	movzbl (%eax),%eax
810065ad:	0f b6 c0             	movzbl %al,%eax
810065b0:	eb 05                	jmp    810065b7 <__srget_r+0x5e>
810065b2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810065b7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810065ba:	c9                   	leave  
810065bb:	c3                   	ret    

810065bc <__srget>:
810065bc:	55                   	push   %ebp
810065bd:	89 e5                	mov    %esp,%ebp
810065bf:	83 ec 08             	sub    $0x8,%esp
810065c2:	8b 55 08             	mov    0x8(%ebp),%edx
810065c5:	a1 44 88 00 81       	mov    0x81008844,%eax
810065ca:	83 ec 08             	sub    $0x8,%esp
810065cd:	52                   	push   %edx
810065ce:	50                   	push   %eax
810065cf:	e8 85 ff ff ff       	call   81006559 <__srget_r>
810065d4:	83 c4 10             	add    $0x10,%esp
810065d7:	c9                   	leave  
810065d8:	c3                   	ret    

810065d9 <_sbrk_r>:
810065d9:	55                   	push   %ebp
810065da:	89 e5                	mov    %esp,%ebp
810065dc:	83 ec 18             	sub    $0x18,%esp
810065df:	c7 05 8c 92 00 81 00 	movl   $0x0,0x8100928c
810065e6:	00 00 00 
810065e9:	83 ec 0c             	sub    $0xc,%esp
810065ec:	ff 75 0c             	pushl  0xc(%ebp)
810065ef:	e8 1b a7 ff ff       	call   81000d0f <sbrk>
810065f4:	83 c4 10             	add    $0x10,%esp
810065f7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810065fa:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810065fe:	75 14                	jne    81006614 <_sbrk_r+0x3b>
81006600:	a1 8c 92 00 81       	mov    0x8100928c,%eax
81006605:	85 c0                	test   %eax,%eax
81006607:	74 0b                	je     81006614 <_sbrk_r+0x3b>
81006609:	8b 15 8c 92 00 81    	mov    0x8100928c,%edx
8100660f:	8b 45 08             	mov    0x8(%ebp),%eax
81006612:	89 10                	mov    %edx,(%eax)
81006614:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006617:	c9                   	leave  
81006618:	c3                   	ret    

81006619 <setvbuf>:
81006619:	55                   	push   %ebp
8100661a:	89 e5                	mov    %esp,%ebp
8100661c:	57                   	push   %edi
8100661d:	56                   	push   %esi
8100661e:	53                   	push   %ebx
8100661f:	83 ec 2c             	sub    $0x2c,%esp
81006622:	8b 5d 08             	mov    0x8(%ebp),%ebx
81006625:	8b 7d 10             	mov    0x10(%ebp),%edi
81006628:	8b 75 14             	mov    0x14(%ebp),%esi
8100662b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006632:	a1 44 88 00 81       	mov    0x81008844,%eax
81006637:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100663a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100663d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006640:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81006644:	74 18                	je     8100665e <setvbuf+0x45>
81006646:	8b 45 dc             	mov    -0x24(%ebp),%eax
81006649:	8b 40 38             	mov    0x38(%eax),%eax
8100664c:	85 c0                	test   %eax,%eax
8100664e:	75 0e                	jne    8100665e <setvbuf+0x45>
81006650:	83 ec 0c             	sub    $0xc,%esp
81006653:	ff 75 dc             	pushl  -0x24(%ebp)
81006656:	e8 2b b2 ff ff       	call   81001886 <__sinit>
8100665b:	83 c4 10             	add    $0x10,%esp
8100665e:	83 ff 02             	cmp    $0x2,%edi
81006661:	74 19                	je     8100667c <setvbuf+0x63>
81006663:	85 ff                	test   %edi,%edi
81006665:	74 05                	je     8100666c <setvbuf+0x53>
81006667:	83 ff 01             	cmp    $0x1,%edi
8100666a:	75 06                	jne    81006672 <setvbuf+0x59>
8100666c:	89 f0                	mov    %esi,%eax
8100666e:	85 c0                	test   %eax,%eax
81006670:	79 0a                	jns    8100667c <setvbuf+0x63>
81006672:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006677:	e9 a1 01 00 00       	jmp    8100681d <setvbuf+0x204>
8100667c:	83 ec 08             	sub    $0x8,%esp
8100667f:	53                   	push   %ebx
81006680:	ff 75 e0             	pushl  -0x20(%ebp)
81006683:	e8 11 ac ff ff       	call   81001299 <_fflush_r>
81006688:	83 c4 10             	add    $0x10,%esp
8100668b:	8b 43 30             	mov    0x30(%ebx),%eax
8100668e:	85 c0                	test   %eax,%eax
81006690:	74 23                	je     810066b5 <setvbuf+0x9c>
81006692:	8b 53 30             	mov    0x30(%ebx),%edx
81006695:	8d 43 40             	lea    0x40(%ebx),%eax
81006698:	39 c2                	cmp    %eax,%edx
8100669a:	74 12                	je     810066ae <setvbuf+0x95>
8100669c:	8b 43 30             	mov    0x30(%ebx),%eax
8100669f:	83 ec 08             	sub    $0x8,%esp
810066a2:	50                   	push   %eax
810066a3:	ff 75 e0             	pushl  -0x20(%ebp)
810066a6:	e8 90 b7 ff ff       	call   81001e3b <_free_r>
810066ab:	83 c4 10             	add    $0x10,%esp
810066ae:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810066b5:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
810066bc:	8b 43 18             	mov    0x18(%ebx),%eax
810066bf:	89 43 04             	mov    %eax,0x4(%ebx)
810066c2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810066c6:	98                   	cwtl   
810066c7:	25 80 00 00 00       	and    $0x80,%eax
810066cc:	85 c0                	test   %eax,%eax
810066ce:	74 12                	je     810066e2 <setvbuf+0xc9>
810066d0:	8b 43 10             	mov    0x10(%ebx),%eax
810066d3:	83 ec 08             	sub    $0x8,%esp
810066d6:	50                   	push   %eax
810066d7:	ff 75 e0             	pushl  -0x20(%ebp)
810066da:	e8 5c b7 ff ff       	call   81001e3b <_free_r>
810066df:	83 c4 10             	add    $0x10,%esp
810066e2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810066e6:	66 25 5c f3          	and    $0xf35c,%ax
810066ea:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810066ee:	83 ff 02             	cmp    $0x2,%edi
810066f1:	74 6f                	je     81006762 <setvbuf+0x149>
810066f3:	8d 45 d4             	lea    -0x2c(%ebp),%eax
810066f6:	50                   	push   %eax
810066f7:	8d 45 d8             	lea    -0x28(%ebp),%eax
810066fa:	50                   	push   %eax
810066fb:	53                   	push   %ebx
810066fc:	ff 75 e0             	pushl  -0x20(%ebp)
810066ff:	e8 ed d6 ff ff       	call   81003df1 <__swhatbuf_r>
81006704:	83 c4 10             	add    $0x10,%esp
81006707:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100670b:	09 d0                	or     %edx,%eax
8100670d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006711:	85 f6                	test   %esi,%esi
81006713:	75 0a                	jne    8100671f <setvbuf+0x106>
81006715:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
8100671c:	8b 75 d8             	mov    -0x28(%ebp),%esi
8100671f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006723:	75 73                	jne    81006798 <setvbuf+0x17f>
81006725:	83 ec 0c             	sub    $0xc,%esp
81006728:	56                   	push   %esi
81006729:	e8 56 d7 ff ff       	call   81003e84 <malloc>
8100672e:	83 c4 10             	add    $0x10,%esp
81006731:	89 45 0c             	mov    %eax,0xc(%ebp)
81006734:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006738:	75 20                	jne    8100675a <setvbuf+0x141>
8100673a:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81006741:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006744:	39 c6                	cmp    %eax,%esi
81006746:	74 12                	je     8100675a <setvbuf+0x141>
81006748:	8b 75 d8             	mov    -0x28(%ebp),%esi
8100674b:	83 ec 0c             	sub    $0xc,%esp
8100674e:	56                   	push   %esi
8100674f:	e8 30 d7 ff ff       	call   81003e84 <malloc>
81006754:	83 c4 10             	add    $0x10,%esp
81006757:	89 45 0c             	mov    %eax,0xc(%ebp)
8100675a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100675e:	75 2e                	jne    8100678e <setvbuf+0x175>
81006760:	eb 01                	jmp    81006763 <setvbuf+0x14a>
81006762:	90                   	nop
81006763:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006767:	83 c8 02             	or     $0x2,%eax
8100676a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100676e:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006775:	8d 43 43             	lea    0x43(%ebx),%eax
81006778:	89 03                	mov    %eax,(%ebx)
8100677a:	8b 03                	mov    (%ebx),%eax
8100677c:	89 43 10             	mov    %eax,0x10(%ebx)
8100677f:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81006786:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006789:	e9 8f 00 00 00       	jmp    8100681d <setvbuf+0x204>
8100678e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006792:	0c 80                	or     $0x80,%al
81006794:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006798:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100679b:	8b 40 38             	mov    0x38(%eax),%eax
8100679e:	85 c0                	test   %eax,%eax
810067a0:	75 0e                	jne    810067b0 <setvbuf+0x197>
810067a2:	83 ec 0c             	sub    $0xc,%esp
810067a5:	ff 75 e0             	pushl  -0x20(%ebp)
810067a8:	e8 d9 b0 ff ff       	call   81001886 <__sinit>
810067ad:	83 c4 10             	add    $0x10,%esp
810067b0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810067b3:	39 c6                	cmp    %eax,%esi
810067b5:	74 0b                	je     810067c2 <setvbuf+0x1a9>
810067b7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067bb:	80 cc 08             	or     $0x8,%ah
810067be:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810067c2:	83 ff 01             	cmp    $0x1,%edi
810067c5:	75 0b                	jne    810067d2 <setvbuf+0x1b9>
810067c7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067cb:	83 c8 01             	or     $0x1,%eax
810067ce:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810067d2:	8b 45 0c             	mov    0xc(%ebp),%eax
810067d5:	89 03                	mov    %eax,(%ebx)
810067d7:	8b 03                	mov    (%ebx),%eax
810067d9:	89 43 10             	mov    %eax,0x10(%ebx)
810067dc:	89 f0                	mov    %esi,%eax
810067de:	89 43 14             	mov    %eax,0x14(%ebx)
810067e1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067e5:	98                   	cwtl   
810067e6:	83 e0 08             	and    $0x8,%eax
810067e9:	85 c0                	test   %eax,%eax
810067eb:	74 24                	je     81006811 <setvbuf+0x1f8>
810067ed:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067f1:	98                   	cwtl   
810067f2:	83 e0 01             	and    $0x1,%eax
810067f5:	85 c0                	test   %eax,%eax
810067f7:	74 11                	je     8100680a <setvbuf+0x1f1>
810067f9:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006800:	8b 43 14             	mov    0x14(%ebx),%eax
81006803:	f7 d8                	neg    %eax
81006805:	89 43 18             	mov    %eax,0x18(%ebx)
81006808:	eb 0e                	jmp    81006818 <setvbuf+0x1ff>
8100680a:	89 f0                	mov    %esi,%eax
8100680c:	89 43 08             	mov    %eax,0x8(%ebx)
8100680f:	eb 07                	jmp    81006818 <setvbuf+0x1ff>
81006811:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006818:	b8 00 00 00 00       	mov    $0x0,%eax
8100681d:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006820:	5b                   	pop    %ebx
81006821:	5e                   	pop    %esi
81006822:	5f                   	pop    %edi
81006823:	5d                   	pop    %ebp
81006824:	c3                   	ret    

81006825 <__sread>:
81006825:	55                   	push   %ebp
81006826:	89 e5                	mov    %esp,%ebp
81006828:	56                   	push   %esi
81006829:	53                   	push   %ebx
8100682a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100682d:	8b 55 14             	mov    0x14(%ebp),%edx
81006830:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81006834:	98                   	cwtl   
81006835:	52                   	push   %edx
81006836:	ff 75 10             	pushl  0x10(%ebp)
81006839:	50                   	push   %eax
8100683a:	ff 75 08             	pushl  0x8(%ebp)
8100683d:	e8 d3 11 00 00       	call   81007a15 <_read_r>
81006842:	83 c4 10             	add    $0x10,%esp
81006845:	89 c6                	mov    %eax,%esi
81006847:	85 f6                	test   %esi,%esi
81006849:	78 0a                	js     81006855 <__sread+0x30>
8100684b:	8b 43 50             	mov    0x50(%ebx),%eax
8100684e:	01 f0                	add    %esi,%eax
81006850:	89 43 50             	mov    %eax,0x50(%ebx)
81006853:	eb 0b                	jmp    81006860 <__sread+0x3b>
81006855:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006859:	80 e4 ef             	and    $0xef,%ah
8100685c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006860:	89 f0                	mov    %esi,%eax
81006862:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006865:	5b                   	pop    %ebx
81006866:	5e                   	pop    %esi
81006867:	5d                   	pop    %ebp
81006868:	c3                   	ret    

81006869 <__seofread>:
81006869:	55                   	push   %ebp
8100686a:	89 e5                	mov    %esp,%ebp
8100686c:	b8 00 00 00 00       	mov    $0x0,%eax
81006871:	5d                   	pop    %ebp
81006872:	c3                   	ret    

81006873 <__swrite>:
81006873:	55                   	push   %ebp
81006874:	89 e5                	mov    %esp,%ebp
81006876:	53                   	push   %ebx
81006877:	83 ec 14             	sub    $0x14,%esp
8100687a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100687d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006881:	98                   	cwtl   
81006882:	25 00 01 00 00       	and    $0x100,%eax
81006887:	85 c0                	test   %eax,%eax
81006889:	74 15                	je     810068a0 <__swrite+0x2d>
8100688b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100688f:	98                   	cwtl   
81006890:	6a 02                	push   $0x2
81006892:	6a 00                	push   $0x0
81006894:	50                   	push   %eax
81006895:	ff 75 08             	pushl  0x8(%ebp)
81006898:	e8 98 0f 00 00       	call   81007835 <_lseek_r>
8100689d:	83 c4 10             	add    $0x10,%esp
810068a0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810068a4:	80 e4 ef             	and    $0xef,%ah
810068a7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810068ab:	8b 55 14             	mov    0x14(%ebp),%edx
810068ae:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810068b2:	98                   	cwtl   
810068b3:	52                   	push   %edx
810068b4:	ff 75 10             	pushl  0x10(%ebp)
810068b7:	50                   	push   %eax
810068b8:	ff 75 08             	pushl  0x8(%ebp)
810068bb:	e8 42 07 00 00       	call   81007002 <_write_r>
810068c0:	83 c4 10             	add    $0x10,%esp
810068c3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810068c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810068c9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810068cc:	c9                   	leave  
810068cd:	c3                   	ret    

810068ce <__sseek>:
810068ce:	55                   	push   %ebp
810068cf:	89 e5                	mov    %esp,%ebp
810068d1:	56                   	push   %esi
810068d2:	53                   	push   %ebx
810068d3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810068d6:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810068da:	98                   	cwtl   
810068db:	ff 75 14             	pushl  0x14(%ebp)
810068de:	ff 75 10             	pushl  0x10(%ebp)
810068e1:	50                   	push   %eax
810068e2:	ff 75 08             	pushl  0x8(%ebp)
810068e5:	e8 4b 0f 00 00       	call   81007835 <_lseek_r>
810068ea:	83 c4 10             	add    $0x10,%esp
810068ed:	89 c6                	mov    %eax,%esi
810068ef:	83 fe ff             	cmp    $0xffffffff,%esi
810068f2:	75 0d                	jne    81006901 <__sseek+0x33>
810068f4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810068f8:	80 e4 ef             	and    $0xef,%ah
810068fb:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810068ff:	eb 0e                	jmp    8100690f <__sseek+0x41>
81006901:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006905:	80 cc 10             	or     $0x10,%ah
81006908:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100690c:	89 73 50             	mov    %esi,0x50(%ebx)
8100690f:	89 f0                	mov    %esi,%eax
81006911:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006914:	5b                   	pop    %ebx
81006915:	5e                   	pop    %esi
81006916:	5d                   	pop    %ebp
81006917:	c3                   	ret    

81006918 <__sclose>:
81006918:	55                   	push   %ebp
81006919:	89 e5                	mov    %esp,%ebp
8100691b:	83 ec 18             	sub    $0x18,%esp
8100691e:	8b 45 0c             	mov    0xc(%ebp),%eax
81006921:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006924:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006927:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100692b:	98                   	cwtl   
8100692c:	83 ec 08             	sub    $0x8,%esp
8100692f:	50                   	push   %eax
81006930:	ff 75 08             	pushl  0x8(%ebp)
81006933:	e8 80 09 00 00       	call   810072b8 <_close_r>
81006938:	83 c4 10             	add    $0x10,%esp
8100693b:	c9                   	leave  
8100693c:	c3                   	ret    
8100693d:	66 90                	xchg   %ax,%ax
8100693f:	90                   	nop

81006940 <strchr>:
81006940:	55                   	push   %ebp
81006941:	89 e5                	mov    %esp,%ebp
81006943:	57                   	push   %edi
81006944:	53                   	push   %ebx
81006945:	31 db                	xor    %ebx,%ebx
81006947:	8b 7d 08             	mov    0x8(%ebp),%edi
8100694a:	02 5d 0c             	add    0xc(%ebp),%bl
8100694d:	0f 84 98 00 00 00    	je     810069eb <L25>
81006953:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006959:	74 37                	je     81006992 <L5>
8100695b:	89 f8                	mov    %edi,%eax
8100695d:	8a 08                	mov    (%eax),%cl
8100695f:	84 c9                	test   %cl,%cl
81006961:	74 7b                	je     810069de <L14>
81006963:	38 d9                	cmp    %bl,%cl
81006965:	74 7d                	je     810069e4 <L19>
81006967:	47                   	inc    %edi
81006968:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100696e:	74 22                	je     81006992 <L5>
81006970:	89 f8                	mov    %edi,%eax
81006972:	8a 08                	mov    (%eax),%cl
81006974:	84 c9                	test   %cl,%cl
81006976:	74 66                	je     810069de <L14>
81006978:	38 d9                	cmp    %bl,%cl
8100697a:	74 68                	je     810069e4 <L19>
8100697c:	47                   	inc    %edi
8100697d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006983:	74 0d                	je     81006992 <L5>
81006985:	89 f8                	mov    %edi,%eax
81006987:	8a 08                	mov    (%eax),%cl
81006989:	84 c9                	test   %cl,%cl
8100698b:	74 51                	je     810069de <L14>
8100698d:	38 d9                	cmp    %bl,%cl
8100698f:	74 53                	je     810069e4 <L19>
81006991:	47                   	inc    %edi

81006992 <L5>:
81006992:	89 d9                	mov    %ebx,%ecx
81006994:	c1 e3 08             	shl    $0x8,%ebx
81006997:	83 ef 04             	sub    $0x4,%edi
8100699a:	09 cb                	or     %ecx,%ebx
8100699c:	89 da                	mov    %ebx,%edx
8100699e:	c1 e3 10             	shl    $0x10,%ebx
810069a1:	09 d3                	or     %edx,%ebx

810069a3 <L10>:
810069a3:	83 c7 04             	add    $0x4,%edi
810069a6:	8b 0f                	mov    (%edi),%ecx
810069a8:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810069ae:	89 c8                	mov    %ecx,%eax
810069b0:	f7 d0                	not    %eax
810069b2:	21 c2                	and    %eax,%edx
810069b4:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810069ba:	75 14                	jne    810069d0 <L9>
810069bc:	31 d9                	xor    %ebx,%ecx
810069be:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810069c4:	f7 d1                	not    %ecx
810069c6:	21 ca                	and    %ecx,%edx
810069c8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810069ce:	74 d3                	je     810069a3 <L10>

810069d0 <L9>:
810069d0:	8d 47 ff             	lea    -0x1(%edi),%eax

810069d3 <L15>:
810069d3:	40                   	inc    %eax
810069d4:	8a 10                	mov    (%eax),%dl
810069d6:	84 d2                	test   %dl,%dl
810069d8:	74 04                	je     810069de <L14>
810069da:	38 da                	cmp    %bl,%dl
810069dc:	75 f5                	jne    810069d3 <L15>

810069de <L14>:
810069de:	38 18                	cmp    %bl,(%eax)
810069e0:	74 02                	je     810069e4 <L19>
810069e2:	31 c0                	xor    %eax,%eax

810069e4 <L19>:
810069e4:	8d 65 f8             	lea    -0x8(%ebp),%esp
810069e7:	5b                   	pop    %ebx
810069e8:	5f                   	pop    %edi
810069e9:	c9                   	leave  
810069ea:	c3                   	ret    

810069eb <L25>:
810069eb:	f7 c7 03 00 00 00    	test   $0x3,%edi
810069f1:	74 2b                	je     81006a1e <L26>
810069f3:	89 f8                	mov    %edi,%eax
810069f5:	8a 08                	mov    (%eax),%cl
810069f7:	84 c9                	test   %cl,%cl
810069f9:	74 e9                	je     810069e4 <L19>
810069fb:	47                   	inc    %edi
810069fc:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006a02:	74 1a                	je     81006a1e <L26>
81006a04:	89 f8                	mov    %edi,%eax
81006a06:	8a 08                	mov    (%eax),%cl
81006a08:	84 c9                	test   %cl,%cl
81006a0a:	74 d8                	je     810069e4 <L19>
81006a0c:	47                   	inc    %edi
81006a0d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006a13:	74 09                	je     81006a1e <L26>
81006a15:	89 f8                	mov    %edi,%eax
81006a17:	8a 08                	mov    (%eax),%cl
81006a19:	84 c9                	test   %cl,%cl
81006a1b:	74 c7                	je     810069e4 <L19>
81006a1d:	47                   	inc    %edi

81006a1e <L26>:
81006a1e:	83 ef 04             	sub    $0x4,%edi

81006a21 <L27>:
81006a21:	83 c7 04             	add    $0x4,%edi
81006a24:	8b 0f                	mov    (%edi),%ecx
81006a26:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81006a2c:	89 c8                	mov    %ecx,%eax
81006a2e:	f7 d0                	not    %eax
81006a30:	21 c2                	and    %eax,%edx
81006a32:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81006a38:	74 e7                	je     81006a21 <L27>
81006a3a:	eb 94                	jmp    810069d0 <L9>

81006a3c <strcmp>:
81006a3c:	55                   	push   %ebp
81006a3d:	89 e5                	mov    %esp,%ebp
81006a3f:	83 ec 10             	sub    $0x10,%esp
81006a42:	8b 55 08             	mov    0x8(%ebp),%edx
81006a45:	8b 45 0c             	mov    0xc(%ebp),%eax
81006a48:	09 d0                	or     %edx,%eax
81006a4a:	83 e0 03             	and    $0x3,%eax
81006a4d:	85 c0                	test   %eax,%eax
81006a4f:	75 5e                	jne    81006aaf <strcmp+0x73>
81006a51:	8b 45 08             	mov    0x8(%ebp),%eax
81006a54:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006a57:	8b 45 0c             	mov    0xc(%ebp),%eax
81006a5a:	89 45 f8             	mov    %eax,-0x8(%ebp)
81006a5d:	eb 2c                	jmp    81006a8b <strcmp+0x4f>
81006a5f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006a62:	8b 00                	mov    (%eax),%eax
81006a64:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81006a6a:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006a6d:	8b 00                	mov    (%eax),%eax
81006a6f:	f7 d0                	not    %eax
81006a71:	21 d0                	and    %edx,%eax
81006a73:	25 80 80 80 80       	and    $0x80808080,%eax
81006a78:	85 c0                	test   %eax,%eax
81006a7a:	74 07                	je     81006a83 <strcmp+0x47>
81006a7c:	b8 00 00 00 00       	mov    $0x0,%eax
81006a81:	eb 5c                	jmp    81006adf <strcmp+0xa3>
81006a83:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81006a87:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81006a8b:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006a8e:	8b 10                	mov    (%eax),%edx
81006a90:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006a93:	8b 00                	mov    (%eax),%eax
81006a95:	39 c2                	cmp    %eax,%edx
81006a97:	74 c6                	je     81006a5f <strcmp+0x23>
81006a99:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006a9c:	89 45 08             	mov    %eax,0x8(%ebp)
81006a9f:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006aa2:	89 45 0c             	mov    %eax,0xc(%ebp)
81006aa5:	eb 08                	jmp    81006aaf <strcmp+0x73>
81006aa7:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81006aab:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81006aaf:	8b 45 08             	mov    0x8(%ebp),%eax
81006ab2:	0f b6 00             	movzbl (%eax),%eax
81006ab5:	84 c0                	test   %al,%al
81006ab7:	74 10                	je     81006ac9 <strcmp+0x8d>
81006ab9:	8b 45 08             	mov    0x8(%ebp),%eax
81006abc:	0f b6 10             	movzbl (%eax),%edx
81006abf:	8b 45 0c             	mov    0xc(%ebp),%eax
81006ac2:	0f b6 00             	movzbl (%eax),%eax
81006ac5:	38 c2                	cmp    %al,%dl
81006ac7:	74 de                	je     81006aa7 <strcmp+0x6b>
81006ac9:	8b 45 08             	mov    0x8(%ebp),%eax
81006acc:	0f b6 00             	movzbl (%eax),%eax
81006acf:	0f b6 d0             	movzbl %al,%edx
81006ad2:	8b 45 0c             	mov    0xc(%ebp),%eax
81006ad5:	0f b6 00             	movzbl (%eax),%eax
81006ad8:	0f b6 c8             	movzbl %al,%ecx
81006adb:	89 d0                	mov    %edx,%eax
81006add:	29 c8                	sub    %ecx,%eax
81006adf:	c9                   	leave  
81006ae0:	c3                   	ret    
81006ae1:	66 90                	xchg   %ax,%ax
81006ae3:	66 90                	xchg   %ax,%ax
81006ae5:	66 90                	xchg   %ax,%ax
81006ae7:	66 90                	xchg   %ax,%ax
81006ae9:	66 90                	xchg   %ax,%ax
81006aeb:	66 90                	xchg   %ax,%ax
81006aed:	66 90                	xchg   %ax,%ax
81006aef:	90                   	nop

81006af0 <strlen>:
81006af0:	55                   	push   %ebp
81006af1:	89 e5                	mov    %esp,%ebp
81006af3:	57                   	push   %edi
81006af4:	8b 55 08             	mov    0x8(%ebp),%edx
81006af7:	89 d7                	mov    %edx,%edi
81006af9:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006aff:	74 25                	je     81006b26 <L5>
81006b01:	8a 0f                	mov    (%edi),%cl
81006b03:	47                   	inc    %edi
81006b04:	84 c9                	test   %cl,%cl
81006b06:	74 56                	je     81006b5e <L15>
81006b08:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006b0e:	74 16                	je     81006b26 <L5>
81006b10:	8a 0f                	mov    (%edi),%cl
81006b12:	47                   	inc    %edi
81006b13:	84 c9                	test   %cl,%cl
81006b15:	74 47                	je     81006b5e <L15>
81006b17:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006b1d:	74 07                	je     81006b26 <L5>
81006b1f:	8a 0f                	mov    (%edi),%cl
81006b21:	47                   	inc    %edi
81006b22:	84 c9                	test   %cl,%cl
81006b24:	74 38                	je     81006b5e <L15>

81006b26 <L5>:
81006b26:	83 ef 04             	sub    $0x4,%edi
81006b29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81006b30 <L10>:
81006b30:	83 c7 04             	add    $0x4,%edi
81006b33:	8b 0f                	mov    (%edi),%ecx
81006b35:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
81006b3b:	f7 d1                	not    %ecx
81006b3d:	21 c8                	and    %ecx,%eax
81006b3f:	a9 80 80 80 80       	test   $0x80808080,%eax
81006b44:	74 ea                	je     81006b30 <L10>
81006b46:	f7 d1                	not    %ecx
81006b48:	47                   	inc    %edi
81006b49:	84 c9                	test   %cl,%cl
81006b4b:	74 11                	je     81006b5e <L15>
81006b4d:	47                   	inc    %edi
81006b4e:	c1 e9 08             	shr    $0x8,%ecx
81006b51:	84 c9                	test   %cl,%cl
81006b53:	74 09                	je     81006b5e <L15>
81006b55:	47                   	inc    %edi
81006b56:	c1 e9 08             	shr    $0x8,%ecx
81006b59:	84 c9                	test   %cl,%cl
81006b5b:	74 01                	je     81006b5e <L15>
81006b5d:	47                   	inc    %edi

81006b5e <L15>:
81006b5e:	29 d7                	sub    %edx,%edi
81006b60:	8d 47 ff             	lea    -0x1(%edi),%eax
81006b63:	8d 65 fc             	lea    -0x4(%ebp),%esp
81006b66:	5f                   	pop    %edi
81006b67:	c9                   	leave  
81006b68:	c3                   	ret    

81006b69 <strtok>:
81006b69:	55                   	push   %ebp
81006b6a:	89 e5                	mov    %esp,%ebp
81006b6c:	83 ec 18             	sub    $0x18,%esp
81006b6f:	8b 55 08             	mov    0x8(%ebp),%edx
81006b72:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81006b75:	a1 44 88 00 81       	mov    0x81008844,%eax
81006b7a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006b7d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006b80:	83 c0 5c             	add    $0x5c,%eax
81006b83:	6a 01                	push   $0x1
81006b85:	50                   	push   %eax
81006b86:	51                   	push   %ecx
81006b87:	52                   	push   %edx
81006b88:	e8 05 00 00 00       	call   81006b92 <__strtok_r>
81006b8d:	83 c4 10             	add    $0x10,%esp
81006b90:	c9                   	leave  
81006b91:	c3                   	ret    

81006b92 <__strtok_r>:
81006b92:	55                   	push   %ebp
81006b93:	89 e5                	mov    %esp,%ebp
81006b95:	57                   	push   %edi
81006b96:	56                   	push   %esi
81006b97:	53                   	push   %ebx
81006b98:	83 ec 10             	sub    $0x10,%esp
81006b9b:	8b 45 08             	mov    0x8(%ebp),%eax
81006b9e:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81006ba1:	85 c0                	test   %eax,%eax
81006ba3:	75 13                	jne    81006bb8 <__strtok_r+0x26>
81006ba5:	8b 45 10             	mov    0x10(%ebp),%eax
81006ba8:	8b 00                	mov    (%eax),%eax
81006baa:	85 c0                	test   %eax,%eax
81006bac:	75 0a                	jne    81006bb8 <__strtok_r+0x26>
81006bae:	b8 00 00 00 00       	mov    $0x0,%eax
81006bb3:	e9 92 00 00 00       	jmp    81006c4a <__strtok_r+0xb8>
81006bb8:	90                   	nop
81006bb9:	89 c2                	mov    %eax,%edx
81006bbb:	8d 42 01             	lea    0x1(%edx),%eax
81006bbe:	0f b6 12             	movzbl (%edx),%edx
81006bc1:	0f be f2             	movsbl %dl,%esi
81006bc4:	89 cf                	mov    %ecx,%edi
81006bc6:	eb 1c                	jmp    81006be4 <__strtok_r+0x52>
81006bc8:	39 de                	cmp    %ebx,%esi
81006bca:	75 18                	jne    81006be4 <__strtok_r+0x52>
81006bcc:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006bd0:	74 02                	je     81006bd4 <__strtok_r+0x42>
81006bd2:	eb e5                	jmp    81006bb9 <__strtok_r+0x27>
81006bd4:	8b 55 10             	mov    0x10(%ebp),%edx
81006bd7:	89 02                	mov    %eax,(%edx)
81006bd9:	8d 50 ff             	lea    -0x1(%eax),%edx
81006bdc:	c6 02 00             	movb   $0x0,(%edx)
81006bdf:	83 e8 01             	sub    $0x1,%eax
81006be2:	eb 66                	jmp    81006c4a <__strtok_r+0xb8>
81006be4:	89 fa                	mov    %edi,%edx
81006be6:	8d 7a 01             	lea    0x1(%edx),%edi
81006be9:	0f b6 12             	movzbl (%edx),%edx
81006bec:	0f be da             	movsbl %dl,%ebx
81006bef:	85 db                	test   %ebx,%ebx
81006bf1:	75 d5                	jne    81006bc8 <__strtok_r+0x36>
81006bf3:	85 f6                	test   %esi,%esi
81006bf5:	75 10                	jne    81006c07 <__strtok_r+0x75>
81006bf7:	8b 45 10             	mov    0x10(%ebp),%eax
81006bfa:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81006c00:	b8 00 00 00 00       	mov    $0x0,%eax
81006c05:	eb 43                	jmp    81006c4a <__strtok_r+0xb8>
81006c07:	8d 50 ff             	lea    -0x1(%eax),%edx
81006c0a:	89 55 f0             	mov    %edx,-0x10(%ebp)
81006c0d:	89 c2                	mov    %eax,%edx
81006c0f:	8d 42 01             	lea    0x1(%edx),%eax
81006c12:	0f b6 12             	movzbl (%edx),%edx
81006c15:	0f be f2             	movsbl %dl,%esi
81006c18:	89 cf                	mov    %ecx,%edi
81006c1a:	89 fa                	mov    %edi,%edx
81006c1c:	8d 7a 01             	lea    0x1(%edx),%edi
81006c1f:	0f b6 12             	movzbl (%edx),%edx
81006c22:	0f be da             	movsbl %dl,%ebx
81006c25:	39 f3                	cmp    %esi,%ebx
81006c27:	75 1b                	jne    81006c44 <__strtok_r+0xb2>
81006c29:	85 f6                	test   %esi,%esi
81006c2b:	75 07                	jne    81006c34 <__strtok_r+0xa2>
81006c2d:	b8 00 00 00 00       	mov    $0x0,%eax
81006c32:	eb 06                	jmp    81006c3a <__strtok_r+0xa8>
81006c34:	8d 50 ff             	lea    -0x1(%eax),%edx
81006c37:	c6 02 00             	movb   $0x0,(%edx)
81006c3a:	8b 55 10             	mov    0x10(%ebp),%edx
81006c3d:	89 02                	mov    %eax,(%edx)
81006c3f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006c42:	eb 06                	jmp    81006c4a <__strtok_r+0xb8>
81006c44:	85 db                	test   %ebx,%ebx
81006c46:	75 d2                	jne    81006c1a <__strtok_r+0x88>
81006c48:	eb c3                	jmp    81006c0d <__strtok_r+0x7b>
81006c4a:	83 c4 10             	add    $0x10,%esp
81006c4d:	5b                   	pop    %ebx
81006c4e:	5e                   	pop    %esi
81006c4f:	5f                   	pop    %edi
81006c50:	5d                   	pop    %ebp
81006c51:	c3                   	ret    

81006c52 <strtok_r>:
81006c52:	55                   	push   %ebp
81006c53:	89 e5                	mov    %esp,%ebp
81006c55:	8b 45 08             	mov    0x8(%ebp),%eax
81006c58:	8b 55 0c             	mov    0xc(%ebp),%edx
81006c5b:	6a 01                	push   $0x1
81006c5d:	ff 75 10             	pushl  0x10(%ebp)
81006c60:	52                   	push   %edx
81006c61:	50                   	push   %eax
81006c62:	e8 2b ff ff ff       	call   81006b92 <__strtok_r>
81006c67:	83 c4 10             	add    $0x10,%esp
81006c6a:	c9                   	leave  
81006c6b:	c3                   	ret    

81006c6c <__locale_ctype_ptr_l>:
81006c6c:	55                   	push   %ebp
81006c6d:	89 e5                	mov    %esp,%ebp
81006c6f:	b8 e0 82 00 81       	mov    $0x810082e0,%eax
81006c74:	5d                   	pop    %ebp
81006c75:	c3                   	ret    

81006c76 <__get_global_locale>:
81006c76:	55                   	push   %ebp
81006c77:	89 e5                	mov    %esp,%ebp
81006c79:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81006c7e:	5d                   	pop    %ebp
81006c7f:	c3                   	ret    

81006c80 <__get_current_locale>:
81006c80:	55                   	push   %ebp
81006c81:	89 e5                	mov    %esp,%ebp
81006c83:	e8 ee ff ff ff       	call   81006c76 <__get_global_locale>
81006c88:	5d                   	pop    %ebp
81006c89:	c3                   	ret    

81006c8a <_strtol_l>:
81006c8a:	55                   	push   %ebp
81006c8b:	89 e5                	mov    %esp,%ebp
81006c8d:	57                   	push   %edi
81006c8e:	56                   	push   %esi
81006c8f:	53                   	push   %ebx
81006c90:	83 ec 1c             	sub    $0x1c,%esp
81006c93:	8b 75 0c             	mov    0xc(%ebp),%esi
81006c96:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006c9d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006ca1:	78 0c                	js     81006caf <_strtol_l+0x25>
81006ca3:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81006ca7:	74 06                	je     81006caf <_strtol_l+0x25>
81006ca9:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
81006cad:	7e 15                	jle    81006cc4 <_strtol_l+0x3a>
81006caf:	e8 44 06 00 00       	call   810072f8 <__errno>
81006cb4:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81006cba:	b8 00 00 00 00       	mov    $0x0,%eax
81006cbf:	e9 90 01 00 00       	jmp    81006e54 <_strtol_l+0x1ca>
81006cc4:	89 f0                	mov    %esi,%eax
81006cc6:	8d 70 01             	lea    0x1(%eax),%esi
81006cc9:	0f b6 00             	movzbl (%eax),%eax
81006ccc:	0f b6 d8             	movzbl %al,%ebx
81006ccf:	83 ec 0c             	sub    $0xc,%esp
81006cd2:	ff 75 18             	pushl  0x18(%ebp)
81006cd5:	e8 92 ff ff ff       	call   81006c6c <__locale_ctype_ptr_l>
81006cda:	83 c4 10             	add    $0x10,%esp
81006cdd:	89 da                	mov    %ebx,%edx
81006cdf:	83 c2 01             	add    $0x1,%edx
81006ce2:	01 d0                	add    %edx,%eax
81006ce4:	0f b6 00             	movzbl (%eax),%eax
81006ce7:	0f be c0             	movsbl %al,%eax
81006cea:	83 e0 08             	and    $0x8,%eax
81006ced:	85 c0                	test   %eax,%eax
81006cef:	75 d3                	jne    81006cc4 <_strtol_l+0x3a>
81006cf1:	83 fb 2d             	cmp    $0x2d,%ebx
81006cf4:	75 14                	jne    81006d0a <_strtol_l+0x80>
81006cf6:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81006cfd:	89 f0                	mov    %esi,%eax
81006cff:	8d 70 01             	lea    0x1(%eax),%esi
81006d02:	0f b6 00             	movzbl (%eax),%eax
81006d05:	0f b6 d8             	movzbl %al,%ebx
81006d08:	eb 10                	jmp    81006d1a <_strtol_l+0x90>
81006d0a:	83 fb 2b             	cmp    $0x2b,%ebx
81006d0d:	75 0b                	jne    81006d1a <_strtol_l+0x90>
81006d0f:	89 f0                	mov    %esi,%eax
81006d11:	8d 70 01             	lea    0x1(%eax),%esi
81006d14:	0f b6 00             	movzbl (%eax),%eax
81006d17:	0f b6 d8             	movzbl %al,%ebx
81006d1a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006d1e:	74 06                	je     81006d26 <_strtol_l+0x9c>
81006d20:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81006d24:	75 26                	jne    81006d4c <_strtol_l+0xc2>
81006d26:	83 fb 30             	cmp    $0x30,%ebx
81006d29:	75 21                	jne    81006d4c <_strtol_l+0xc2>
81006d2b:	0f b6 06             	movzbl (%esi),%eax
81006d2e:	3c 78                	cmp    $0x78,%al
81006d30:	74 07                	je     81006d39 <_strtol_l+0xaf>
81006d32:	0f b6 06             	movzbl (%esi),%eax
81006d35:	3c 58                	cmp    $0x58,%al
81006d37:	75 13                	jne    81006d4c <_strtol_l+0xc2>
81006d39:	8d 46 01             	lea    0x1(%esi),%eax
81006d3c:	0f b6 00             	movzbl (%eax),%eax
81006d3f:	0f b6 d8             	movzbl %al,%ebx
81006d42:	83 c6 02             	add    $0x2,%esi
81006d45:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
81006d4c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006d50:	75 14                	jne    81006d66 <_strtol_l+0xdc>
81006d52:	83 fb 30             	cmp    $0x30,%ebx
81006d55:	75 07                	jne    81006d5e <_strtol_l+0xd4>
81006d57:	b8 08 00 00 00       	mov    $0x8,%eax
81006d5c:	eb 05                	jmp    81006d63 <_strtol_l+0xd9>
81006d5e:	b8 0a 00 00 00       	mov    $0xa,%eax
81006d63:	89 45 14             	mov    %eax,0x14(%ebp)
81006d66:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006d6a:	74 07                	je     81006d73 <_strtol_l+0xe9>
81006d6c:	b8 00 00 00 80       	mov    $0x80000000,%eax
81006d71:	eb 05                	jmp    81006d78 <_strtol_l+0xee>
81006d73:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006d78:	89 c7                	mov    %eax,%edi
81006d7a:	8b 4d 14             	mov    0x14(%ebp),%ecx
81006d7d:	89 f8                	mov    %edi,%eax
81006d7f:	ba 00 00 00 00       	mov    $0x0,%edx
81006d84:	f7 f1                	div    %ecx
81006d86:	89 d0                	mov    %edx,%eax
81006d88:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006d8b:	8b 4d 14             	mov    0x14(%ebp),%ecx
81006d8e:	89 f8                	mov    %edi,%eax
81006d90:	ba 00 00 00 00       	mov    $0x0,%edx
81006d95:	f7 f1                	div    %ecx
81006d97:	89 c2                	mov    %eax,%edx
81006d99:	bf 00 00 00 00       	mov    $0x0,%edi
81006d9e:	b9 00 00 00 00       	mov    $0x0,%ecx
81006da3:	83 fb 2f             	cmp    $0x2f,%ebx
81006da6:	7e 0a                	jle    81006db2 <_strtol_l+0x128>
81006da8:	83 fb 39             	cmp    $0x39,%ebx
81006dab:	7f 05                	jg     81006db2 <_strtol_l+0x128>
81006dad:	83 eb 30             	sub    $0x30,%ebx
81006db0:	eb 1c                	jmp    81006dce <_strtol_l+0x144>
81006db2:	83 fb 40             	cmp    $0x40,%ebx
81006db5:	7e 0a                	jle    81006dc1 <_strtol_l+0x137>
81006db7:	83 fb 5a             	cmp    $0x5a,%ebx
81006dba:	7f 05                	jg     81006dc1 <_strtol_l+0x137>
81006dbc:	83 eb 37             	sub    $0x37,%ebx
81006dbf:	eb 0d                	jmp    81006dce <_strtol_l+0x144>
81006dc1:	83 fb 60             	cmp    $0x60,%ebx
81006dc4:	7e 46                	jle    81006e0c <_strtol_l+0x182>
81006dc6:	83 fb 7a             	cmp    $0x7a,%ebx
81006dc9:	7f 41                	jg     81006e0c <_strtol_l+0x182>
81006dcb:	83 eb 57             	sub    $0x57,%ebx
81006dce:	3b 5d 14             	cmp    0x14(%ebp),%ebx
81006dd1:	7d 38                	jge    81006e0b <_strtol_l+0x181>
81006dd3:	89 c8                	mov    %ecx,%eax
81006dd5:	85 c0                	test   %eax,%eax
81006dd7:	78 0f                	js     81006de8 <_strtol_l+0x15e>
81006dd9:	89 d0                	mov    %edx,%eax
81006ddb:	39 c7                	cmp    %eax,%edi
81006ddd:	77 09                	ja     81006de8 <_strtol_l+0x15e>
81006ddf:	39 c7                	cmp    %eax,%edi
81006de1:	75 0c                	jne    81006def <_strtol_l+0x165>
81006de3:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81006de6:	7e 07                	jle    81006def <_strtol_l+0x165>
81006de8:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
81006ded:	eb 0f                	jmp    81006dfe <_strtol_l+0x174>
81006def:	b9 01 00 00 00       	mov    $0x1,%ecx
81006df4:	8b 45 14             	mov    0x14(%ebp),%eax
81006df7:	0f af f8             	imul   %eax,%edi
81006dfa:	89 d8                	mov    %ebx,%eax
81006dfc:	01 c7                	add    %eax,%edi
81006dfe:	89 f0                	mov    %esi,%eax
81006e00:	8d 70 01             	lea    0x1(%eax),%esi
81006e03:	0f b6 00             	movzbl (%eax),%eax
81006e06:	0f b6 d8             	movzbl %al,%ebx
81006e09:	eb 98                	jmp    81006da3 <_strtol_l+0x119>
81006e0b:	90                   	nop
81006e0c:	89 c8                	mov    %ecx,%eax
81006e0e:	85 c0                	test   %eax,%eax
81006e10:	79 1f                	jns    81006e31 <_strtol_l+0x1a7>
81006e12:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006e16:	74 07                	je     81006e1f <_strtol_l+0x195>
81006e18:	b8 00 00 00 80       	mov    $0x80000000,%eax
81006e1d:	eb 05                	jmp    81006e24 <_strtol_l+0x19a>
81006e1f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006e24:	89 c7                	mov    %eax,%edi
81006e26:	8b 45 08             	mov    0x8(%ebp),%eax
81006e29:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
81006e2f:	eb 08                	jmp    81006e39 <_strtol_l+0x1af>
81006e31:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006e35:	74 02                	je     81006e39 <_strtol_l+0x1af>
81006e37:	f7 df                	neg    %edi
81006e39:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006e3d:	74 13                	je     81006e52 <_strtol_l+0x1c8>
81006e3f:	89 c8                	mov    %ecx,%eax
81006e41:	85 c0                	test   %eax,%eax
81006e43:	74 05                	je     81006e4a <_strtol_l+0x1c0>
81006e45:	8d 46 ff             	lea    -0x1(%esi),%eax
81006e48:	eb 03                	jmp    81006e4d <_strtol_l+0x1c3>
81006e4a:	8b 45 0c             	mov    0xc(%ebp),%eax
81006e4d:	8b 55 10             	mov    0x10(%ebp),%edx
81006e50:	89 02                	mov    %eax,(%edx)
81006e52:	89 f8                	mov    %edi,%eax
81006e54:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006e57:	5b                   	pop    %ebx
81006e58:	5e                   	pop    %esi
81006e59:	5f                   	pop    %edi
81006e5a:	5d                   	pop    %ebp
81006e5b:	c3                   	ret    

81006e5c <_strtol_r>:
81006e5c:	55                   	push   %ebp
81006e5d:	89 e5                	mov    %esp,%ebp
81006e5f:	83 ec 08             	sub    $0x8,%esp
81006e62:	e8 19 fe ff ff       	call   81006c80 <__get_current_locale>
81006e67:	83 ec 0c             	sub    $0xc,%esp
81006e6a:	50                   	push   %eax
81006e6b:	ff 75 14             	pushl  0x14(%ebp)
81006e6e:	ff 75 10             	pushl  0x10(%ebp)
81006e71:	ff 75 0c             	pushl  0xc(%ebp)
81006e74:	ff 75 08             	pushl  0x8(%ebp)
81006e77:	e8 0e fe ff ff       	call   81006c8a <_strtol_l>
81006e7c:	83 c4 20             	add    $0x20,%esp
81006e7f:	c9                   	leave  
81006e80:	c3                   	ret    

81006e81 <strtol_l>:
81006e81:	55                   	push   %ebp
81006e82:	89 e5                	mov    %esp,%ebp
81006e84:	83 ec 08             	sub    $0x8,%esp
81006e87:	a1 44 88 00 81       	mov    0x81008844,%eax
81006e8c:	83 ec 0c             	sub    $0xc,%esp
81006e8f:	ff 75 14             	pushl  0x14(%ebp)
81006e92:	ff 75 10             	pushl  0x10(%ebp)
81006e95:	ff 75 0c             	pushl  0xc(%ebp)
81006e98:	ff 75 08             	pushl  0x8(%ebp)
81006e9b:	50                   	push   %eax
81006e9c:	e8 e9 fd ff ff       	call   81006c8a <_strtol_l>
81006ea1:	83 c4 20             	add    $0x20,%esp
81006ea4:	c9                   	leave  
81006ea5:	c3                   	ret    

81006ea6 <strtol>:
81006ea6:	55                   	push   %ebp
81006ea7:	89 e5                	mov    %esp,%ebp
81006ea9:	83 ec 08             	sub    $0x8,%esp
81006eac:	e8 cf fd ff ff       	call   81006c80 <__get_current_locale>
81006eb1:	8b 15 44 88 00 81    	mov    0x81008844,%edx
81006eb7:	83 ec 0c             	sub    $0xc,%esp
81006eba:	50                   	push   %eax
81006ebb:	ff 75 10             	pushl  0x10(%ebp)
81006ebe:	ff 75 0c             	pushl  0xc(%ebp)
81006ec1:	ff 75 08             	pushl  0x8(%ebp)
81006ec4:	52                   	push   %edx
81006ec5:	e8 c0 fd ff ff       	call   81006c8a <_strtol_l>
81006eca:	83 c4 20             	add    $0x20,%esp
81006ecd:	c9                   	leave  
81006ece:	c3                   	ret    

81006ecf <__swbuf_r>:
81006ecf:	55                   	push   %ebp
81006ed0:	89 e5                	mov    %esp,%ebp
81006ed2:	57                   	push   %edi
81006ed3:	56                   	push   %esi
81006ed4:	53                   	push   %ebx
81006ed5:	83 ec 1c             	sub    $0x1c,%esp
81006ed8:	8b 7d 0c             	mov    0xc(%ebp),%edi
81006edb:	8b 5d 10             	mov    0x10(%ebp),%ebx
81006ede:	8b 45 08             	mov    0x8(%ebp),%eax
81006ee1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006ee4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006ee8:	74 18                	je     81006f02 <__swbuf_r+0x33>
81006eea:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006eed:	8b 40 38             	mov    0x38(%eax),%eax
81006ef0:	85 c0                	test   %eax,%eax
81006ef2:	75 0e                	jne    81006f02 <__swbuf_r+0x33>
81006ef4:	83 ec 0c             	sub    $0xc,%esp
81006ef7:	ff 75 e4             	pushl  -0x1c(%ebp)
81006efa:	e8 87 a9 ff ff       	call   81001886 <__sinit>
81006eff:	83 c4 10             	add    $0x10,%esp
81006f02:	8b 43 18             	mov    0x18(%ebx),%eax
81006f05:	89 43 08             	mov    %eax,0x8(%ebx)
81006f08:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006f0c:	98                   	cwtl   
81006f0d:	83 e0 08             	and    $0x8,%eax
81006f10:	85 c0                	test   %eax,%eax
81006f12:	74 07                	je     81006f1b <__swbuf_r+0x4c>
81006f14:	8b 43 10             	mov    0x10(%ebx),%eax
81006f17:	85 c0                	test   %eax,%eax
81006f19:	75 1d                	jne    81006f38 <__swbuf_r+0x69>
81006f1b:	83 ec 08             	sub    $0x8,%esp
81006f1e:	53                   	push   %ebx
81006f1f:	ff 75 08             	pushl  0x8(%ebp)
81006f22:	e8 21 01 00 00       	call   81007048 <__swsetup_r>
81006f27:	83 c4 10             	add    $0x10,%esp
81006f2a:	85 c0                	test   %eax,%eax
81006f2c:	74 0a                	je     81006f38 <__swbuf_r+0x69>
81006f2e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006f33:	e9 a1 00 00 00       	jmp    81006fd9 <__swbuf_r+0x10a>
81006f38:	89 f8                	mov    %edi,%eax
81006f3a:	0f b6 f8             	movzbl %al,%edi
81006f3d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006f41:	98                   	cwtl   
81006f42:	25 00 20 00 00       	and    $0x2000,%eax
81006f47:	85 c0                	test   %eax,%eax
81006f49:	75 14                	jne    81006f5f <__swbuf_r+0x90>
81006f4b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006f4f:	80 cc 20             	or     $0x20,%ah
81006f52:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006f56:	8b 43 64             	mov    0x64(%ebx),%eax
81006f59:	80 e4 df             	and    $0xdf,%ah
81006f5c:	89 43 64             	mov    %eax,0x64(%ebx)
81006f5f:	8b 03                	mov    (%ebx),%eax
81006f61:	8b 53 10             	mov    0x10(%ebx),%edx
81006f64:	29 d0                	sub    %edx,%eax
81006f66:	89 c6                	mov    %eax,%esi
81006f68:	8b 43 14             	mov    0x14(%ebx),%eax
81006f6b:	39 c6                	cmp    %eax,%esi
81006f6d:	7c 1f                	jl     81006f8e <__swbuf_r+0xbf>
81006f6f:	83 ec 08             	sub    $0x8,%esp
81006f72:	53                   	push   %ebx
81006f73:	ff 75 08             	pushl  0x8(%ebp)
81006f76:	e8 1e a3 ff ff       	call   81001299 <_fflush_r>
81006f7b:	83 c4 10             	add    $0x10,%esp
81006f7e:	85 c0                	test   %eax,%eax
81006f80:	74 07                	je     81006f89 <__swbuf_r+0xba>
81006f82:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006f87:	eb 50                	jmp    81006fd9 <__swbuf_r+0x10a>
81006f89:	be 00 00 00 00       	mov    $0x0,%esi
81006f8e:	8b 43 08             	mov    0x8(%ebx),%eax
81006f91:	83 e8 01             	sub    $0x1,%eax
81006f94:	89 43 08             	mov    %eax,0x8(%ebx)
81006f97:	8b 03                	mov    (%ebx),%eax
81006f99:	8d 50 01             	lea    0x1(%eax),%edx
81006f9c:	89 13                	mov    %edx,(%ebx)
81006f9e:	89 fa                	mov    %edi,%edx
81006fa0:	88 10                	mov    %dl,(%eax)
81006fa2:	83 c6 01             	add    $0x1,%esi
81006fa5:	8b 43 14             	mov    0x14(%ebx),%eax
81006fa8:	39 c6                	cmp    %eax,%esi
81006faa:	74 11                	je     81006fbd <__swbuf_r+0xee>
81006fac:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006fb0:	98                   	cwtl   
81006fb1:	83 e0 01             	and    $0x1,%eax
81006fb4:	85 c0                	test   %eax,%eax
81006fb6:	74 1f                	je     81006fd7 <__swbuf_r+0x108>
81006fb8:	83 ff 0a             	cmp    $0xa,%edi
81006fbb:	75 1a                	jne    81006fd7 <__swbuf_r+0x108>
81006fbd:	83 ec 08             	sub    $0x8,%esp
81006fc0:	53                   	push   %ebx
81006fc1:	ff 75 08             	pushl  0x8(%ebp)
81006fc4:	e8 d0 a2 ff ff       	call   81001299 <_fflush_r>
81006fc9:	83 c4 10             	add    $0x10,%esp
81006fcc:	85 c0                	test   %eax,%eax
81006fce:	74 07                	je     81006fd7 <__swbuf_r+0x108>
81006fd0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006fd5:	eb 02                	jmp    81006fd9 <__swbuf_r+0x10a>
81006fd7:	89 f8                	mov    %edi,%eax
81006fd9:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006fdc:	5b                   	pop    %ebx
81006fdd:	5e                   	pop    %esi
81006fde:	5f                   	pop    %edi
81006fdf:	5d                   	pop    %ebp
81006fe0:	c3                   	ret    

81006fe1 <__swbuf>:
81006fe1:	55                   	push   %ebp
81006fe2:	89 e5                	mov    %esp,%ebp
81006fe4:	83 ec 08             	sub    $0x8,%esp
81006fe7:	8b 55 08             	mov    0x8(%ebp),%edx
81006fea:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81006fed:	a1 44 88 00 81       	mov    0x81008844,%eax
81006ff2:	83 ec 04             	sub    $0x4,%esp
81006ff5:	51                   	push   %ecx
81006ff6:	52                   	push   %edx
81006ff7:	50                   	push   %eax
81006ff8:	e8 d2 fe ff ff       	call   81006ecf <__swbuf_r>
81006ffd:	83 c4 10             	add    $0x10,%esp
81007000:	c9                   	leave  
81007001:	c3                   	ret    

81007002 <_write_r>:
81007002:	55                   	push   %ebp
81007003:	89 e5                	mov    %esp,%ebp
81007005:	83 ec 18             	sub    $0x18,%esp
81007008:	c7 05 8c 92 00 81 00 	movl   $0x0,0x8100928c
8100700f:	00 00 00 
81007012:	83 ec 04             	sub    $0x4,%esp
81007015:	ff 75 14             	pushl  0x14(%ebp)
81007018:	ff 75 10             	pushl  0x10(%ebp)
8100701b:	ff 75 0c             	pushl  0xc(%ebp)
8100701e:	e8 29 9c ff ff       	call   81000c4c <write>
81007023:	83 c4 10             	add    $0x10,%esp
81007026:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007029:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100702d:	75 14                	jne    81007043 <_write_r+0x41>
8100702f:	a1 8c 92 00 81       	mov    0x8100928c,%eax
81007034:	85 c0                	test   %eax,%eax
81007036:	74 0b                	je     81007043 <_write_r+0x41>
81007038:	8b 15 8c 92 00 81    	mov    0x8100928c,%edx
8100703e:	8b 45 08             	mov    0x8(%ebp),%eax
81007041:	89 10                	mov    %edx,(%eax)
81007043:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007046:	c9                   	leave  
81007047:	c3                   	ret    

81007048 <__swsetup_r>:
81007048:	55                   	push   %ebp
81007049:	89 e5                	mov    %esp,%ebp
8100704b:	53                   	push   %ebx
8100704c:	83 ec 14             	sub    $0x14,%esp
8100704f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81007052:	a1 44 88 00 81       	mov    0x81008844,%eax
81007057:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100705a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100705e:	74 18                	je     81007078 <__swsetup_r+0x30>
81007060:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007063:	8b 40 38             	mov    0x38(%eax),%eax
81007066:	85 c0                	test   %eax,%eax
81007068:	75 0e                	jne    81007078 <__swsetup_r+0x30>
8100706a:	83 ec 0c             	sub    $0xc,%esp
8100706d:	ff 75 f4             	pushl  -0xc(%ebp)
81007070:	e8 11 a8 ff ff       	call   81001886 <__sinit>
81007075:	83 c4 10             	add    $0x10,%esp
81007078:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100707c:	98                   	cwtl   
8100707d:	83 e0 08             	and    $0x8,%eax
81007080:	85 c0                	test   %eax,%eax
81007082:	0f 85 82 00 00 00    	jne    8100710a <__swsetup_r+0xc2>
81007088:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100708c:	98                   	cwtl   
8100708d:	83 e0 10             	and    $0x10,%eax
81007090:	85 c0                	test   %eax,%eax
81007092:	75 1e                	jne    810070b2 <__swsetup_r+0x6a>
81007094:	8b 45 08             	mov    0x8(%ebp),%eax
81007097:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
8100709d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810070a1:	83 c8 40             	or     $0x40,%eax
810070a4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810070a8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810070ad:	e9 ec 00 00 00       	jmp    8100719e <__swsetup_r+0x156>
810070b2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810070b6:	98                   	cwtl   
810070b7:	83 e0 04             	and    $0x4,%eax
810070ba:	85 c0                	test   %eax,%eax
810070bc:	74 41                	je     810070ff <__swsetup_r+0xb7>
810070be:	8b 43 30             	mov    0x30(%ebx),%eax
810070c1:	85 c0                	test   %eax,%eax
810070c3:	74 23                	je     810070e8 <__swsetup_r+0xa0>
810070c5:	8b 53 30             	mov    0x30(%ebx),%edx
810070c8:	8d 43 40             	lea    0x40(%ebx),%eax
810070cb:	39 c2                	cmp    %eax,%edx
810070cd:	74 12                	je     810070e1 <__swsetup_r+0x99>
810070cf:	8b 43 30             	mov    0x30(%ebx),%eax
810070d2:	83 ec 08             	sub    $0x8,%esp
810070d5:	50                   	push   %eax
810070d6:	ff 75 08             	pushl  0x8(%ebp)
810070d9:	e8 5d ad ff ff       	call   81001e3b <_free_r>
810070de:	83 c4 10             	add    $0x10,%esp
810070e1:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810070e8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810070ec:	83 e0 db             	and    $0xffffffdb,%eax
810070ef:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810070f3:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810070fa:	8b 43 10             	mov    0x10(%ebx),%eax
810070fd:	89 03                	mov    %eax,(%ebx)
810070ff:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007103:	83 c8 08             	or     $0x8,%eax
81007106:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100710a:	8b 43 10             	mov    0x10(%ebx),%eax
8100710d:	85 c0                	test   %eax,%eax
8100710f:	75 2b                	jne    8100713c <__swsetup_r+0xf4>
81007111:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007115:	98                   	cwtl   
81007116:	25 00 02 00 00       	and    $0x200,%eax
8100711b:	85 c0                	test   %eax,%eax
8100711d:	74 0e                	je     8100712d <__swsetup_r+0xe5>
8100711f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007123:	98                   	cwtl   
81007124:	25 80 00 00 00       	and    $0x80,%eax
81007129:	85 c0                	test   %eax,%eax
8100712b:	74 0f                	je     8100713c <__swsetup_r+0xf4>
8100712d:	83 ec 08             	sub    $0x8,%esp
81007130:	53                   	push   %ebx
81007131:	ff 75 08             	pushl  0x8(%ebp)
81007134:	e8 cb cb ff ff       	call   81003d04 <__smakebuf_r>
81007139:	83 c4 10             	add    $0x10,%esp
8100713c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007140:	98                   	cwtl   
81007141:	83 e0 01             	and    $0x1,%eax
81007144:	85 c0                	test   %eax,%eax
81007146:	74 11                	je     81007159 <__swsetup_r+0x111>
81007148:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100714f:	8b 43 14             	mov    0x14(%ebx),%eax
81007152:	f7 d8                	neg    %eax
81007154:	89 43 18             	mov    %eax,0x18(%ebx)
81007157:	eb 19                	jmp    81007172 <__swsetup_r+0x12a>
81007159:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100715d:	98                   	cwtl   
8100715e:	83 e0 02             	and    $0x2,%eax
81007161:	85 c0                	test   %eax,%eax
81007163:	75 05                	jne    8100716a <__swsetup_r+0x122>
81007165:	8b 43 14             	mov    0x14(%ebx),%eax
81007168:	eb 05                	jmp    8100716f <__swsetup_r+0x127>
8100716a:	b8 00 00 00 00       	mov    $0x0,%eax
8100716f:	89 43 08             	mov    %eax,0x8(%ebx)
81007172:	8b 43 10             	mov    0x10(%ebx),%eax
81007175:	85 c0                	test   %eax,%eax
81007177:	75 20                	jne    81007199 <__swsetup_r+0x151>
81007179:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100717d:	98                   	cwtl   
8100717e:	25 80 00 00 00       	and    $0x80,%eax
81007183:	85 c0                	test   %eax,%eax
81007185:	74 12                	je     81007199 <__swsetup_r+0x151>
81007187:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100718b:	83 c8 40             	or     $0x40,%eax
8100718e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81007192:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007197:	eb 05                	jmp    8100719e <__swsetup_r+0x156>
81007199:	b8 00 00 00 00       	mov    $0x0,%eax
8100719e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810071a1:	c9                   	leave  
810071a2:	c3                   	ret    

810071a3 <__call_exitprocs>:
810071a3:	55                   	push   %ebp
810071a4:	89 e5                	mov    %esp,%ebp
810071a6:	57                   	push   %edi
810071a7:	56                   	push   %esi
810071a8:	53                   	push   %ebx
810071a9:	83 ec 1c             	sub    $0x1c,%esp
810071ac:	a1 84 80 00 81       	mov    0x81008084,%eax
810071b1:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
810071b7:	a1 84 80 00 81       	mov    0x81008084,%eax
810071bc:	05 48 01 00 00       	add    $0x148,%eax
810071c1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810071c4:	90                   	nop
810071c5:	85 db                	test   %ebx,%ebx
810071c7:	0f 84 e1 00 00 00    	je     810072ae <__call_exitprocs+0x10b>
810071cd:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
810071d3:	8b 43 04             	mov    0x4(%ebx),%eax
810071d6:	8d 70 ff             	lea    -0x1(%eax),%esi
810071d9:	e9 c6 00 00 00       	jmp    810072a4 <__call_exitprocs+0x101>
810071de:	b8 01 00 00 00       	mov    $0x1,%eax
810071e3:	89 f1                	mov    %esi,%ecx
810071e5:	d3 e0                	shl    %cl,%eax
810071e7:	89 45 e0             	mov    %eax,-0x20(%ebp)
810071ea:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810071ee:	74 17                	je     81007207 <__call_exitprocs+0x64>
810071f0:	85 ff                	test   %edi,%edi
810071f2:	0f 84 a5 00 00 00    	je     8100729d <__call_exitprocs+0xfa>
810071f8:	8d 46 20             	lea    0x20(%esi),%eax
810071fb:	8b 04 87             	mov    (%edi,%eax,4),%eax
810071fe:	39 45 0c             	cmp    %eax,0xc(%ebp)
81007201:	0f 85 96 00 00 00    	jne    8100729d <__call_exitprocs+0xfa>
81007207:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
8100720b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100720e:	8b 43 04             	mov    0x4(%ebx),%eax
81007211:	83 e8 01             	sub    $0x1,%eax
81007214:	39 c6                	cmp    %eax,%esi
81007216:	75 0b                	jne    81007223 <__call_exitprocs+0x80>
81007218:	8b 43 04             	mov    0x4(%ebx),%eax
8100721b:	83 e8 01             	sub    $0x1,%eax
8100721e:	89 43 04             	mov    %eax,0x4(%ebx)
81007221:	eb 08                	jmp    8100722b <__call_exitprocs+0x88>
81007223:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
8100722a:	00 
8100722b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100722f:	74 6f                	je     810072a0 <__call_exitprocs+0xfd>
81007231:	8b 43 04             	mov    0x4(%ebx),%eax
81007234:	89 45 d8             	mov    %eax,-0x28(%ebp)
81007237:	85 ff                	test   %edi,%edi
81007239:	74 0f                	je     8100724a <__call_exitprocs+0xa7>
8100723b:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81007241:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007244:	21 d0                	and    %edx,%eax
81007246:	85 c0                	test   %eax,%eax
81007248:	75 07                	jne    81007251 <__call_exitprocs+0xae>
8100724a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100724d:	ff d0                	call   *%eax
8100724f:	eb 32                	jmp    81007283 <__call_exitprocs+0xe0>
81007251:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
81007257:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100725a:	21 d0                	and    %edx,%eax
8100725c:	85 c0                	test   %eax,%eax
8100725e:	75 14                	jne    81007274 <__call_exitprocs+0xd1>
81007260:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81007263:	83 ec 08             	sub    $0x8,%esp
81007266:	50                   	push   %eax
81007267:	ff 75 08             	pushl  0x8(%ebp)
8100726a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100726d:	ff d0                	call   *%eax
8100726f:	83 c4 10             	add    $0x10,%esp
81007272:	eb 0f                	jmp    81007283 <__call_exitprocs+0xe0>
81007274:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81007277:	83 ec 0c             	sub    $0xc,%esp
8100727a:	50                   	push   %eax
8100727b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100727e:	ff d0                	call   *%eax
81007280:	83 c4 10             	add    $0x10,%esp
81007283:	8b 43 04             	mov    0x4(%ebx),%eax
81007286:	39 45 d8             	cmp    %eax,-0x28(%ebp)
81007289:	0f 85 1d ff ff ff    	jne    810071ac <__call_exitprocs+0x9>
8100728f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007292:	8b 00                	mov    (%eax),%eax
81007294:	39 c3                	cmp    %eax,%ebx
81007296:	74 09                	je     810072a1 <__call_exitprocs+0xfe>
81007298:	e9 0f ff ff ff       	jmp    810071ac <__call_exitprocs+0x9>
8100729d:	90                   	nop
8100729e:	eb 01                	jmp    810072a1 <__call_exitprocs+0xfe>
810072a0:	90                   	nop
810072a1:	83 ee 01             	sub    $0x1,%esi
810072a4:	85 f6                	test   %esi,%esi
810072a6:	0f 89 32 ff ff ff    	jns    810071de <__call_exitprocs+0x3b>
810072ac:	eb 01                	jmp    810072af <__call_exitprocs+0x10c>
810072ae:	90                   	nop
810072af:	90                   	nop
810072b0:	8d 65 f4             	lea    -0xc(%ebp),%esp
810072b3:	5b                   	pop    %ebx
810072b4:	5e                   	pop    %esi
810072b5:	5f                   	pop    %edi
810072b6:	5d                   	pop    %ebp
810072b7:	c3                   	ret    

810072b8 <_close_r>:
810072b8:	55                   	push   %ebp
810072b9:	89 e5                	mov    %esp,%ebp
810072bb:	83 ec 18             	sub    $0x18,%esp
810072be:	c7 05 8c 92 00 81 00 	movl   $0x0,0x8100928c
810072c5:	00 00 00 
810072c8:	83 ec 0c             	sub    $0xc,%esp
810072cb:	ff 75 0c             	pushl  0xc(%ebp)
810072ce:	e8 a6 99 ff ff       	call   81000c79 <close>
810072d3:	83 c4 10             	add    $0x10,%esp
810072d6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810072d9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810072dd:	75 14                	jne    810072f3 <_close_r+0x3b>
810072df:	a1 8c 92 00 81       	mov    0x8100928c,%eax
810072e4:	85 c0                	test   %eax,%eax
810072e6:	74 0b                	je     810072f3 <_close_r+0x3b>
810072e8:	8b 15 8c 92 00 81    	mov    0x8100928c,%edx
810072ee:	8b 45 08             	mov    0x8(%ebp),%eax
810072f1:	89 10                	mov    %edx,(%eax)
810072f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810072f6:	c9                   	leave  
810072f7:	c3                   	ret    

810072f8 <__errno>:
810072f8:	55                   	push   %ebp
810072f9:	89 e5                	mov    %esp,%ebp
810072fb:	a1 44 88 00 81       	mov    0x81008844,%eax
81007300:	5d                   	pop    %ebp
81007301:	c3                   	ret    

81007302 <__sflags>:
81007302:	55                   	push   %ebp
81007303:	89 e5                	mov    %esp,%ebp
81007305:	57                   	push   %edi
81007306:	56                   	push   %esi
81007307:	53                   	push   %ebx
81007308:	8b 55 0c             	mov    0xc(%ebp),%edx
8100730b:	0f b6 02             	movzbl (%edx),%eax
8100730e:	0f be c0             	movsbl %al,%eax
81007311:	83 f8 77             	cmp    $0x77,%eax
81007314:	74 20                	je     81007336 <__sflags+0x34>
81007316:	83 f8 77             	cmp    $0x77,%eax
81007319:	7f 3d                	jg     81007358 <__sflags+0x56>
8100731b:	83 f8 61             	cmp    $0x61,%eax
8100731e:	74 27                	je     81007347 <__sflags+0x45>
81007320:	83 f8 72             	cmp    $0x72,%eax
81007323:	75 33                	jne    81007358 <__sflags+0x56>
81007325:	be 04 00 00 00       	mov    $0x4,%esi
8100732a:	bb 00 00 00 00       	mov    $0x0,%ebx
8100732f:	bf 00 00 00 00       	mov    $0x0,%edi
81007334:	eb 32                	jmp    81007368 <__sflags+0x66>
81007336:	be 08 00 00 00       	mov    $0x8,%esi
8100733b:	bb 01 00 00 00       	mov    $0x1,%ebx
81007340:	bf 00 06 00 00       	mov    $0x600,%edi
81007345:	eb 21                	jmp    81007368 <__sflags+0x66>
81007347:	be 08 01 00 00       	mov    $0x108,%esi
8100734c:	bb 01 00 00 00       	mov    $0x1,%ebx
81007351:	bf 08 02 00 00       	mov    $0x208,%edi
81007356:	eb 10                	jmp    81007368 <__sflags+0x66>
81007358:	8b 45 08             	mov    0x8(%ebp),%eax
8100735b:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81007361:	b8 00 00 00 00       	mov    $0x0,%eax
81007366:	eb 4f                	jmp    810073b7 <__sflags+0xb5>
81007368:	eb 38                	jmp    810073a2 <__sflags+0xa0>
8100736a:	0f b6 02             	movzbl (%edx),%eax
8100736d:	0f be c0             	movsbl %al,%eax
81007370:	83 f8 78             	cmp    $0x78,%eax
81007373:	74 27                	je     8100739c <__sflags+0x9a>
81007375:	83 f8 78             	cmp    $0x78,%eax
81007378:	7f 27                	jg     810073a1 <__sflags+0x9f>
8100737a:	83 f8 2b             	cmp    $0x2b,%eax
8100737d:	74 07                	je     81007386 <__sflags+0x84>
8100737f:	83 f8 62             	cmp    $0x62,%eax
81007382:	74 1e                	je     810073a2 <__sflags+0xa0>
81007384:	eb 1b                	jmp    810073a1 <__sflags+0x9f>
81007386:	89 f0                	mov    %esi,%eax
81007388:	83 e0 e3             	and    $0xffffffe3,%eax
8100738b:	83 c8 10             	or     $0x10,%eax
8100738e:	89 c6                	mov    %eax,%esi
81007390:	89 d8                	mov    %ebx,%eax
81007392:	83 e0 fc             	and    $0xfffffffc,%eax
81007395:	83 c8 02             	or     $0x2,%eax
81007398:	89 c3                	mov    %eax,%ebx
8100739a:	eb 06                	jmp    810073a2 <__sflags+0xa0>
8100739c:	80 cf 08             	or     $0x8,%bh
8100739f:	eb 01                	jmp    810073a2 <__sflags+0xa0>
810073a1:	90                   	nop
810073a2:	83 c2 01             	add    $0x1,%edx
810073a5:	0f b6 02             	movzbl (%edx),%eax
810073a8:	84 c0                	test   %al,%al
810073aa:	75 be                	jne    8100736a <__sflags+0x68>
810073ac:	89 da                	mov    %ebx,%edx
810073ae:	09 fa                	or     %edi,%edx
810073b0:	8b 45 10             	mov    0x10(%ebp),%eax
810073b3:	89 10                	mov    %edx,(%eax)
810073b5:	89 f0                	mov    %esi,%eax
810073b7:	5b                   	pop    %ebx
810073b8:	5e                   	pop    %esi
810073b9:	5f                   	pop    %edi
810073ba:	5d                   	pop    %ebp
810073bb:	c3                   	ret    

810073bc <_fputc_r>:
810073bc:	55                   	push   %ebp
810073bd:	89 e5                	mov    %esp,%ebp
810073bf:	83 ec 18             	sub    $0x18,%esp
810073c2:	8b 45 08             	mov    0x8(%ebp),%eax
810073c5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810073c8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810073cc:	74 18                	je     810073e6 <_fputc_r+0x2a>
810073ce:	8b 45 f4             	mov    -0xc(%ebp),%eax
810073d1:	8b 40 38             	mov    0x38(%eax),%eax
810073d4:	85 c0                	test   %eax,%eax
810073d6:	75 0e                	jne    810073e6 <_fputc_r+0x2a>
810073d8:	83 ec 0c             	sub    $0xc,%esp
810073db:	ff 75 f4             	pushl  -0xc(%ebp)
810073de:	e8 a3 a4 ff ff       	call   81001886 <__sinit>
810073e3:	83 c4 10             	add    $0x10,%esp
810073e6:	83 ec 04             	sub    $0x4,%esp
810073e9:	ff 75 10             	pushl  0x10(%ebp)
810073ec:	ff 75 0c             	pushl  0xc(%ebp)
810073ef:	ff 75 08             	pushl  0x8(%ebp)
810073f2:	e8 80 05 00 00       	call   81007977 <_putc_r>
810073f7:	83 c4 10             	add    $0x10,%esp
810073fa:	89 45 f0             	mov    %eax,-0x10(%ebp)
810073fd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007400:	c9                   	leave  
81007401:	c3                   	ret    

81007402 <fputc>:
81007402:	55                   	push   %ebp
81007403:	89 e5                	mov    %esp,%ebp
81007405:	83 ec 18             	sub    $0x18,%esp
81007408:	a1 44 88 00 81       	mov    0x81008844,%eax
8100740d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007410:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007413:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007416:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100741a:	74 18                	je     81007434 <fputc+0x32>
8100741c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100741f:	8b 40 38             	mov    0x38(%eax),%eax
81007422:	85 c0                	test   %eax,%eax
81007424:	75 0e                	jne    81007434 <fputc+0x32>
81007426:	83 ec 0c             	sub    $0xc,%esp
81007429:	ff 75 f0             	pushl  -0x10(%ebp)
8100742c:	e8 55 a4 ff ff       	call   81001886 <__sinit>
81007431:	83 c4 10             	add    $0x10,%esp
81007434:	83 ec 04             	sub    $0x4,%esp
81007437:	ff 75 0c             	pushl  0xc(%ebp)
8100743a:	ff 75 08             	pushl  0x8(%ebp)
8100743d:	ff 75 f4             	pushl  -0xc(%ebp)
81007440:	e8 32 05 00 00       	call   81007977 <_putc_r>
81007445:	83 c4 10             	add    $0x10,%esp
81007448:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100744b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100744e:	c9                   	leave  
8100744f:	c3                   	ret    

81007450 <__sputc_r>:
81007450:	55                   	push   %ebp
81007451:	89 e5                	mov    %esp,%ebp
81007453:	83 ec 08             	sub    $0x8,%esp
81007456:	8b 45 10             	mov    0x10(%ebp),%eax
81007459:	8b 40 08             	mov    0x8(%eax),%eax
8100745c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100745f:	8b 45 10             	mov    0x10(%ebp),%eax
81007462:	89 50 08             	mov    %edx,0x8(%eax)
81007465:	8b 45 10             	mov    0x10(%ebp),%eax
81007468:	8b 40 08             	mov    0x8(%eax),%eax
8100746b:	85 c0                	test   %eax,%eax
8100746d:	79 17                	jns    81007486 <__sputc_r+0x36>
8100746f:	8b 45 10             	mov    0x10(%ebp),%eax
81007472:	8b 50 08             	mov    0x8(%eax),%edx
81007475:	8b 45 10             	mov    0x10(%ebp),%eax
81007478:	8b 40 18             	mov    0x18(%eax),%eax
8100747b:	39 c2                	cmp    %eax,%edx
8100747d:	7c 21                	jl     810074a0 <__sputc_r+0x50>
8100747f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007482:	3c 0a                	cmp    $0xa,%al
81007484:	74 1a                	je     810074a0 <__sputc_r+0x50>
81007486:	8b 45 10             	mov    0x10(%ebp),%eax
81007489:	8b 00                	mov    (%eax),%eax
8100748b:	8d 48 01             	lea    0x1(%eax),%ecx
8100748e:	8b 55 10             	mov    0x10(%ebp),%edx
81007491:	89 0a                	mov    %ecx,(%edx)
81007493:	8b 55 0c             	mov    0xc(%ebp),%edx
81007496:	88 10                	mov    %dl,(%eax)
81007498:	0f b6 00             	movzbl (%eax),%eax
8100749b:	0f b6 c0             	movzbl %al,%eax
8100749e:	eb 14                	jmp    810074b4 <__sputc_r+0x64>
810074a0:	83 ec 04             	sub    $0x4,%esp
810074a3:	ff 75 10             	pushl  0x10(%ebp)
810074a6:	ff 75 0c             	pushl  0xc(%ebp)
810074a9:	ff 75 08             	pushl  0x8(%ebp)
810074ac:	e8 1e fa ff ff       	call   81006ecf <__swbuf_r>
810074b1:	83 c4 10             	add    $0x10,%esp
810074b4:	c9                   	leave  
810074b5:	c3                   	ret    

810074b6 <__fputwc>:
810074b6:	55                   	push   %ebp
810074b7:	89 e5                	mov    %esp,%ebp
810074b9:	83 ec 18             	sub    $0x18,%esp
810074bc:	e8 41 03 00 00       	call   81007802 <__locale_mb_cur_max>
810074c1:	83 f8 01             	cmp    $0x1,%eax
810074c4:	75 1e                	jne    810074e4 <__fputwc+0x2e>
810074c6:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810074ca:	7e 18                	jle    810074e4 <__fputwc+0x2e>
810074cc:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
810074d3:	7f 0f                	jg     810074e4 <__fputwc+0x2e>
810074d5:	8b 45 0c             	mov    0xc(%ebp),%eax
810074d8:	88 45 ef             	mov    %al,-0x11(%ebp)
810074db:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
810074e2:	eb 3c                	jmp    81007520 <__fputwc+0x6a>
810074e4:	8b 45 10             	mov    0x10(%ebp),%eax
810074e7:	83 c0 5c             	add    $0x5c,%eax
810074ea:	50                   	push   %eax
810074eb:	ff 75 0c             	pushl  0xc(%ebp)
810074ee:	8d 45 ef             	lea    -0x11(%ebp),%eax
810074f1:	50                   	push   %eax
810074f2:	ff 75 08             	pushl  0x8(%ebp)
810074f5:	e8 58 06 00 00       	call   81007b52 <_wcrtomb_r>
810074fa:	83 c4 10             	add    $0x10,%esp
810074fd:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007500:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81007504:	75 1a                	jne    81007520 <__fputwc+0x6a>
81007506:	8b 45 10             	mov    0x10(%ebp),%eax
81007509:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100750d:	83 c8 40             	or     $0x40,%eax
81007510:	89 c2                	mov    %eax,%edx
81007512:	8b 45 10             	mov    0x10(%ebp),%eax
81007515:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007519:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100751e:	eb 44                	jmp    81007564 <__fputwc+0xae>
81007520:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81007527:	eb 30                	jmp    81007559 <__fputwc+0xa3>
81007529:	8d 55 ef             	lea    -0x11(%ebp),%edx
8100752c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100752f:	01 d0                	add    %edx,%eax
81007531:	0f b6 00             	movzbl (%eax),%eax
81007534:	0f b6 c0             	movzbl %al,%eax
81007537:	83 ec 04             	sub    $0x4,%esp
8100753a:	ff 75 10             	pushl  0x10(%ebp)
8100753d:	50                   	push   %eax
8100753e:	ff 75 08             	pushl  0x8(%ebp)
81007541:	e8 0a ff ff ff       	call   81007450 <__sputc_r>
81007546:	83 c4 10             	add    $0x10,%esp
81007549:	83 f8 ff             	cmp    $0xffffffff,%eax
8100754c:	75 07                	jne    81007555 <__fputwc+0x9f>
8100754e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007553:	eb 0f                	jmp    81007564 <__fputwc+0xae>
81007555:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81007559:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100755c:	3b 45 f0             	cmp    -0x10(%ebp),%eax
8100755f:	72 c8                	jb     81007529 <__fputwc+0x73>
81007561:	8b 45 0c             	mov    0xc(%ebp),%eax
81007564:	c9                   	leave  
81007565:	c3                   	ret    

81007566 <_fputwc_r>:
81007566:	55                   	push   %ebp
81007567:	89 e5                	mov    %esp,%ebp
81007569:	83 ec 18             	sub    $0x18,%esp
8100756c:	8b 45 10             	mov    0x10(%ebp),%eax
8100756f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007573:	98                   	cwtl   
81007574:	25 00 20 00 00       	and    $0x2000,%eax
81007579:	85 c0                	test   %eax,%eax
8100757b:	75 24                	jne    810075a1 <_fputwc_r+0x3b>
8100757d:	8b 45 10             	mov    0x10(%ebp),%eax
81007580:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007584:	80 cc 20             	or     $0x20,%ah
81007587:	89 c2                	mov    %eax,%edx
81007589:	8b 45 10             	mov    0x10(%ebp),%eax
8100758c:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007590:	8b 45 10             	mov    0x10(%ebp),%eax
81007593:	8b 40 64             	mov    0x64(%eax),%eax
81007596:	80 cc 20             	or     $0x20,%ah
81007599:	89 c2                	mov    %eax,%edx
8100759b:	8b 45 10             	mov    0x10(%ebp),%eax
8100759e:	89 50 64             	mov    %edx,0x64(%eax)
810075a1:	83 ec 04             	sub    $0x4,%esp
810075a4:	ff 75 10             	pushl  0x10(%ebp)
810075a7:	ff 75 0c             	pushl  0xc(%ebp)
810075aa:	ff 75 08             	pushl  0x8(%ebp)
810075ad:	e8 04 ff ff ff       	call   810074b6 <__fputwc>
810075b2:	83 c4 10             	add    $0x10,%esp
810075b5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810075b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810075bb:	c9                   	leave  
810075bc:	c3                   	ret    

810075bd <fputwc>:
810075bd:	55                   	push   %ebp
810075be:	89 e5                	mov    %esp,%ebp
810075c0:	83 ec 18             	sub    $0x18,%esp
810075c3:	a1 44 88 00 81       	mov    0x81008844,%eax
810075c8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810075cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810075ce:	89 45 f0             	mov    %eax,-0x10(%ebp)
810075d1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810075d5:	74 18                	je     810075ef <fputwc+0x32>
810075d7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810075da:	8b 40 38             	mov    0x38(%eax),%eax
810075dd:	85 c0                	test   %eax,%eax
810075df:	75 0e                	jne    810075ef <fputwc+0x32>
810075e1:	83 ec 0c             	sub    $0xc,%esp
810075e4:	ff 75 f0             	pushl  -0x10(%ebp)
810075e7:	e8 9a a2 ff ff       	call   81001886 <__sinit>
810075ec:	83 c4 10             	add    $0x10,%esp
810075ef:	83 ec 04             	sub    $0x4,%esp
810075f2:	ff 75 0c             	pushl  0xc(%ebp)
810075f5:	ff 75 08             	pushl  0x8(%ebp)
810075f8:	ff 75 f4             	pushl  -0xc(%ebp)
810075fb:	e8 66 ff ff ff       	call   81007566 <_fputwc_r>
81007600:	83 c4 10             	add    $0x10,%esp
81007603:	c9                   	leave  
81007604:	c3                   	ret    

81007605 <_findenv>:
81007605:	55                   	push   %ebp
81007606:	89 e5                	mov    %esp,%ebp
81007608:	83 ec 08             	sub    $0x8,%esp
8100760b:	8b 55 08             	mov    0x8(%ebp),%edx
8100760e:	a1 44 88 00 81       	mov    0x81008844,%eax
81007613:	83 ec 04             	sub    $0x4,%esp
81007616:	ff 75 0c             	pushl  0xc(%ebp)
81007619:	52                   	push   %edx
8100761a:	50                   	push   %eax
8100761b:	e8 25 00 00 00       	call   81007645 <_findenv_r>
81007620:	83 c4 10             	add    $0x10,%esp
81007623:	c9                   	leave  
81007624:	c3                   	ret    

81007625 <getenv>:
81007625:	55                   	push   %ebp
81007626:	89 e5                	mov    %esp,%ebp
81007628:	83 ec 18             	sub    $0x18,%esp
8100762b:	a1 44 88 00 81       	mov    0x81008844,%eax
81007630:	83 ec 04             	sub    $0x4,%esp
81007633:	8d 55 f4             	lea    -0xc(%ebp),%edx
81007636:	52                   	push   %edx
81007637:	ff 75 08             	pushl  0x8(%ebp)
8100763a:	50                   	push   %eax
8100763b:	e8 05 00 00 00       	call   81007645 <_findenv_r>
81007640:	83 c4 10             	add    $0x10,%esp
81007643:	c9                   	leave  
81007644:	c3                   	ret    

81007645 <_findenv_r>:
81007645:	55                   	push   %ebp
81007646:	89 e5                	mov    %esp,%ebp
81007648:	57                   	push   %edi
81007649:	56                   	push   %esi
8100764a:	53                   	push   %ebx
8100764b:	83 ec 1c             	sub    $0x1c,%esp
8100764e:	8b 7d 0c             	mov    0xc(%ebp),%edi
81007651:	83 ec 0c             	sub    $0xc,%esp
81007654:	ff 75 08             	pushl  0x8(%ebp)
81007657:	e8 67 06 00 00       	call   81007cc3 <__env_lock>
8100765c:	83 c4 10             	add    $0x10,%esp
8100765f:	a1 70 8c 00 81       	mov    0x81008c70,%eax
81007664:	8b 00                	mov    (%eax),%eax
81007666:	85 c0                	test   %eax,%eax
81007668:	75 18                	jne    81007682 <_findenv_r+0x3d>
8100766a:	83 ec 0c             	sub    $0xc,%esp
8100766d:	ff 75 08             	pushl  0x8(%ebp)
81007670:	e8 54 06 00 00       	call   81007cc9 <__env_unlock>
81007675:	83 c4 10             	add    $0x10,%esp
81007678:	b8 00 00 00 00       	mov    $0x0,%eax
8100767d:	e9 a8 00 00 00       	jmp    8100772a <_findenv_r+0xe5>
81007682:	89 7d e4             	mov    %edi,-0x1c(%ebp)
81007685:	eb 04                	jmp    8100768b <_findenv_r+0x46>
81007687:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100768b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100768e:	0f b6 00             	movzbl (%eax),%eax
81007691:	84 c0                	test   %al,%al
81007693:	74 0a                	je     8100769f <_findenv_r+0x5a>
81007695:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007698:	0f b6 00             	movzbl (%eax),%eax
8100769b:	3c 3d                	cmp    $0x3d,%al
8100769d:	75 e8                	jne    81007687 <_findenv_r+0x42>
8100769f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810076a2:	0f b6 00             	movzbl (%eax),%eax
810076a5:	3c 3d                	cmp    $0x3d,%al
810076a7:	74 6e                	je     81007717 <_findenv_r+0xd2>
810076a9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810076ac:	29 f8                	sub    %edi,%eax
810076ae:	89 c6                	mov    %eax,%esi
810076b0:	a1 70 8c 00 81       	mov    0x81008c70,%eax
810076b5:	8b 18                	mov    (%eax),%ebx
810076b7:	eb 58                	jmp    81007711 <_findenv_r+0xcc>
810076b9:	89 f2                	mov    %esi,%edx
810076bb:	8b 03                	mov    (%ebx),%eax
810076bd:	83 ec 04             	sub    $0x4,%esp
810076c0:	52                   	push   %edx
810076c1:	57                   	push   %edi
810076c2:	50                   	push   %eax
810076c3:	e8 93 03 00 00       	call   81007a5b <strncmp>
810076c8:	83 c4 10             	add    $0x10,%esp
810076cb:	85 c0                	test   %eax,%eax
810076cd:	75 3f                	jne    8100770e <_findenv_r+0xc9>
810076cf:	8b 03                	mov    (%ebx),%eax
810076d1:	89 f2                	mov    %esi,%edx
810076d3:	01 d0                	add    %edx,%eax
810076d5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810076d8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810076db:	0f b6 00             	movzbl (%eax),%eax
810076de:	3c 3d                	cmp    $0x3d,%al
810076e0:	75 2c                	jne    8100770e <_findenv_r+0xc9>
810076e2:	a1 70 8c 00 81       	mov    0x81008c70,%eax
810076e7:	8b 10                	mov    (%eax),%edx
810076e9:	89 d8                	mov    %ebx,%eax
810076eb:	29 d0                	sub    %edx,%eax
810076ed:	c1 f8 02             	sar    $0x2,%eax
810076f0:	89 c2                	mov    %eax,%edx
810076f2:	8b 45 10             	mov    0x10(%ebp),%eax
810076f5:	89 10                	mov    %edx,(%eax)
810076f7:	83 ec 0c             	sub    $0xc,%esp
810076fa:	ff 75 08             	pushl  0x8(%ebp)
810076fd:	e8 c7 05 00 00       	call   81007cc9 <__env_unlock>
81007702:	83 c4 10             	add    $0x10,%esp
81007705:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81007709:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100770c:	eb 1c                	jmp    8100772a <_findenv_r+0xe5>
8100770e:	83 c3 04             	add    $0x4,%ebx
81007711:	8b 03                	mov    (%ebx),%eax
81007713:	85 c0                	test   %eax,%eax
81007715:	75 a2                	jne    810076b9 <_findenv_r+0x74>
81007717:	83 ec 0c             	sub    $0xc,%esp
8100771a:	ff 75 08             	pushl  0x8(%ebp)
8100771d:	e8 a7 05 00 00       	call   81007cc9 <__env_unlock>
81007722:	83 c4 10             	add    $0x10,%esp
81007725:	b8 00 00 00 00       	mov    $0x0,%eax
8100772a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100772d:	5b                   	pop    %ebx
8100772e:	5e                   	pop    %esi
8100772f:	5f                   	pop    %edi
81007730:	5d                   	pop    %ebp
81007731:	c3                   	ret    

81007732 <_getenv_r>:
81007732:	55                   	push   %ebp
81007733:	89 e5                	mov    %esp,%ebp
81007735:	83 ec 18             	sub    $0x18,%esp
81007738:	83 ec 04             	sub    $0x4,%esp
8100773b:	8d 45 f4             	lea    -0xc(%ebp),%eax
8100773e:	50                   	push   %eax
8100773f:	ff 75 0c             	pushl  0xc(%ebp)
81007742:	ff 75 08             	pushl  0x8(%ebp)
81007745:	e8 fb fe ff ff       	call   81007645 <_findenv_r>
8100774a:	83 c4 10             	add    $0x10,%esp
8100774d:	c9                   	leave  
8100774e:	c3                   	ret    

8100774f <_isatty_r>:
8100774f:	55                   	push   %ebp
81007750:	89 e5                	mov    %esp,%ebp
81007752:	83 ec 18             	sub    $0x18,%esp
81007755:	c7 05 8c 92 00 81 00 	movl   $0x0,0x8100928c
8100775c:	00 00 00 
8100775f:	83 ec 0c             	sub    $0xc,%esp
81007762:	ff 75 0c             	pushl  0xc(%ebp)
81007765:	e8 5d 95 ff ff       	call   81000cc7 <isatty>
8100776a:	83 c4 10             	add    $0x10,%esp
8100776d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007770:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007774:	75 14                	jne    8100778a <_isatty_r+0x3b>
81007776:	a1 8c 92 00 81       	mov    0x8100928c,%eax
8100777b:	85 c0                	test   %eax,%eax
8100777d:	74 0b                	je     8100778a <_isatty_r+0x3b>
8100777f:	8b 15 8c 92 00 81    	mov    0x8100928c,%edx
81007785:	8b 45 08             	mov    0x8(%ebp),%eax
81007788:	89 10                	mov    %edx,(%eax)
8100778a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100778d:	c9                   	leave  
8100778e:	c3                   	ret    

8100778f <__get_global_locale>:
8100778f:	55                   	push   %ebp
81007790:	89 e5                	mov    %esp,%ebp
81007792:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81007797:	5d                   	pop    %ebp
81007798:	c3                   	ret    

81007799 <__get_current_locale>:
81007799:	55                   	push   %ebp
8100779a:	89 e5                	mov    %esp,%ebp
8100779c:	e8 ee ff ff ff       	call   8100778f <__get_global_locale>
810077a1:	5d                   	pop    %ebp
810077a2:	c3                   	ret    

810077a3 <_setlocale_r>:
810077a3:	55                   	push   %ebp
810077a4:	89 e5                	mov    %esp,%ebp
810077a6:	83 ec 08             	sub    $0x8,%esp
810077a9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810077ad:	74 4c                	je     810077fb <_setlocale_r+0x58>
810077af:	83 ec 08             	sub    $0x8,%esp
810077b2:	68 e4 83 00 81       	push   $0x810083e4
810077b7:	ff 75 10             	pushl  0x10(%ebp)
810077ba:	e8 7d f2 ff ff       	call   81006a3c <strcmp>
810077bf:	83 c4 10             	add    $0x10,%esp
810077c2:	85 c0                	test   %eax,%eax
810077c4:	74 35                	je     810077fb <_setlocale_r+0x58>
810077c6:	83 ec 08             	sub    $0x8,%esp
810077c9:	68 ea 83 00 81       	push   $0x810083ea
810077ce:	ff 75 10             	pushl  0x10(%ebp)
810077d1:	e8 66 f2 ff ff       	call   81006a3c <strcmp>
810077d6:	83 c4 10             	add    $0x10,%esp
810077d9:	85 c0                	test   %eax,%eax
810077db:	74 1e                	je     810077fb <_setlocale_r+0x58>
810077dd:	83 ec 08             	sub    $0x8,%esp
810077e0:	68 e3 83 00 81       	push   $0x810083e3
810077e5:	ff 75 10             	pushl  0x10(%ebp)
810077e8:	e8 4f f2 ff ff       	call   81006a3c <strcmp>
810077ed:	83 c4 10             	add    $0x10,%esp
810077f0:	85 c0                	test   %eax,%eax
810077f2:	74 07                	je     810077fb <_setlocale_r+0x58>
810077f4:	b8 00 00 00 00       	mov    $0x0,%eax
810077f9:	eb 05                	jmp    81007800 <_setlocale_r+0x5d>
810077fb:	b8 ea 83 00 81       	mov    $0x810083ea,%eax
81007800:	c9                   	leave  
81007801:	c3                   	ret    

81007802 <__locale_mb_cur_max>:
81007802:	55                   	push   %ebp
81007803:	89 e5                	mov    %esp,%ebp
81007805:	e8 8f ff ff ff       	call   81007799 <__get_current_locale>
8100780a:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81007811:	0f be c0             	movsbl %al,%eax
81007814:	5d                   	pop    %ebp
81007815:	c3                   	ret    

81007816 <setlocale>:
81007816:	55                   	push   %ebp
81007817:	89 e5                	mov    %esp,%ebp
81007819:	83 ec 08             	sub    $0x8,%esp
8100781c:	a1 44 88 00 81       	mov    0x81008844,%eax
81007821:	83 ec 04             	sub    $0x4,%esp
81007824:	ff 75 0c             	pushl  0xc(%ebp)
81007827:	ff 75 08             	pushl  0x8(%ebp)
8100782a:	50                   	push   %eax
8100782b:	e8 73 ff ff ff       	call   810077a3 <_setlocale_r>
81007830:	83 c4 10             	add    $0x10,%esp
81007833:	c9                   	leave  
81007834:	c3                   	ret    

81007835 <_lseek_r>:
81007835:	55                   	push   %ebp
81007836:	89 e5                	mov    %esp,%ebp
81007838:	83 ec 18             	sub    $0x18,%esp
8100783b:	c7 05 8c 92 00 81 00 	movl   $0x0,0x8100928c
81007842:	00 00 00 
81007845:	83 ec 04             	sub    $0x4,%esp
81007848:	ff 75 14             	pushl  0x14(%ebp)
8100784b:	ff 75 10             	pushl  0x10(%ebp)
8100784e:	ff 75 0c             	pushl  0xc(%ebp)
81007851:	e8 44 94 ff ff       	call   81000c9a <lseek>
81007856:	83 c4 10             	add    $0x10,%esp
81007859:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100785c:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007860:	75 14                	jne    81007876 <_lseek_r+0x41>
81007862:	a1 8c 92 00 81       	mov    0x8100928c,%eax
81007867:	85 c0                	test   %eax,%eax
81007869:	74 0b                	je     81007876 <_lseek_r+0x41>
8100786b:	8b 15 8c 92 00 81    	mov    0x8100928c,%edx
81007871:	8b 45 08             	mov    0x8(%ebp),%eax
81007874:	89 10                	mov    %edx,(%eax)
81007876:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007879:	c9                   	leave  
8100787a:	c3                   	ret    

8100787b <__get_global_locale>:
8100787b:	55                   	push   %ebp
8100787c:	89 e5                	mov    %esp,%ebp
8100787e:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81007883:	5d                   	pop    %ebp
81007884:	c3                   	ret    

81007885 <__get_current_locale>:
81007885:	55                   	push   %ebp
81007886:	89 e5                	mov    %esp,%ebp
81007888:	e8 ee ff ff ff       	call   8100787b <__get_global_locale>
8100788d:	5d                   	pop    %ebp
8100788e:	c3                   	ret    

8100788f <_mbtowc_r>:
8100788f:	55                   	push   %ebp
81007890:	89 e5                	mov    %esp,%ebp
81007892:	83 ec 08             	sub    $0x8,%esp
81007895:	e8 eb ff ff ff       	call   81007885 <__get_current_locale>
8100789a:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
810078a0:	83 ec 0c             	sub    $0xc,%esp
810078a3:	ff 75 18             	pushl  0x18(%ebp)
810078a6:	ff 75 14             	pushl  0x14(%ebp)
810078a9:	ff 75 10             	pushl  0x10(%ebp)
810078ac:	ff 75 0c             	pushl  0xc(%ebp)
810078af:	ff 75 08             	pushl  0x8(%ebp)
810078b2:	ff d0                	call   *%eax
810078b4:	83 c4 20             	add    $0x20,%esp
810078b7:	c9                   	leave  
810078b8:	c3                   	ret    

810078b9 <__ascii_mbtowc>:
810078b9:	55                   	push   %ebp
810078ba:	89 e5                	mov    %esp,%ebp
810078bc:	83 ec 10             	sub    $0x10,%esp
810078bf:	8b 45 10             	mov    0x10(%ebp),%eax
810078c2:	89 45 fc             	mov    %eax,-0x4(%ebp)
810078c5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810078c9:	75 06                	jne    810078d1 <__ascii_mbtowc+0x18>
810078cb:	8d 45 f8             	lea    -0x8(%ebp),%eax
810078ce:	89 45 0c             	mov    %eax,0xc(%ebp)
810078d1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810078d5:	75 07                	jne    810078de <__ascii_mbtowc+0x25>
810078d7:	b8 00 00 00 00       	mov    $0x0,%eax
810078dc:	eb 31                	jmp    8100790f <__ascii_mbtowc+0x56>
810078de:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810078e2:	75 07                	jne    810078eb <__ascii_mbtowc+0x32>
810078e4:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
810078e9:	eb 24                	jmp    8100790f <__ascii_mbtowc+0x56>
810078eb:	8b 45 fc             	mov    -0x4(%ebp),%eax
810078ee:	0f b6 00             	movzbl (%eax),%eax
810078f1:	0f b6 d0             	movzbl %al,%edx
810078f4:	8b 45 0c             	mov    0xc(%ebp),%eax
810078f7:	89 10                	mov    %edx,(%eax)
810078f9:	8b 45 fc             	mov    -0x4(%ebp),%eax
810078fc:	0f b6 00             	movzbl (%eax),%eax
810078ff:	84 c0                	test   %al,%al
81007901:	75 07                	jne    8100790a <__ascii_mbtowc+0x51>
81007903:	b8 00 00 00 00       	mov    $0x0,%eax
81007908:	eb 05                	jmp    8100790f <__ascii_mbtowc+0x56>
8100790a:	b8 01 00 00 00       	mov    $0x1,%eax
8100790f:	c9                   	leave  
81007910:	c3                   	ret    

81007911 <__sputc_r>:
81007911:	55                   	push   %ebp
81007912:	89 e5                	mov    %esp,%ebp
81007914:	83 ec 08             	sub    $0x8,%esp
81007917:	8b 45 10             	mov    0x10(%ebp),%eax
8100791a:	8b 40 08             	mov    0x8(%eax),%eax
8100791d:	8d 50 ff             	lea    -0x1(%eax),%edx
81007920:	8b 45 10             	mov    0x10(%ebp),%eax
81007923:	89 50 08             	mov    %edx,0x8(%eax)
81007926:	8b 45 10             	mov    0x10(%ebp),%eax
81007929:	8b 40 08             	mov    0x8(%eax),%eax
8100792c:	85 c0                	test   %eax,%eax
8100792e:	79 17                	jns    81007947 <__sputc_r+0x36>
81007930:	8b 45 10             	mov    0x10(%ebp),%eax
81007933:	8b 50 08             	mov    0x8(%eax),%edx
81007936:	8b 45 10             	mov    0x10(%ebp),%eax
81007939:	8b 40 18             	mov    0x18(%eax),%eax
8100793c:	39 c2                	cmp    %eax,%edx
8100793e:	7c 21                	jl     81007961 <__sputc_r+0x50>
81007940:	8b 45 0c             	mov    0xc(%ebp),%eax
81007943:	3c 0a                	cmp    $0xa,%al
81007945:	74 1a                	je     81007961 <__sputc_r+0x50>
81007947:	8b 45 10             	mov    0x10(%ebp),%eax
8100794a:	8b 00                	mov    (%eax),%eax
8100794c:	8d 48 01             	lea    0x1(%eax),%ecx
8100794f:	8b 55 10             	mov    0x10(%ebp),%edx
81007952:	89 0a                	mov    %ecx,(%edx)
81007954:	8b 55 0c             	mov    0xc(%ebp),%edx
81007957:	88 10                	mov    %dl,(%eax)
81007959:	0f b6 00             	movzbl (%eax),%eax
8100795c:	0f b6 c0             	movzbl %al,%eax
8100795f:	eb 14                	jmp    81007975 <__sputc_r+0x64>
81007961:	83 ec 04             	sub    $0x4,%esp
81007964:	ff 75 10             	pushl  0x10(%ebp)
81007967:	ff 75 0c             	pushl  0xc(%ebp)
8100796a:	ff 75 08             	pushl  0x8(%ebp)
8100796d:	e8 5d f5 ff ff       	call   81006ecf <__swbuf_r>
81007972:	83 c4 10             	add    $0x10,%esp
81007975:	c9                   	leave  
81007976:	c3                   	ret    

81007977 <_putc_r>:
81007977:	55                   	push   %ebp
81007978:	89 e5                	mov    %esp,%ebp
8100797a:	53                   	push   %ebx
8100797b:	83 ec 14             	sub    $0x14,%esp
8100797e:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007981:	8b 45 08             	mov    0x8(%ebp),%eax
81007984:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007987:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100798b:	74 18                	je     810079a5 <_putc_r+0x2e>
8100798d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007990:	8b 40 38             	mov    0x38(%eax),%eax
81007993:	85 c0                	test   %eax,%eax
81007995:	75 0e                	jne    810079a5 <_putc_r+0x2e>
81007997:	83 ec 0c             	sub    $0xc,%esp
8100799a:	ff 75 f4             	pushl  -0xc(%ebp)
8100799d:	e8 e4 9e ff ff       	call   81001886 <__sinit>
810079a2:	83 c4 10             	add    $0x10,%esp
810079a5:	83 ec 04             	sub    $0x4,%esp
810079a8:	53                   	push   %ebx
810079a9:	ff 75 0c             	pushl  0xc(%ebp)
810079ac:	ff 75 08             	pushl  0x8(%ebp)
810079af:	e8 5d ff ff ff       	call   81007911 <__sputc_r>
810079b4:	83 c4 10             	add    $0x10,%esp
810079b7:	89 45 f0             	mov    %eax,-0x10(%ebp)
810079ba:	8b 45 f0             	mov    -0x10(%ebp),%eax
810079bd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810079c0:	c9                   	leave  
810079c1:	c3                   	ret    

810079c2 <putc>:
810079c2:	55                   	push   %ebp
810079c3:	89 e5                	mov    %esp,%ebp
810079c5:	53                   	push   %ebx
810079c6:	83 ec 14             	sub    $0x14,%esp
810079c9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810079cc:	a1 44 88 00 81       	mov    0x81008844,%eax
810079d1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810079d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810079d7:	89 45 f0             	mov    %eax,-0x10(%ebp)
810079da:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810079de:	74 18                	je     810079f8 <putc+0x36>
810079e0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810079e3:	8b 40 38             	mov    0x38(%eax),%eax
810079e6:	85 c0                	test   %eax,%eax
810079e8:	75 0e                	jne    810079f8 <putc+0x36>
810079ea:	83 ec 0c             	sub    $0xc,%esp
810079ed:	ff 75 f0             	pushl  -0x10(%ebp)
810079f0:	e8 91 9e ff ff       	call   81001886 <__sinit>
810079f5:	83 c4 10             	add    $0x10,%esp
810079f8:	83 ec 04             	sub    $0x4,%esp
810079fb:	53                   	push   %ebx
810079fc:	ff 75 08             	pushl  0x8(%ebp)
810079ff:	ff 75 f4             	pushl  -0xc(%ebp)
81007a02:	e8 0a ff ff ff       	call   81007911 <__sputc_r>
81007a07:	83 c4 10             	add    $0x10,%esp
81007a0a:	89 45 ec             	mov    %eax,-0x14(%ebp)
81007a0d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007a10:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81007a13:	c9                   	leave  
81007a14:	c3                   	ret    

81007a15 <_read_r>:
81007a15:	55                   	push   %ebp
81007a16:	89 e5                	mov    %esp,%ebp
81007a18:	83 ec 18             	sub    $0x18,%esp
81007a1b:	c7 05 8c 92 00 81 00 	movl   $0x0,0x8100928c
81007a22:	00 00 00 
81007a25:	83 ec 04             	sub    $0x4,%esp
81007a28:	ff 75 14             	pushl  0x14(%ebp)
81007a2b:	ff 75 10             	pushl  0x10(%ebp)
81007a2e:	ff 75 0c             	pushl  0xc(%ebp)
81007a31:	e8 e9 91 ff ff       	call   81000c1f <read>
81007a36:	83 c4 10             	add    $0x10,%esp
81007a39:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007a3c:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007a40:	75 14                	jne    81007a56 <_read_r+0x41>
81007a42:	a1 8c 92 00 81       	mov    0x8100928c,%eax
81007a47:	85 c0                	test   %eax,%eax
81007a49:	74 0b                	je     81007a56 <_read_r+0x41>
81007a4b:	8b 15 8c 92 00 81    	mov    0x8100928c,%edx
81007a51:	8b 45 08             	mov    0x8(%ebp),%eax
81007a54:	89 10                	mov    %edx,(%eax)
81007a56:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007a59:	c9                   	leave  
81007a5a:	c3                   	ret    

81007a5b <strncmp>:
81007a5b:	55                   	push   %ebp
81007a5c:	89 e5                	mov    %esp,%ebp
81007a5e:	83 ec 10             	sub    $0x10,%esp
81007a61:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007a65:	75 0a                	jne    81007a71 <strncmp+0x16>
81007a67:	b8 00 00 00 00       	mov    $0x0,%eax
81007a6c:	e9 cb 00 00 00       	jmp    81007b3c <strncmp+0xe1>
81007a71:	8b 55 08             	mov    0x8(%ebp),%edx
81007a74:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a77:	09 d0                	or     %edx,%eax
81007a79:	83 e0 03             	and    $0x3,%eax
81007a7c:	85 c0                	test   %eax,%eax
81007a7e:	0f 85 85 00 00 00    	jne    81007b09 <strncmp+0xae>
81007a84:	8b 45 08             	mov    0x8(%ebp),%eax
81007a87:	89 45 fc             	mov    %eax,-0x4(%ebp)
81007a8a:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a8d:	89 45 f8             	mov    %eax,-0x8(%ebp)
81007a90:	eb 36                	jmp    81007ac8 <strncmp+0x6d>
81007a92:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
81007a96:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007a9a:	74 1d                	je     81007ab9 <strncmp+0x5e>
81007a9c:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007a9f:	8b 00                	mov    (%eax),%eax
81007aa1:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81007aa7:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007aaa:	8b 00                	mov    (%eax),%eax
81007aac:	f7 d0                	not    %eax
81007aae:	21 d0                	and    %edx,%eax
81007ab0:	25 80 80 80 80       	and    $0x80808080,%eax
81007ab5:	85 c0                	test   %eax,%eax
81007ab7:	74 07                	je     81007ac0 <strncmp+0x65>
81007ab9:	b8 00 00 00 00       	mov    $0x0,%eax
81007abe:	eb 7c                	jmp    81007b3c <strncmp+0xe1>
81007ac0:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81007ac4:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81007ac8:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
81007acc:	76 0e                	jbe    81007adc <strncmp+0x81>
81007ace:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007ad1:	8b 10                	mov    (%eax),%edx
81007ad3:	8b 45 f8             	mov    -0x8(%ebp),%eax
81007ad6:	8b 00                	mov    (%eax),%eax
81007ad8:	39 c2                	cmp    %eax,%edx
81007ada:	74 b6                	je     81007a92 <strncmp+0x37>
81007adc:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007adf:	89 45 08             	mov    %eax,0x8(%ebp)
81007ae2:	8b 45 f8             	mov    -0x8(%ebp),%eax
81007ae5:	89 45 0c             	mov    %eax,0xc(%ebp)
81007ae8:	eb 1f                	jmp    81007b09 <strncmp+0xae>
81007aea:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007aee:	74 0a                	je     81007afa <strncmp+0x9f>
81007af0:	8b 45 08             	mov    0x8(%ebp),%eax
81007af3:	0f b6 00             	movzbl (%eax),%eax
81007af6:	84 c0                	test   %al,%al
81007af8:	75 07                	jne    81007b01 <strncmp+0xa6>
81007afa:	b8 00 00 00 00       	mov    $0x0,%eax
81007aff:	eb 3b                	jmp    81007b3c <strncmp+0xe1>
81007b01:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81007b05:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81007b09:	8b 45 10             	mov    0x10(%ebp),%eax
81007b0c:	8d 50 ff             	lea    -0x1(%eax),%edx
81007b0f:	89 55 10             	mov    %edx,0x10(%ebp)
81007b12:	85 c0                	test   %eax,%eax
81007b14:	74 10                	je     81007b26 <strncmp+0xcb>
81007b16:	8b 45 08             	mov    0x8(%ebp),%eax
81007b19:	0f b6 10             	movzbl (%eax),%edx
81007b1c:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b1f:	0f b6 00             	movzbl (%eax),%eax
81007b22:	38 c2                	cmp    %al,%dl
81007b24:	74 c4                	je     81007aea <strncmp+0x8f>
81007b26:	8b 45 08             	mov    0x8(%ebp),%eax
81007b29:	0f b6 00             	movzbl (%eax),%eax
81007b2c:	0f b6 d0             	movzbl %al,%edx
81007b2f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b32:	0f b6 00             	movzbl (%eax),%eax
81007b35:	0f b6 c8             	movzbl %al,%ecx
81007b38:	89 d0                	mov    %edx,%eax
81007b3a:	29 c8                	sub    %ecx,%eax
81007b3c:	c9                   	leave  
81007b3d:	c3                   	ret    

81007b3e <__get_global_locale>:
81007b3e:	55                   	push   %ebp
81007b3f:	89 e5                	mov    %esp,%ebp
81007b41:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81007b46:	5d                   	pop    %ebp
81007b47:	c3                   	ret    

81007b48 <__get_current_locale>:
81007b48:	55                   	push   %ebp
81007b49:	89 e5                	mov    %esp,%ebp
81007b4b:	e8 ee ff ff ff       	call   81007b3e <__get_global_locale>
81007b50:	5d                   	pop    %ebp
81007b51:	c3                   	ret    

81007b52 <_wcrtomb_r>:
81007b52:	55                   	push   %ebp
81007b53:	89 e5                	mov    %esp,%ebp
81007b55:	83 ec 18             	sub    $0x18,%esp
81007b58:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81007b5f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007b63:	75 21                	jne    81007b86 <_wcrtomb_r+0x34>
81007b65:	e8 de ff ff ff       	call   81007b48 <__get_current_locale>
81007b6a:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007b70:	ff 75 14             	pushl  0x14(%ebp)
81007b73:	6a 00                	push   $0x0
81007b75:	8d 55 ea             	lea    -0x16(%ebp),%edx
81007b78:	52                   	push   %edx
81007b79:	ff 75 08             	pushl  0x8(%ebp)
81007b7c:	ff d0                	call   *%eax
81007b7e:	83 c4 10             	add    $0x10,%esp
81007b81:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007b84:	eb 1f                	jmp    81007ba5 <_wcrtomb_r+0x53>
81007b86:	e8 bd ff ff ff       	call   81007b48 <__get_current_locale>
81007b8b:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007b91:	ff 75 14             	pushl  0x14(%ebp)
81007b94:	ff 75 10             	pushl  0x10(%ebp)
81007b97:	ff 75 0c             	pushl  0xc(%ebp)
81007b9a:	ff 75 08             	pushl  0x8(%ebp)
81007b9d:	ff d0                	call   *%eax
81007b9f:	83 c4 10             	add    $0x10,%esp
81007ba2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007ba5:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007ba9:	75 19                	jne    81007bc4 <_wcrtomb_r+0x72>
81007bab:	8b 45 14             	mov    0x14(%ebp),%eax
81007bae:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81007bb4:	8b 45 08             	mov    0x8(%ebp),%eax
81007bb7:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81007bbd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007bc2:	eb 03                	jmp    81007bc7 <_wcrtomb_r+0x75>
81007bc4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007bc7:	c9                   	leave  
81007bc8:	c3                   	ret    

81007bc9 <wcrtomb>:
81007bc9:	55                   	push   %ebp
81007bca:	89 e5                	mov    %esp,%ebp
81007bcc:	83 ec 28             	sub    $0x28,%esp
81007bcf:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81007bd6:	a1 44 88 00 81       	mov    0x81008844,%eax
81007bdb:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007bde:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81007be2:	75 21                	jne    81007c05 <wcrtomb+0x3c>
81007be4:	e8 5f ff ff ff       	call   81007b48 <__get_current_locale>
81007be9:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007bef:	ff 75 10             	pushl  0x10(%ebp)
81007bf2:	6a 00                	push   $0x0
81007bf4:	8d 55 e6             	lea    -0x1a(%ebp),%edx
81007bf7:	52                   	push   %edx
81007bf8:	ff 75 f0             	pushl  -0x10(%ebp)
81007bfb:	ff d0                	call   *%eax
81007bfd:	83 c4 10             	add    $0x10,%esp
81007c00:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007c03:	eb 1f                	jmp    81007c24 <wcrtomb+0x5b>
81007c05:	e8 3e ff ff ff       	call   81007b48 <__get_current_locale>
81007c0a:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007c10:	ff 75 10             	pushl  0x10(%ebp)
81007c13:	ff 75 0c             	pushl  0xc(%ebp)
81007c16:	ff 75 08             	pushl  0x8(%ebp)
81007c19:	ff 75 f0             	pushl  -0x10(%ebp)
81007c1c:	ff d0                	call   *%eax
81007c1e:	83 c4 10             	add    $0x10,%esp
81007c21:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007c24:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007c28:	75 19                	jne    81007c43 <wcrtomb+0x7a>
81007c2a:	8b 45 10             	mov    0x10(%ebp),%eax
81007c2d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81007c33:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007c36:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81007c3c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007c41:	eb 03                	jmp    81007c46 <wcrtomb+0x7d>
81007c43:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007c46:	c9                   	leave  
81007c47:	c3                   	ret    

81007c48 <__get_global_locale>:
81007c48:	55                   	push   %ebp
81007c49:	89 e5                	mov    %esp,%ebp
81007c4b:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81007c50:	5d                   	pop    %ebp
81007c51:	c3                   	ret    

81007c52 <__get_current_locale>:
81007c52:	55                   	push   %ebp
81007c53:	89 e5                	mov    %esp,%ebp
81007c55:	e8 ee ff ff ff       	call   81007c48 <__get_global_locale>
81007c5a:	5d                   	pop    %ebp
81007c5b:	c3                   	ret    

81007c5c <_wctomb_r>:
81007c5c:	55                   	push   %ebp
81007c5d:	89 e5                	mov    %esp,%ebp
81007c5f:	83 ec 08             	sub    $0x8,%esp
81007c62:	e8 eb ff ff ff       	call   81007c52 <__get_current_locale>
81007c67:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007c6d:	ff 75 14             	pushl  0x14(%ebp)
81007c70:	ff 75 10             	pushl  0x10(%ebp)
81007c73:	ff 75 0c             	pushl  0xc(%ebp)
81007c76:	ff 75 08             	pushl  0x8(%ebp)
81007c79:	ff d0                	call   *%eax
81007c7b:	83 c4 10             	add    $0x10,%esp
81007c7e:	c9                   	leave  
81007c7f:	c3                   	ret    

81007c80 <__ascii_wctomb>:
81007c80:	55                   	push   %ebp
81007c81:	89 e5                	mov    %esp,%ebp
81007c83:	83 ec 10             	sub    $0x10,%esp
81007c86:	8b 45 10             	mov    0x10(%ebp),%eax
81007c89:	89 45 fc             	mov    %eax,-0x4(%ebp)
81007c8c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007c90:	75 07                	jne    81007c99 <__ascii_wctomb+0x19>
81007c92:	b8 00 00 00 00       	mov    $0x0,%eax
81007c97:	eb 28                	jmp    81007cc1 <__ascii_wctomb+0x41>
81007c99:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
81007ca0:	76 10                	jbe    81007cb2 <__ascii_wctomb+0x32>
81007ca2:	8b 45 08             	mov    0x8(%ebp),%eax
81007ca5:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81007cab:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007cb0:	eb 0f                	jmp    81007cc1 <__ascii_wctomb+0x41>
81007cb2:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007cb5:	89 c2                	mov    %eax,%edx
81007cb7:	8b 45 0c             	mov    0xc(%ebp),%eax
81007cba:	88 10                	mov    %dl,(%eax)
81007cbc:	b8 01 00 00 00       	mov    $0x1,%eax
81007cc1:	c9                   	leave  
81007cc2:	c3                   	ret    

81007cc3 <__env_lock>:
81007cc3:	55                   	push   %ebp
81007cc4:	89 e5                	mov    %esp,%ebp
81007cc6:	90                   	nop
81007cc7:	5d                   	pop    %ebp
81007cc8:	c3                   	ret    

81007cc9 <__env_unlock>:
81007cc9:	55                   	push   %ebp
81007cca:	89 e5                	mov    %esp,%ebp
81007ccc:	90                   	nop
81007ccd:	5d                   	pop    %ebp
81007cce:	c3                   	ret    
