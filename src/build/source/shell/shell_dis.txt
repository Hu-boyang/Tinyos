
E:/CppProject/TinyOs/src/build/source/shell/shell.elf:     file format elf32-i386
E:/CppProject/TinyOs/src/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000597

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x000078d0 memsz 0x00007e80 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000693f  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000058c  81006940  81006940  00007940  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81006ee0  81006ee0  00007ee0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000005a0  810078e0  810078e0  000088d0  2**5
                  ALLOC
  4 .debug_info   000225c6  00000000  00000000  000088d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00007986  00000000  00000000  0002ae96  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 000007e8  00000000  00000000  00032820  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00004c9a  00000000  00000000  00033008  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000015f2  00000000  00000000  00037ca2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .comment      00000023  00000000  00000000  00039294  2**0
                  CONTENTS, READONLY
 10 .debug_frame  00001920  00000000  00000000  000392b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line_str 00001175  00000000  00000000  0003abd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_rnglists 0000004e  00000000  00000000  0003bd4d  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
81000000 l    d  .text	00000000 .text
81006940 l    d  .rodata	00000000 .rodata
81006ee0 l    d  .data	00000000 .data
810078e0 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    df *ABS*	00000000 main.c
810078e0 l     O .bss	0000040c cli
81006ee0 l     O .data	00000004 prompt
81000000 l     F .text	00000042 do_help
81000042 l     F .text	00000033 do_clear
81000075 l     F .text	0000019d do_echo
81000212 l     F .text	00000010 do_exit
81006a40 l     O .rodata	00000030 cmd_list
81000222 l     F .text	00000048 cli_init
8100026a l     F .text	00000044 find_builtin
810002ae l     F .text	00000042 run_builtin
810002f0 l     F .text	000000cd run_exec_file
810003bd l     F .text	00000033 show_prompt
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
810005e2 l     F .text	0000004c sys_call
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
81000d47 l     F .text	000000ad std
81000df4 l     F .text	0000001b stdin_init
81000e0f l     F .text	0000001b stdout_init
81000e2a l     F .text	0000001b stderr_init
81007cec l     O .bss	00000004 __sfp_recursive_mutex
81007cf0 l     O .bss	00000004 __sinit_recursive_mutex
810010ed l     F .text	0000000a __fp_lock
810010f7 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getopt.c
81007cfc l     O .bss	00000004 optwhere
81007d00 l     O .bss	00000004 permute_from
81007d04 l     O .bss	00000004 num_nonopts
8100188a l     F .text	0000007b reverse_argv_elements
81001905 l     F .text	00000036 permute
8100193b l     F .text	00000031 is_option
8100196c l     F .text	00000059 read_globals
810019c5 l     F .text	00000052 write_globals
81001a17 l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 impure.c
81006f00 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
81002678 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
810031bd l       .text	00000000 L20
81003174 l       .text	00000000 L5
810031ba l       .text	00000000 L15
81003180 l       .text	00000000 L8
810031a1 l       .text	00000000 L9
810031b0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
8100320f l       .text	00000000 L4
81003201 l       .text	00000000 BYTECMP
810031fc l       .text	00000000 L5
81003203 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81007d68 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
810033d0 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
81003f97 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
810043cb l       .text	00000000 L25
81004372 l       .text	00000000 L5
810043be l       .text	00000000 L14
810043c4 l       .text	00000000 L19
81004383 l       .text	00000000 L10
810043b0 l       .text	00000000 L9
810043b3 l       .text	00000000 L15
810043fe l       .text	00000000 L26
81004401 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81004506 l       .text	00000000 L5
8100453e l       .text	00000000 L15
81004510 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
8100464c l     F .text	0000000a __locale_ctype_ptr_l
81004656 l     F .text	0000000a __get_global_locale
81004660 l     F .text	0000000a __get_current_locale
8100466a l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
81007d6c l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fputwc.c
81004f5f l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
81007750 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 locale.c
810056fc l     F .text	0000000a __get_global_locale
81005706 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
81005968 l     F .text	0000000a __get_global_locale
81005972 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 putc.c
81005a8d l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
8100672b l     F .text	0000000a __get_global_locale
81006735 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
81006835 l     F .text	0000000a __get_global_locale
8100683f l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81007d78 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
81007d7c l     O .bss	00000004 __env_recursive_mutex
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
810068ff g     F .text	00000040 _isatty_r
810064b1 g     F .text	00000037 cleanup_glue
81003ea5 g     F .text	000000d6 _puts_r
810057a2 g     F .text	00000046 _lseek_r
810006e4 g     F .text	0000001b yield
81004632 g     F .text	0000001a strtok_r
81003e70 g     F .text	00000035 printf
8100673f g     F .text	00000077 _wcrtomb_r
810042ae g     F .text	0000004a __sseek
8100103c g     F .text	00000099 __sinit
810048af g     F .text	00000112 __swbuf_r
81005710 g     F .text	0000005f _setlocale_r
81000e45 g     F .text	0000006f __sfmoreglue
810032ee g     F .text	00000006 __malloc_unlock
81005a00 g       .text	00000000 memmove
81002573 g     F .text	00000049 getopt_long
81001022 g     F .text	0000001a _cleanup
81004572 g     F .text	000000c0 __strtok_r
81004cd8 g     F .text	0000000a __errno
810055d2 g     F .text	00000020 getenv
810068bc g     F .text	00000043 _fstat_r
81007d74 g     O .bss	00000004 errno
81004249 g     F .text	0000000a __seofread
810006b6 g     F .text	0000002e execve
81000658 g     F .text	0000001b getpid
81000d28 g     F .text	0000001f fgets
81003218 g       .text	00000000 memcpy
81001001 g     F .text	00000021 _cleanup_r
81003f7b g     F .text	0000001c puts
81003e43 g     F .text	0000002d _printf_r
810007ce g     F .text	00000021 isatty
81007cf4 g     O .bss	00000004 optarg
81007d20 g     O .bss	00000004 __malloc_top_pad
810078e0 g       .bss	00000000 __bss_start__
81005114 g     F .text	0000049e __sfvwrite_r
810041c5 g     F .text	00000040 _sbrk_r
81006ee4 g     O .data	00000004 opterr
81005b91 g     F .text	00000046 _read_r
81004ce2 g     F .text	00000107 _fclose_r
81000b91 g     F .text	00000039 fflush
81007d24 g     O .bss	00000004 __malloc_max_sbrked_mem
810007a1 g     F .text	0000002d lseek
81006b70 g     O .rodata	00000004 _global_impure_ptr
81005bd7 g     F .text	000008da _realloc_r
81004861 g     F .text	00000025 strtol_l
81005075 g     F .text	00000057 _fputwc_r
81001101 g     F .text	00000024 __fp_lock_all
81004886 g     F .text	00000029 strtol
810064e8 g     F .text	00000160 _reclaim_reent
81004e06 g     F .text	00000046 _fputc_r
81000753 g     F .text	0000002d write
81005af3 g     F .text	0000004b _putc_r
810078cc g     O .data	00000004 environ
810007ef g     F .text	00000027 fstat
81001172 g     F .text	0000002c fprintf
81002651 g     F .text	00000027 __getopt_long_only_r
810008b5 g     F .text	0000001a _atoi_r
81003436 g     F .text	000000a8 __sfputs_r
81007cf8 g     O .bss	00000004 optind
810010d5 g     F .text	00000006 __sfp_lock_acquire
81003130 g       .text	00000000 memchr
81007d80 g       .bss	00000000 __bss_end__
8100119e g     F .text	000003db _free_r
8100087a g     F .text	00000021 wait
81006c40 g     O .rodata	00000180 _ctype_b
8100576f g     F .text	00000014 __locale_mb_cur_max
81004b83 g     F .text	00000115 __call_exitprocs
8100774c g     O .data	00000004 __malloc_sbrk_base
81000597 g       .text	00000000 _start
81000726 g     F .text	0000002d read
81006648 g     F .text	000000e3 strncmp
8100262a g     F .text	00000027 __getopt_long_r
81007d40 g     O .bss	00000028 __malloc_current_mallinfo
81003e43 g     F .text	0000002d _iprintf_r
81004c98 g     F .text	00000040 _close_r
81004549 g     F .text	00000029 strtok
810031c5 g       .text	00000000 memcmp
810017ad g     F .text	000000b8 _fwrite_r
8100069b g     F .text	0000001b fork
81004a28 g     F .text	0000015b __swsetup_r
81000eb4 g     F .text	0000014d __sfp
81007340 g     O .data	00000408 __malloc_av_
810010e7 g     F .text	00000006 __sinit_lock_release
81004205 g     F .text	00000044 __sread
810032e8 g     F .text	00000006 __malloc_lock
81001149 g     F .text	00000029 _fprintf_r
81000816 g     F .text	00000021 sbrk
81000b39 g     F .text	00000058 _fflush_r
810005a7 g     F .text	0000003b cstart
8100252c g     F .text	00000047 getopt
81003260 g       .text	00000000 memset
810003f0 g     F .text	000001a7 main
81007d28 g     O .bss	00000004 __malloc_max_total_mem
810049c1 g     F .text	00000021 __swbuf
810042f8 g     F .text	00000025 __sclose
81004de9 g     F .text	0000001d fclose
8100483c g     F .text	00000025 _strtol_r
810055f2 g     F .text	000000ed _findenv_r
8100290b g     F .text	00000822 _malloc_r
8100686d g     F .text	00000043 __ascii_wctomb
81001149 g     F .text	00000029 _fiprintf_r
81007d80 g     O .bss	00000100 cmd_buf
810068b6 g     F .text	00000006 __env_unlock
810055b2 g     F .text	00000020 _findenv
810016da g     F .text	00000068 _fwalk
81000bca g     F .text	0000015e _fgets_r
8100597c g     F .text	0000002a _mbtowc_r
81005b3e g     F .text	00000053 putc
810025bc g     F .text	00000049 getopt_long_only
81001579 g     F .text	00000161 _malloc_trim_r
8100441c g     F .text	000000a5 strcmp
810034de g     F .text	00000025 vfiprintf
81000837 g     F .text	00000021 dup
81003e70 g     F .text	00000035 iprintf
81007d70 g     O .bss	00000004 _PathLocale
810049e2 g     F .text	00000046 _write_r
81005783 g     F .text	0000001f setlocale
81003859 g     F .text	0000019b _printf_common
81007324 g     O .data	00000004 _impure_ptr
81000913 g     F .text	00000226 __sflush_r
81003fc4 g     F .text	00000201 __srefill_r
810059a6 g     F .text	00000058 __ascii_mbtowc
81001125 g     F .text	00000024 __fp_unlock_all
81004e4c g     F .text	0000004e fputc
81000673 g     F .text	00000028 print_msg
81006ee8 g     O .data	00000004 optopt
810058d5 g     F .text	00000093 __swhatbuf_r
81001865 g     F .text	00000025 fwrite
81004fc5 g     F .text	000000b0 __fputwc
81004e9a g     F .text	000000a6 _fputs_r
81004253 g     F .text	0000005b __swrite
81007748 g     O .data	00000004 __malloc_trim_threshold
810008cf g     F .text	00000044 exit
81001172 g     F .text	0000002c fiprintf
81003503 g     F .text	00000356 _vfiprintf_r
81001742 g     F .text	0000006b _fwalk_reent
810010db g     F .text	00000006 __sfp_lock_release
8100089b g     F .text	0000001a atoi
81006dc0 g     O .rodata	00000101 _ctype_
81002605 g     F .text	00000025 __getopt_r
81000858 g     F .text	00000022 _exit
810057e8 g     F .text	000000ed __smakebuf_r
810044d0 g       .text	00000000 strlen
810039f4 g     F .text	0000044f _printf_i
810006ff g     F .text	00000027 open
810032f4 g     F .text	000000dc __sprint_r
81004320 g       .text	00000000 strchr
81004f40 g     F .text	0000001f fputs
81006849 g     F .text	00000024 _wctomb_r
810068b0 g     F .text	00000006 __env_lock
81003503 g     F .text	00000356 _vfprintf_r
8100062e g     F .text	0000002a msleep
810067b6 g     F .text	0000007f wcrtomb
81000780 g     F .text	00000021 close
81007760 g     O .data	0000016c __global_locale
810034de g     F .text	00000025 vfprintf
810050cc g     F .text	00000048 fputwc
810010e1 g     F .text	00000006 __sinit_lock_acquire
810056df g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <do_help>:
/**
 * @brief help命令
 * @param argc 参数数量
 * @param argv 参数的字符串 
 */
static int do_help(int argc,char** argv){
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
    const cli_cmd_t* start=cli.cmd_start;
81000006:	a1 e0 7c 00 81       	mov    0x81007ce0,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)

    while(start<cli.cmd_end){
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
        printf("%s %s\n",start->name,start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 46 69 00 81       	push   $0x81006946
81000025:	e8 46 3e 00 00       	call   81003e70 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
        start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
    while(start<cli.cmd_end){
81000031:	a1 e4 7c 00 81       	mov    0x81007ce4,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
    }

    return 0;
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <do_clear>:

/**
 * @brief 实现清屏的函数
 */
static int do_clear(int argc,char** argv){
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
    printf("%s",ESC_CLEAR_SCREEN);
81000048:	83 ec 08             	sub    $0x8,%esp
8100004b:	68 4d 69 00 81       	push   $0x8100694d
81000050:	68 52 69 00 81       	push   $0x81006952
81000055:	e8 16 3e 00 00       	call   81003e70 <iprintf>
8100005a:	83 c4 10             	add    $0x10,%esp
    printf("%s",ESC_MOVE_CURSOR(0,0));
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	68 55 69 00 81       	push   $0x81006955
81000065:	68 52 69 00 81       	push   $0x81006952
8100006a:	e8 01 3e 00 00       	call   81003e70 <iprintf>
8100006f:	83 c4 10             	add    $0x10,%esp

}
81000072:	90                   	nop
81000073:	c9                   	leave  
81000074:	c3                   	ret    

81000075 <do_echo>:
/**
 * @brief echo命令执行的函数
 * @param argc 参数数量
 * @param argv 参数的字符串 
 */
static int do_echo(int argc,char** argv){
81000075:	55                   	push   %ebp
81000076:	89 e5                	mov    %esp,%ebp
81000078:	81 ec 98 00 00 00    	sub    $0x98,%esp

    // 当只输入echo命令是等待输入字符串打印
    if(argc == 1){
8100007e:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000082:	75 40                	jne    810000c4 <do_echo+0x4f>
        char msg_buf[128];
        fgets(msg_buf,sizeof(msg_buf),stdin);
81000084:	a1 24 73 00 81       	mov    0x81007324,%eax
81000089:	8b 40 04             	mov    0x4(%eax),%eax
8100008c:	83 ec 04             	sub    $0x4,%esp
8100008f:	50                   	push   %eax
81000090:	68 80 00 00 00       	push   $0x80
81000095:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
8100009b:	50                   	push   %eax
8100009c:	e8 87 0c 00 00       	call   81000d28 <fgets>
810000a1:	83 c4 10             	add    $0x10,%esp
        msg_buf[sizeof(msg_buf)-1]='\0';
810000a4:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
        puts(msg_buf);
810000a8:	83 ec 0c             	sub    $0xc,%esp
810000ab:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000b1:	50                   	push   %eax
810000b2:	e8 c4 3e 00 00       	call   81003f7b <puts>
810000b7:	83 c4 10             	add    $0x10,%esp
        return 0;
810000ba:	b8 00 00 00 00       	mov    $0x0,%eax
810000bf:	e9 4c 01 00 00       	jmp    81000210 <do_echo+0x19b>
    }

    int count = 0;
810000c4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    int ch;
    while((ch=getopt(argc,argv,"n:h")) != -1){
810000cb:	e9 9b 00 00 00       	jmp    8100016b <do_echo+0xf6>
        switch(ch){
810000d0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810000d3:	83 f8 68             	cmp    $0x68,%eax
810000d6:	74 0f                	je     810000e7 <do_echo+0x72>
810000d8:	83 f8 6e             	cmp    $0x6e,%eax
810000db:	74 3e                	je     8100011b <do_echo+0xa6>
810000dd:	83 f8 3f             	cmp    $0x3f,%eax
810000e0:	74 4f                	je     81000131 <do_echo+0xbc>
810000e2:	e9 83 00 00 00       	jmp    8100016a <do_echo+0xf5>
            case 'h':
                puts("echo: any message");
810000e7:	83 ec 0c             	sub    $0xc,%esp
810000ea:	68 5c 69 00 81       	push   $0x8100695c
810000ef:	e8 87 3e 00 00       	call   81003f7b <puts>
810000f4:	83 c4 10             	add    $0x10,%esp
                puts("Usage: echo [-n count] msg");
810000f7:	83 ec 0c             	sub    $0xc,%esp
810000fa:	68 6e 69 00 81       	push   $0x8100696e
810000ff:	e8 77 3e 00 00       	call   81003f7b <puts>
81000104:	83 c4 10             	add    $0x10,%esp
                optind = 1;
81000107:	c7 05 f8 7c 00 81 01 	movl   $0x1,0x81007cf8
8100010e:	00 00 00 
                return 0;
81000111:	b8 00 00 00 00       	mov    $0x0,%eax
81000116:	e9 f5 00 00 00       	jmp    81000210 <do_echo+0x19b>
            case 'n':
                count = atoi(optarg);
8100011b:	a1 f4 7c 00 81       	mov    0x81007cf4,%eax
81000120:	83 ec 0c             	sub    $0xc,%esp
81000123:	50                   	push   %eax
81000124:	e8 72 07 00 00       	call   8100089b <atoi>
81000129:	83 c4 10             	add    $0x10,%esp
8100012c:	89 45 f4             	mov    %eax,-0xc(%ebp)
                break;
8100012f:	eb 3a                	jmp    8100016b <do_echo+0xf6>
            case '?':
                if(optarg){
81000131:	a1 f4 7c 00 81       	mov    0x81007cf4,%eax
81000136:	85 c0                	test   %eax,%eax
81000138:	74 1c                	je     81000156 <do_echo+0xe1>
                    fprintf(stderr,"Unknown option: %c\n",ch);
8100013a:	a1 24 73 00 81       	mov    0x81007324,%eax
8100013f:	8b 40 0c             	mov    0xc(%eax),%eax
81000142:	83 ec 04             	sub    $0x4,%esp
81000145:	ff 75 ec             	pushl  -0x14(%ebp)
81000148:	68 89 69 00 81       	push   $0x81006989
8100014d:	50                   	push   %eax
8100014e:	e8 1f 10 00 00       	call   81001172 <fiprintf>
81000153:	83 c4 10             	add    $0x10,%esp
                }
                optind = 1;
81000156:	c7 05 f8 7c 00 81 01 	movl   $0x1,0x81007cf8
8100015d:	00 00 00 
                return -1;
81000160:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000165:	e9 a6 00 00 00       	jmp    81000210 <do_echo+0x19b>
            default:
               break;
8100016a:	90                   	nop
    while((ch=getopt(argc,argv,"n:h")) != -1){
8100016b:	83 ec 04             	sub    $0x4,%esp
8100016e:	68 9d 69 00 81       	push   $0x8100699d
81000173:	ff 75 0c             	pushl  0xc(%ebp)
81000176:	ff 75 08             	pushl  0x8(%ebp)
81000179:	e8 ae 23 00 00       	call   8100252c <getopt>
8100017e:	83 c4 10             	add    $0x10,%esp
81000181:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000184:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
81000188:	0f 85 42 ff ff ff    	jne    810000d0 <do_echo+0x5b>
        }
    }

    if(optind > argc -1){
8100018e:	8b 45 08             	mov    0x8(%ebp),%eax
81000191:	8d 50 ff             	lea    -0x1(%eax),%edx
81000194:	a1 f8 7c 00 81       	mov    0x81007cf8,%eax
81000199:	39 c2                	cmp    %eax,%edx
8100019b:	7d 2b                	jge    810001c8 <do_echo+0x153>
        fprintf(stderr,"Message is empty\n");
8100019d:	a1 24 73 00 81       	mov    0x81007324,%eax
810001a2:	8b 40 0c             	mov    0xc(%eax),%eax
810001a5:	50                   	push   %eax
810001a6:	6a 11                	push   $0x11
810001a8:	6a 01                	push   $0x1
810001aa:	68 a1 69 00 81       	push   $0x810069a1
810001af:	e8 b1 16 00 00       	call   81001865 <fwrite>
810001b4:	83 c4 10             	add    $0x10,%esp
        optind = 1;
810001b7:	c7 05 f8 7c 00 81 01 	movl   $0x1,0x81007cf8
810001be:	00 00 00 
        return -1;
810001c1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001c6:	eb 48                	jmp    81000210 <do_echo+0x19b>
    }

    char* msg=argv[optind];
810001c8:	a1 f8 7c 00 81       	mov    0x81007cf8,%eax
810001cd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810001d4:	8b 45 0c             	mov    0xc(%ebp),%eax
810001d7:	01 d0                	add    %edx,%eax
810001d9:	8b 00                	mov    (%eax),%eax
810001db:	89 45 e8             	mov    %eax,-0x18(%ebp)
    for(int i=0;i<count;i++){
810001de:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810001e5:	eb 12                	jmp    810001f9 <do_echo+0x184>
        puts(msg);
810001e7:	83 ec 0c             	sub    $0xc,%esp
810001ea:	ff 75 e8             	pushl  -0x18(%ebp)
810001ed:	e8 89 3d 00 00       	call   81003f7b <puts>
810001f2:	83 c4 10             	add    $0x10,%esp
    for(int i=0;i<count;i++){
810001f5:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810001f9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810001fc:	3b 45 f4             	cmp    -0xc(%ebp),%eax
810001ff:	7c e6                	jl     810001e7 <do_echo+0x172>
    }
    optind = 1;
81000201:	c7 05 f8 7c 00 81 01 	movl   $0x1,0x81007cf8
81000208:	00 00 00 

    return 0;
8100020b:	b8 00 00 00 00       	mov    $0x0,%eax

}
81000210:	c9                   	leave  
81000211:	c3                   	ret    

81000212 <do_exit>:
/**
 * @brief 退出命令行的函数
 * @param argc 参数数量
 * @param argv 参数的字符串 
 */
static int do_exit(int argc,char** argv){
81000212:	55                   	push   %ebp
81000213:	89 e5                	mov    %esp,%ebp
81000215:	83 ec 08             	sub    $0x8,%esp
    exit(0);
81000218:	83 ec 0c             	sub    $0xc,%esp
8100021b:	6a 00                	push   $0x0
8100021d:	e8 ad 06 00 00       	call   810008cf <exit>

81000222 <cli_init>:
 * @brief 命令行的初始化函数
 * @param prompt 初始化cli_t结构体的prompt成员变量
 * @param cli_cmd_t 命令列表首地址
 * @param size 命令列表包含元素个数
 */
static void cli_init(const char* prompt,const cli_cmd_t* cmd_list,int size){
81000222:	55                   	push   %ebp
81000223:	89 e5                	mov    %esp,%ebp
81000225:	83 ec 08             	sub    $0x8,%esp
    cli.prompt=prompt;
81000228:	8b 45 08             	mov    0x8(%ebp),%eax
8100022b:	a3 e8 7c 00 81       	mov    %eax,0x81007ce8
    memset(cli.curr_input,0,CLI_INPUT_SIZE);
81000230:	83 ec 04             	sub    $0x4,%esp
81000233:	68 00 04 00 00       	push   $0x400
81000238:	6a 00                	push   $0x0
8100023a:	68 e0 78 00 81       	push   $0x810078e0
8100023f:	e8 1c 30 00 00       	call   81003260 <memset>
81000244:	83 c4 10             	add    $0x10,%esp
    cli.cmd_start=cmd_list;
81000247:	8b 45 0c             	mov    0xc(%ebp),%eax
8100024a:	a3 e0 7c 00 81       	mov    %eax,0x81007ce0
    cli.cmd_end=cmd_list+size;
8100024f:	8b 55 10             	mov    0x10(%ebp),%edx
81000252:	89 d0                	mov    %edx,%eax
81000254:	01 c0                	add    %eax,%eax
81000256:	01 d0                	add    %edx,%eax
81000258:	c1 e0 02             	shl    $0x2,%eax
8100025b:	89 c2                	mov    %eax,%edx
8100025d:	8b 45 0c             	mov    0xc(%ebp),%eax
81000260:	01 d0                	add    %edx,%eax
81000262:	a3 e4 7c 00 81       	mov    %eax,0x81007ce4
}
81000267:	90                   	nop
81000268:	c9                   	leave  
81000269:	c3                   	ret    

8100026a <find_builtin>:
 * @brief 查找内置命令
 * @param name 命令名称
 * @return 返回命令结构体指针
 * @note 如果没有找到命令，返回0
 */
static const cli_cmd_t* find_builtin(const char* name){
8100026a:	55                   	push   %ebp
8100026b:	89 e5                	mov    %esp,%ebp
8100026d:	83 ec 18             	sub    $0x18,%esp
    for(const cli_cmd_t* cmd=cli.cmd_start;cmd<cli.cmd_end;cmd++){
81000270:	a1 e0 7c 00 81       	mov    0x81007ce0,%eax
81000275:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000278:	eb 23                	jmp    8100029d <find_builtin+0x33>
        if(strcmp(name,cmd->name)!=0){
8100027a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100027d:	8b 00                	mov    (%eax),%eax
8100027f:	83 ec 08             	sub    $0x8,%esp
81000282:	50                   	push   %eax
81000283:	ff 75 08             	pushl  0x8(%ebp)
81000286:	e8 91 41 00 00       	call   8100441c <strcmp>
8100028b:	83 c4 10             	add    $0x10,%esp
8100028e:	85 c0                	test   %eax,%eax
81000290:	74 06                	je     81000298 <find_builtin+0x2e>
    for(const cli_cmd_t* cmd=cli.cmd_start;cmd<cli.cmd_end;cmd++){
81000292:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
81000296:	eb 05                	jmp    8100029d <find_builtin+0x33>
            continue;
        }

        return cmd;
81000298:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100029b:	eb 0f                	jmp    810002ac <find_builtin+0x42>
    for(const cli_cmd_t* cmd=cli.cmd_start;cmd<cli.cmd_end;cmd++){
8100029d:	a1 e4 7c 00 81       	mov    0x81007ce4,%eax
810002a2:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810002a5:	72 d3                	jb     8100027a <find_builtin+0x10>
    }

    return 0;
810002a7:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002ac:	c9                   	leave  
810002ad:	c3                   	ret    

810002ae <run_builtin>:
 * @brief 执行内置命令
 * @param cmd 命令结构体
 * @param argc 参数数量
 * @param argv 参数列表 
 */
static void run_builtin(const cli_cmd_t* cmd,int argc,char** argv){
810002ae:	55                   	push   %ebp
810002af:	89 e5                	mov    %esp,%ebp
810002b1:	83 ec 18             	sub    $0x18,%esp
    int ret=cmd->do_func(argc,argv);
810002b4:	8b 45 08             	mov    0x8(%ebp),%eax
810002b7:	8b 40 08             	mov    0x8(%eax),%eax
810002ba:	83 ec 08             	sub    $0x8,%esp
810002bd:	ff 75 10             	pushl  0x10(%ebp)
810002c0:	ff 75 0c             	pushl  0xc(%ebp)
810002c3:	ff d0                	call   *%eax
810002c5:	83 c4 10             	add    $0x10,%esp
810002c8:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if(ret<0){
810002cb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810002cf:	79 1c                	jns    810002ed <run_builtin+0x3f>
        fprintf(stderr,ESC_COLOR_ERROR"error: %d\n"ESC_COLOR_DEFAULT,ret);
810002d1:	a1 24 73 00 81       	mov    0x81007324,%eax
810002d6:	8b 40 0c             	mov    0xc(%eax),%eax
810002d9:	83 ec 04             	sub    $0x4,%esp
810002dc:	ff 75 f4             	pushl  -0xc(%ebp)
810002df:	68 70 6a 00 81       	push   $0x81006a70
810002e4:	50                   	push   %eax
810002e5:	e8 88 0e 00 00       	call   81001172 <fiprintf>
810002ea:	83 c4 10             	add    $0x10,%esp
    }
}
810002ed:	90                   	nop
810002ee:	c9                   	leave  
810002ef:	c3                   	ret    

810002f0 <run_exec_file>:
 * @brief 执行外部命令
 * @param path 要执行的命令的文件路径
 * @param argc 参数数量
 * @param argv 参数列表 
 */
static void run_exec_file(const char* path,int argc,char** argv){
810002f0:	55                   	push   %ebp
810002f1:	89 e5                	mov    %esp,%ebp
810002f3:	83 ec 18             	sub    $0x18,%esp
    int pid=fork();
810002f6:	e8 a0 03 00 00       	call   8100069b <fork>
810002fb:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if(pid<0){
810002fe:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000302:	79 21                	jns    81000325 <run_exec_file+0x35>
        fprintf(stderr,ESC_COLOR_ERROR"fork failed %s\n"ESC_COLOR_DEFAULT,path);
81000304:	a1 24 73 00 81       	mov    0x81007324,%eax
81000309:	8b 40 0c             	mov    0xc(%eax),%eax
8100030c:	83 ec 04             	sub    $0x4,%esp
8100030f:	ff 75 08             	pushl  0x8(%ebp)
81000312:	68 85 6a 00 81       	push   $0x81006a85
81000317:	50                   	push   %eax
81000318:	e8 55 0e 00 00       	call   81001172 <fiprintf>
8100031d:	83 c4 10             	add    $0x10,%esp
        return;
81000320:	e9 96 00 00 00       	jmp    810003bb <run_exec_file+0xcb>
    }
    else if(pid==0){
81000325:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000329:	75 54                	jne    8100037f <run_exec_file+0x8f>
        for(int i=0;i<argc;i++){
8100032b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81000332:	eb 39                	jmp    8100036d <run_exec_file+0x7d>
            msleep(1000);
81000334:	83 ec 0c             	sub    $0xc,%esp
81000337:	68 e8 03 00 00       	push   $0x3e8
8100033c:	e8 ed 02 00 00       	call   8100062e <msleep>
81000341:	83 c4 10             	add    $0x10,%esp
            printf("arg %d=%s",i,argv[i]);
81000344:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000347:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100034e:	8b 45 10             	mov    0x10(%ebp),%eax
81000351:	01 d0                	add    %edx,%eax
81000353:	8b 00                	mov    (%eax),%eax
81000355:	83 ec 04             	sub    $0x4,%esp
81000358:	50                   	push   %eax
81000359:	ff 75 f4             	pushl  -0xc(%ebp)
8100035c:	68 9f 6a 00 81       	push   $0x81006a9f
81000361:	e8 0a 3b 00 00       	call   81003e70 <iprintf>
81000366:	83 c4 10             	add    $0x10,%esp
        for(int i=0;i<argc;i++){
81000369:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100036d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000370:	3b 45 0c             	cmp    0xc(%ebp),%eax
81000373:	7c bf                	jl     81000334 <run_exec_file+0x44>
        }
        exit(-1);
81000375:	83 ec 0c             	sub    $0xc,%esp
81000378:	6a ff                	push   $0xffffffff
8100037a:	e8 50 05 00 00       	call   810008cf <exit>
    }
    else{
        int status=0;
8100037f:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
        int pid=wait(&status);
81000386:	83 ec 0c             	sub    $0xc,%esp
81000389:	8d 45 e8             	lea    -0x18(%ebp),%eax
8100038c:	50                   	push   %eax
8100038d:	e8 e8 04 00 00       	call   8100087a <wait>
81000392:	83 c4 10             	add    $0x10,%esp
81000395:	89 45 ec             	mov    %eax,-0x14(%ebp)
        fprintf(stderr,"cmd %s result: %d, pid=%d\n",path,pid,status);
81000398:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100039b:	a1 24 73 00 81       	mov    0x81007324,%eax
810003a0:	8b 40 0c             	mov    0xc(%eax),%eax
810003a3:	83 ec 0c             	sub    $0xc,%esp
810003a6:	52                   	push   %edx
810003a7:	ff 75 ec             	pushl  -0x14(%ebp)
810003aa:	ff 75 08             	pushl  0x8(%ebp)
810003ad:	68 a9 6a 00 81       	push   $0x81006aa9
810003b2:	50                   	push   %eax
810003b3:	e8 ba 0d 00 00       	call   81001172 <fiprintf>
810003b8:	83 c4 20             	add    $0x20,%esp
    }
}   
810003bb:	c9                   	leave  
810003bc:	c3                   	ret    

810003bd <show_prompt>:

/**
 * @brief 显示命令行提示词
 */
static void show_prompt(void){
810003bd:	55                   	push   %ebp
810003be:	89 e5                	mov    %esp,%ebp
810003c0:	83 ec 08             	sub    $0x8,%esp
    printf("%s",cli.prompt);
810003c3:	a1 e8 7c 00 81       	mov    0x81007ce8,%eax
810003c8:	83 ec 08             	sub    $0x8,%esp
810003cb:	50                   	push   %eax
810003cc:	68 52 69 00 81       	push   $0x81006952
810003d1:	e8 9a 3a 00 00       	call   81003e70 <iprintf>
810003d6:	83 c4 10             	add    $0x10,%esp

    // 清空缓存
    fflush(stdout);
810003d9:	a1 24 73 00 81       	mov    0x81007324,%eax
810003de:	8b 40 08             	mov    0x8(%eax),%eax
810003e1:	83 ec 0c             	sub    $0xc,%esp
810003e4:	50                   	push   %eax
810003e5:	e8 a7 07 00 00       	call   81000b91 <fflush>
810003ea:	83 c4 10             	add    $0x10,%esp
}
810003ed:	90                   	nop
810003ee:	c9                   	leave  
810003ef:	c3                   	ret    

810003f0 <main>:

int main(int argc,char** argv){
810003f0:	8d 4c 24 04          	lea    0x4(%esp),%ecx
810003f4:	83 e4 f0             	and    $0xfffffff0,%esp
810003f7:	ff 71 fc             	pushl  -0x4(%ecx)
810003fa:	55                   	push   %ebp
810003fb:	89 e5                	mov    %esp,%ebp
810003fd:	51                   	push   %ecx
810003fe:	83 ec 44             	sub    $0x44,%esp
81000401:	89 c8                	mov    %ecx,%eax

    // 打开tty0设备
    open(argv[0],0);
81000403:	8b 40 04             	mov    0x4(%eax),%eax
81000406:	8b 00                	mov    (%eax),%eax
81000408:	83 ec 08             	sub    $0x8,%esp
8100040b:	6a 00                	push   $0x0
8100040d:	50                   	push   %eax
8100040e:	e8 ec 02 00 00       	call   810006ff <open>
81000413:	83 c4 10             	add    $0x10,%esp
    dup(0);
81000416:	83 ec 0c             	sub    $0xc,%esp
81000419:	6a 00                	push   $0x0
8100041b:	e8 17 04 00 00       	call   81000837 <dup>
81000420:	83 c4 10             	add    $0x10,%esp
    dup(0);
81000423:	83 ec 0c             	sub    $0xc,%esp
81000426:	6a 00                	push   $0x0
81000428:	e8 0a 04 00 00       	call   81000837 <dup>
8100042d:	83 c4 10             	add    $0x10,%esp

    cli_init(prompt,cmd_list,sizeof(cmd_list)/sizeof(cmd_list[0]));
81000430:	a1 e0 6e 00 81       	mov    0x81006ee0,%eax
81000435:	83 ec 04             	sub    $0x4,%esp
81000438:	6a 04                	push   $0x4
8100043a:	68 40 6a 00 81       	push   $0x81006a40
8100043f:	50                   	push   %eax
81000440:	e8 dd fd ff ff       	call   81000222 <cli_init>
81000445:	83 c4 10             	add    $0x10,%esp

    for(;;){

        show_prompt();
81000448:	e8 70 ff ff ff       	call   810003bd <show_prompt>
        char* str=fgets(cli.curr_input,CLI_INPUT_SIZE,stdin);
8100044d:	a1 24 73 00 81       	mov    0x81007324,%eax
81000452:	8b 40 04             	mov    0x4(%eax),%eax
81000455:	83 ec 04             	sub    $0x4,%esp
81000458:	50                   	push   %eax
81000459:	68 00 04 00 00       	push   $0x400
8100045e:	68 e0 78 00 81       	push   $0x810078e0
81000463:	e8 c0 08 00 00       	call   81000d28 <fgets>
81000468:	83 c4 10             	add    $0x10,%esp
8100046b:	89 45 ec             	mov    %eax,-0x14(%ebp)
        if(!str){
8100046e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000472:	0f 84 13 01 00 00    	je     8100058b <main+0x19b>
            continue;
        }

        // 去掉换行符
        char* cr=strchr(cli.curr_input,'\n');
81000478:	83 ec 08             	sub    $0x8,%esp
8100047b:	6a 0a                	push   $0xa
8100047d:	68 e0 78 00 81       	push   $0x810078e0
81000482:	e8 99 3e 00 00       	call   81004320 <strchr>
81000487:	83 c4 10             	add    $0x10,%esp
8100048a:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if(cr){
8100048d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000491:	74 06                	je     81000499 <main+0xa9>
            *cr=0;
81000493:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000496:	c6 00 00             	movb   $0x0,(%eax)
        }

        // 去掉回车符
        cr=strchr(cli.curr_input,'\r');
81000499:	83 ec 08             	sub    $0x8,%esp
8100049c:	6a 0d                	push   $0xd
8100049e:	68 e0 78 00 81       	push   $0x810078e0
810004a3:	e8 78 3e 00 00       	call   81004320 <strchr>
810004a8:	83 c4 10             	add    $0x10,%esp
810004ab:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if(cr){
810004ae:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810004b2:	74 06                	je     810004ba <main+0xca>
            *cr=0;
810004b4:	8b 45 e8             	mov    -0x18(%ebp),%eax
810004b7:	c6 00 00             	movb   $0x0,(%eax)
        }


        int argc=0;
810004ba:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        char* argv[CLI_MAX_ARG_COUNT];
        memset(argv,0,sizeof(argv));
810004c1:	83 ec 04             	sub    $0x4,%esp
810004c4:	6a 28                	push   $0x28
810004c6:	6a 00                	push   $0x0
810004c8:	8d 45 b8             	lea    -0x48(%ebp),%eax
810004cb:	50                   	push   %eax
810004cc:	e8 8f 2d 00 00       	call   81003260 <memset>
810004d1:	83 c4 10             	add    $0x10,%esp

        // 分割命令行输入的字符串,解析出命令和参数
        const char* space=" ";
810004d4:	c7 45 e4 c4 6a 00 81 	movl   $0x81006ac4,-0x1c(%ebp)
        char* token=strtok(cli.curr_input,space);
810004db:	83 ec 08             	sub    $0x8,%esp
810004de:	ff 75 e4             	pushl  -0x1c(%ebp)
810004e1:	68 e0 78 00 81       	push   $0x810078e0
810004e6:	e8 5e 40 00 00       	call   81004549 <strtok>
810004eb:	83 c4 10             	add    $0x10,%esp
810004ee:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while(token){
810004f1:	eb 23                	jmp    81000516 <main+0x126>
            argv[argc++]=token;
810004f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810004f6:	8d 50 01             	lea    0x1(%eax),%edx
810004f9:	89 55 f4             	mov    %edx,-0xc(%ebp)
810004fc:	8b 55 f0             	mov    -0x10(%ebp),%edx
810004ff:	89 54 85 b8          	mov    %edx,-0x48(%ebp,%eax,4)
            token=strtok(NULL,space);
81000503:	83 ec 08             	sub    $0x8,%esp
81000506:	ff 75 e4             	pushl  -0x1c(%ebp)
81000509:	6a 00                	push   $0x0
8100050b:	e8 39 40 00 00       	call   81004549 <strtok>
81000510:	83 c4 10             	add    $0x10,%esp
81000513:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while(token){
81000516:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100051a:	75 d7                	jne    810004f3 <main+0x103>
        }

        if(argc==0){
8100051c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000520:	74 6f                	je     81000591 <main+0x1a1>
            continue;
        }

        const cli_cmd_t* cmd=find_builtin(argv[0]);
81000522:	8b 45 b8             	mov    -0x48(%ebp),%eax
81000525:	83 ec 0c             	sub    $0xc,%esp
81000528:	50                   	push   %eax
81000529:	e8 3c fd ff ff       	call   8100026a <find_builtin>
8100052e:	83 c4 10             	add    $0x10,%esp
81000531:	89 45 e0             	mov    %eax,-0x20(%ebp)
        if(cmd){
81000534:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000538:	74 17                	je     81000551 <main+0x161>
            run_builtin(cmd,argc,argv);
8100053a:	83 ec 04             	sub    $0x4,%esp
8100053d:	8d 45 b8             	lea    -0x48(%ebp),%eax
81000540:	50                   	push   %eax
81000541:	ff 75 f4             	pushl  -0xc(%ebp)
81000544:	ff 75 e0             	pushl  -0x20(%ebp)
81000547:	e8 62 fd ff ff       	call   810002ae <run_builtin>
8100054c:	83 c4 10             	add    $0x10,%esp
            continue; 
8100054f:	eb 41                	jmp    81000592 <main+0x1a2>
        }

        run_exec_file("",argc,argv);
81000551:	83 ec 04             	sub    $0x4,%esp
81000554:	8d 45 b8             	lea    -0x48(%ebp),%eax
81000557:	50                   	push   %eax
81000558:	ff 75 f4             	pushl  -0xc(%ebp)
8100055b:	68 c6 6a 00 81       	push   $0x81006ac6
81000560:	e8 8b fd ff ff       	call   810002f0 <run_exec_file>
81000565:	83 c4 10             	add    $0x10,%esp

        fprintf(stderr,ESC_COLOR_ERROR"Unknown command: %s\n"ESC_COLOR_DEFAULT,cli.curr_input);
81000568:	a1 24 73 00 81       	mov    0x81007324,%eax
8100056d:	8b 40 0c             	mov    0xc(%eax),%eax
81000570:	83 ec 04             	sub    $0x4,%esp
81000573:	68 e0 78 00 81       	push   $0x810078e0
81000578:	68 c8 6a 00 81       	push   $0x81006ac8
8100057d:	50                   	push   %eax
8100057e:	e8 ef 0b 00 00       	call   81001172 <fiprintf>
81000583:	83 c4 10             	add    $0x10,%esp
81000586:	e9 bd fe ff ff       	jmp    81000448 <main+0x58>
            continue;
8100058b:	90                   	nop
8100058c:	e9 b7 fe ff ff       	jmp    81000448 <main+0x58>
            continue;
81000591:	90                   	nop
    for(;;){
81000592:	e9 b1 fe ff ff       	jmp    81000448 <main+0x58>

81000597 <_start>:
    .text
    .global _start
    .extern cstart
_start:
    mov %ss,%ax
81000597:	66 8c d0             	mov    %ss,%ax
    mov %ax,%ds
8100059a:	8e d8                	mov    %eax,%ds
    mov %ax,%es
8100059c:	8e c0                	mov    %eax,%es
    mov %ax,%fs
8100059e:	8e e0                	mov    %eax,%fs
    mov %ax,%gs
810005a0:	8e e8                	mov    %eax,%gs
810005a2:	e9 00 00 00 00       	jmp    810005a7 <cstart>

810005a7 <cstart>:

int main(int argc,char** argv);

extern uint8_t __bss_start__[],__bss_end__[];

void cstart(int argc,char **argv){
810005a7:	55                   	push   %ebp
810005a8:	89 e5                	mov    %esp,%ebp
810005aa:	83 ec 18             	sub    $0x18,%esp
    uint8_t* start=__bss_start__;
810005ad:	c7 45 f4 e0 78 00 81 	movl   $0x810078e0,-0xc(%ebp)
    
    while(start<__bss_end__){
810005b4:	eb 09                	jmp    810005bf <cstart+0x18>
        *start++;     
810005b6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005b9:	83 c0 01             	add    $0x1,%eax
810005bc:	89 45 f4             	mov    %eax,-0xc(%ebp)
    while(start<__bss_end__){
810005bf:	81 7d f4 80 7d 00 81 	cmpl   $0x81007d80,-0xc(%ebp)
810005c6:	72 ee                	jb     810005b6 <cstart+0xf>
    }

    exit(main(argc,argv));
810005c8:	83 ec 08             	sub    $0x8,%esp
810005cb:	ff 75 0c             	pushl  0xc(%ebp)
810005ce:	ff 75 08             	pushl  0x8(%ebp)
810005d1:	e8 1a fe ff ff       	call   810003f0 <main>
810005d6:	83 c4 10             	add    $0x10,%esp
810005d9:	83 ec 0c             	sub    $0xc,%esp
810005dc:	50                   	push   %eax
810005dd:	e8 ed 02 00 00       	call   810008cf <exit>

810005e2 <sys_call>:
#include "lib_syscall.h"
#include "comm/types.h"
#include "core/syscall.h"
#include "os_cfg.h"

static inline int sys_call(syscall_args_t*args){
810005e2:	55                   	push   %ebp
810005e3:	89 e5                	mov    %esp,%ebp
810005e5:	57                   	push   %edi
810005e6:	56                   	push   %esi
810005e7:	53                   	push   %ebx
810005e8:	83 ec 10             	sub    $0x10,%esp
    uint32_t addr[]={0,SELECTOR_SYSCALL | 0};
810005eb:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810005f2:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcall *(%[a])"
        :"=a"(ret)
        :[a]"r"(addr),
         [arg3]"r"(args->arg3),
810005f9:	8b 45 08             	mov    0x8(%ebp),%eax
810005fc:	8b 50 10             	mov    0x10(%eax),%edx
         [arg2]"r"(args->arg2),
810005ff:	8b 45 08             	mov    0x8(%ebp),%eax
81000602:	8b 48 0c             	mov    0xc(%eax),%ecx
         [arg1]"r"(args->arg1),
81000605:	8b 45 08             	mov    0x8(%ebp),%eax
81000608:	8b 58 08             	mov    0x8(%eax),%ebx
         [arg0]"r"(args->arg0),
8100060b:	8b 45 08             	mov    0x8(%ebp),%eax
8100060e:	8b 70 04             	mov    0x4(%eax),%esi
         [id]"r"(args->id)
81000611:	8b 45 08             	mov    0x8(%ebp),%eax
81000614:	8b 38                	mov    (%eax),%edi
    __asm__ __volatile__(
81000616:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000619:	52                   	push   %edx
8100061a:	51                   	push   %ecx
8100061b:	53                   	push   %ebx
8100061c:	56                   	push   %esi
8100061d:	57                   	push   %edi
8100061e:	ff 18                	lcall  *(%eax)
81000620:	89 45 f0             	mov    %eax,-0x10(%ebp)
    );
    return ret;
81000623:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000626:	83 c4 10             	add    $0x10,%esp
81000629:	5b                   	pop    %ebx
8100062a:	5e                   	pop    %esi
8100062b:	5f                   	pop    %edi
8100062c:	5d                   	pop    %ebp
8100062d:	c3                   	ret    

8100062e <msleep>:

void msleep(int ms){
8100062e:	55                   	push   %ebp
8100062f:	89 e5                	mov    %esp,%ebp
81000631:	83 ec 20             	sub    $0x20,%esp
    if(ms<=0){
81000634:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000638:	7e 1b                	jle    81000655 <msleep+0x27>
        return;
    }

    syscall_args_t args;
    args.id=SYS_SLEEP;
8100063a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0=ms;
81000641:	8b 45 08             	mov    0x8(%ebp),%eax
81000644:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
81000647:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100064a:	50                   	push   %eax
8100064b:	e8 92 ff ff ff       	call   810005e2 <sys_call>
81000650:	83 c4 04             	add    $0x4,%esp
81000653:	eb 01                	jmp    81000656 <msleep+0x28>
        return;
81000655:	90                   	nop
}
81000656:	c9                   	leave  
81000657:	c3                   	ret    

81000658 <getpid>:

int getpid(void){
81000658:	55                   	push   %ebp
81000659:	89 e5                	mov    %esp,%ebp
8100065b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_GETPID;
8100065e:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
    return sys_call(&args);
81000665:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000668:	50                   	push   %eax
81000669:	e8 74 ff ff ff       	call   810005e2 <sys_call>
8100066e:	83 c4 04             	add    $0x4,%esp
}
81000671:	c9                   	leave  
81000672:	c3                   	ret    

81000673 <print_msg>:

void print_msg(const char* fmt,int arg){
81000673:	55                   	push   %ebp
81000674:	89 e5                	mov    %esp,%ebp
81000676:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_PRINT_MSG;
81000679:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)
    args.arg0=(uint32_t)fmt;
81000680:	8b 45 08             	mov    0x8(%ebp),%eax
81000683:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=arg;
81000686:	8b 45 0c             	mov    0xc(%ebp),%eax
81000689:	89 45 f4             	mov    %eax,-0xc(%ebp)
    sys_call(&args);
8100068c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100068f:	50                   	push   %eax
81000690:	e8 4d ff ff ff       	call   810005e2 <sys_call>
81000695:	83 c4 04             	add    $0x4,%esp
}
81000698:	90                   	nop
81000699:	c9                   	leave  
8100069a:	c3                   	ret    

8100069b <fork>:

int fork(void){
8100069b:	55                   	push   %ebp
8100069c:	89 e5                	mov    %esp,%ebp
8100069e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_FORK;
810006a1:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
    return sys_call(&args);
810006a8:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006ab:	50                   	push   %eax
810006ac:	e8 31 ff ff ff       	call   810005e2 <sys_call>
810006b1:	83 c4 04             	add    $0x4,%esp
}
810006b4:	c9                   	leave  
810006b5:	c3                   	ret    

810006b6 <execve>:

int execve(const char* name,char* const* argv,char* const* env){
810006b6:	55                   	push   %ebp
810006b7:	89 e5                	mov    %esp,%ebp
810006b9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_EXECVE;
810006bc:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0=(int)name;
810006c3:	8b 45 08             	mov    0x8(%ebp),%eax
810006c6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)argv;
810006c9:	8b 45 0c             	mov    0xc(%ebp),%eax
810006cc:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)env;
810006cf:	8b 45 10             	mov    0x10(%ebp),%eax
810006d2:	89 45 f8             	mov    %eax,-0x8(%ebp)

    sys_call(&args);
810006d5:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006d8:	50                   	push   %eax
810006d9:	e8 04 ff ff ff       	call   810005e2 <sys_call>
810006de:	83 c4 04             	add    $0x4,%esp
}
810006e1:	90                   	nop
810006e2:	c9                   	leave  
810006e3:	c3                   	ret    

810006e4 <yield>:

int yield(void){
810006e4:	55                   	push   %ebp
810006e5:	89 e5                	mov    %esp,%ebp
810006e7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_YIELD;
810006ea:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
810006f1:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006f4:	50                   	push   %eax
810006f5:	e8 e8 fe ff ff       	call   810005e2 <sys_call>
810006fa:	83 c4 04             	add    $0x4,%esp
}
810006fd:	c9                   	leave  
810006fe:	c3                   	ret    

810006ff <open>:

int open(const char*name,int flags, ...){
810006ff:	55                   	push   %ebp
81000700:	89 e5                	mov    %esp,%ebp
81000702:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_OPEN;
81000705:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0=(int)name;
8100070c:	8b 45 08             	mov    0x8(%ebp),%eax
8100070f:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)flags;
81000712:	8b 45 0c             	mov    0xc(%ebp),%eax
81000715:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000718:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100071b:	50                   	push   %eax
8100071c:	e8 c1 fe ff ff       	call   810005e2 <sys_call>
81000721:	83 c4 04             	add    $0x4,%esp
}
81000724:	c9                   	leave  
81000725:	c3                   	ret    

81000726 <read>:

int read(int file,char* ptr,int len){
81000726:	55                   	push   %ebp
81000727:	89 e5                	mov    %esp,%ebp
81000729:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_READ;
8100072c:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0=(int)file;
81000733:	8b 45 08             	mov    0x8(%ebp),%eax
81000736:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)ptr;
81000739:	8b 45 0c             	mov    0xc(%ebp),%eax
8100073c:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)len;
8100073f:	8b 45 10             	mov    0x10(%ebp),%eax
81000742:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000745:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000748:	50                   	push   %eax
81000749:	e8 94 fe ff ff       	call   810005e2 <sys_call>
8100074e:	83 c4 04             	add    $0x4,%esp
}
81000751:	c9                   	leave  
81000752:	c3                   	ret    

81000753 <write>:

int write(int file,char*ptr,int len){
81000753:	55                   	push   %ebp
81000754:	89 e5                	mov    %esp,%ebp
81000756:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_WRITE;
81000759:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0=(int)file;
81000760:	8b 45 08             	mov    0x8(%ebp),%eax
81000763:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)ptr;
81000766:	8b 45 0c             	mov    0xc(%ebp),%eax
81000769:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)len;
8100076c:	8b 45 10             	mov    0x10(%ebp),%eax
8100076f:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000772:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000775:	50                   	push   %eax
81000776:	e8 67 fe ff ff       	call   810005e2 <sys_call>
8100077b:	83 c4 04             	add    $0x4,%esp
}
8100077e:	c9                   	leave  
8100077f:	c3                   	ret    

81000780 <close>:

int close(int file){
81000780:	55                   	push   %ebp
81000781:	89 e5                	mov    %esp,%ebp
81000783:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_CLOSE;
81000786:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0=(int)file;
8100078d:	8b 45 08             	mov    0x8(%ebp),%eax
81000790:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000793:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000796:	50                   	push   %eax
81000797:	e8 46 fe ff ff       	call   810005e2 <sys_call>
8100079c:	83 c4 04             	add    $0x4,%esp
}
8100079f:	c9                   	leave  
810007a0:	c3                   	ret    

810007a1 <lseek>:

int lseek(int file,int ptr,int dir){
810007a1:	55                   	push   %ebp
810007a2:	89 e5                	mov    %esp,%ebp
810007a4:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_LSEEK;
810007a7:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0=(int)file;
810007ae:	8b 45 08             	mov    0x8(%ebp),%eax
810007b1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)ptr;
810007b4:	8b 45 0c             	mov    0xc(%ebp),%eax
810007b7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2=(int)dir;
810007ba:	8b 45 10             	mov    0x10(%ebp),%eax
810007bd:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
810007c0:	8d 45 ec             	lea    -0x14(%ebp),%eax
810007c3:	50                   	push   %eax
810007c4:	e8 19 fe ff ff       	call   810005e2 <sys_call>
810007c9:	83 c4 04             	add    $0x4,%esp
}
810007cc:	c9                   	leave  
810007cd:	c3                   	ret    

810007ce <isatty>:

int isatty(int file){
810007ce:	55                   	push   %ebp
810007cf:	89 e5                	mov    %esp,%ebp
810007d1:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_ISATTY;
810007d4:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0=(int)file;
810007db:	8b 45 08             	mov    0x8(%ebp),%eax
810007de:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810007e1:	8d 45 ec             	lea    -0x14(%ebp),%eax
810007e4:	50                   	push   %eax
810007e5:	e8 f8 fd ff ff       	call   810005e2 <sys_call>
810007ea:	83 c4 04             	add    $0x4,%esp
}
810007ed:	c9                   	leave  
810007ee:	c3                   	ret    

810007ef <fstat>:

int fstat(int file,struct stat* st){
810007ef:	55                   	push   %ebp
810007f0:	89 e5                	mov    %esp,%ebp
810007f2:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_FSTAT;
810007f5:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0=(int)file;
810007fc:	8b 45 08             	mov    0x8(%ebp),%eax
810007ff:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1=(int)st;
81000802:	8b 45 0c             	mov    0xc(%ebp),%eax
81000805:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000808:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100080b:	50                   	push   %eax
8100080c:	e8 d1 fd ff ff       	call   810005e2 <sys_call>
81000811:	83 c4 04             	add    $0x4,%esp
}
81000814:	c9                   	leave  
81000815:	c3                   	ret    

81000816 <sbrk>:

void* sbrk(ptrdiff_t incr){
81000816:	55                   	push   %ebp
81000817:	89 e5                	mov    %esp,%ebp
81000819:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_SBRK;
8100081c:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0=(int)incr;
81000823:	8b 45 08             	mov    0x8(%ebp),%eax
81000826:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (void*)sys_call(&args);
81000829:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100082c:	50                   	push   %eax
8100082d:	e8 b0 fd ff ff       	call   810005e2 <sys_call>
81000832:	83 c4 04             	add    $0x4,%esp
}
81000835:	c9                   	leave  
81000836:	c3                   	ret    

81000837 <dup>:
/** 
* @brief 复制文件描述符
* @param file 需要复制的文件描述符
* @return 复制后的文件描述符，失败返回-1
*/
int dup(int file){
81000837:	55                   	push   %ebp
81000838:	89 e5                	mov    %esp,%ebp
8100083a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_DUP;
8100083d:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0=(int)file;
81000844:	8b 45 08             	mov    0x8(%ebp),%eax
81000847:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100084a:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100084d:	50                   	push   %eax
8100084e:	e8 8f fd ff ff       	call   810005e2 <sys_call>
81000853:	83 c4 04             	add    $0x4,%esp
}
81000856:	c9                   	leave  
81000857:	c3                   	ret    

81000858 <_exit>:

/**
 * @brief  当我们使用newlib库时，exit函数会调用_exit函数
 * @param status 退出的状态码
 */
void _exit(int status){
81000858:	55                   	push   %ebp
81000859:	89 e5                	mov    %esp,%ebp
8100085b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_EXIT;
8100085e:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0=(int)status;
81000865:	8b 45 08             	mov    0x8(%ebp),%eax
81000868:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
8100086b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100086e:	50                   	push   %eax
8100086f:	e8 6e fd ff ff       	call   810005e2 <sys_call>
81000874:	83 c4 04             	add    $0x4,%esp

    for(;;){
        asm volatile("hlt");
81000877:	f4                   	hlt    
81000878:	eb fd                	jmp    81000877 <_exit+0x1f>

8100087a <wait>:
    }
}

int wait(int* status){
8100087a:	55                   	push   %ebp
8100087b:	89 e5                	mov    %esp,%ebp
8100087d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id=SYS_WAIT;
81000880:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0=(int)status;
81000887:	8b 45 08             	mov    0x8(%ebp),%eax
8100088a:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100088d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000890:	50                   	push   %eax
81000891:	e8 4c fd ff ff       	call   810005e2 <sys_call>
81000896:	83 c4 04             	add    $0x4,%esp
81000899:	c9                   	leave  
8100089a:	c3                   	ret    

8100089b <atoi>:
8100089b:	55                   	push   %ebp
8100089c:	89 e5                	mov    %esp,%ebp
8100089e:	83 ec 08             	sub    $0x8,%esp
810008a1:	83 ec 04             	sub    $0x4,%esp
810008a4:	6a 0a                	push   $0xa
810008a6:	6a 00                	push   $0x0
810008a8:	ff 75 08             	pushl  0x8(%ebp)
810008ab:	e8 d6 3f 00 00       	call   81004886 <strtol>
810008b0:	83 c4 10             	add    $0x10,%esp
810008b3:	c9                   	leave  
810008b4:	c3                   	ret    

810008b5 <_atoi_r>:
810008b5:	55                   	push   %ebp
810008b6:	89 e5                	mov    %esp,%ebp
810008b8:	83 ec 08             	sub    $0x8,%esp
810008bb:	6a 0a                	push   $0xa
810008bd:	6a 00                	push   $0x0
810008bf:	ff 75 0c             	pushl  0xc(%ebp)
810008c2:	ff 75 08             	pushl  0x8(%ebp)
810008c5:	e8 72 3f 00 00       	call   8100483c <_strtol_r>
810008ca:	83 c4 10             	add    $0x10,%esp
810008cd:	c9                   	leave  
810008ce:	c3                   	ret    

810008cf <exit>:
810008cf:	55                   	push   %ebp
810008d0:	89 e5                	mov    %esp,%ebp
810008d2:	83 ec 08             	sub    $0x8,%esp
810008d5:	83 ec 08             	sub    $0x8,%esp
810008d8:	6a 00                	push   $0x0
810008da:	ff 75 08             	pushl  0x8(%ebp)
810008dd:	e8 a1 42 00 00       	call   81004b83 <__call_exitprocs>
810008e2:	83 c4 10             	add    $0x10,%esp
810008e5:	a1 70 6b 00 81       	mov    0x81006b70,%eax
810008ea:	8b 40 3c             	mov    0x3c(%eax),%eax
810008ed:	85 c0                	test   %eax,%eax
810008ef:	74 17                	je     81000908 <exit+0x39>
810008f1:	a1 70 6b 00 81       	mov    0x81006b70,%eax
810008f6:	8b 40 3c             	mov    0x3c(%eax),%eax
810008f9:	8b 15 70 6b 00 81    	mov    0x81006b70,%edx
810008ff:	83 ec 0c             	sub    $0xc,%esp
81000902:	52                   	push   %edx
81000903:	ff d0                	call   *%eax
81000905:	83 c4 10             	add    $0x10,%esp
81000908:	83 ec 0c             	sub    $0xc,%esp
8100090b:	ff 75 08             	pushl  0x8(%ebp)
8100090e:	e8 45 ff ff ff       	call   81000858 <_exit>

81000913 <__sflush_r>:
81000913:	55                   	push   %ebp
81000914:	89 e5                	mov    %esp,%ebp
81000916:	57                   	push   %edi
81000917:	56                   	push   %esi
81000918:	53                   	push   %ebx
81000919:	83 ec 1c             	sub    $0x1c,%esp
8100091c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100091f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000923:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81000927:	0f bf 45 de          	movswl -0x22(%ebp),%eax
8100092b:	83 e0 08             	and    $0x8,%eax
8100092e:	85 c0                	test   %eax,%eax
81000930:	0f 85 93 01 00 00    	jne    81000ac9 <__sflush_r+0x1b6>
81000936:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100093a:	80 cc 08             	or     $0x8,%ah
8100093d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000941:	8b 43 04             	mov    0x4(%ebx),%eax
81000944:	85 c0                	test   %eax,%eax
81000946:	7f 0b                	jg     81000953 <__sflush_r+0x40>
81000948:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100094b:	85 c0                	test   %eax,%eax
8100094d:	0f 8e 6f 01 00 00    	jle    81000ac2 <__sflush_r+0x1af>
81000953:	8b 43 28             	mov    0x28(%ebx),%eax
81000956:	85 c0                	test   %eax,%eax
81000958:	0f 84 64 01 00 00    	je     81000ac2 <__sflush_r+0x1af>
8100095e:	8b 45 08             	mov    0x8(%ebp),%eax
81000961:	8b 00                	mov    (%eax),%eax
81000963:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000966:	8b 45 08             	mov    0x8(%ebp),%eax
81000969:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100096f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000973:	98                   	cwtl   
81000974:	25 00 10 00 00       	and    $0x1000,%eax
81000979:	85 c0                	test   %eax,%eax
8100097b:	74 08                	je     81000985 <__sflush_r+0x72>
8100097d:	8b 43 50             	mov    0x50(%ebx),%eax
81000980:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000983:	eb 64                	jmp    810009e9 <__sflush_r+0xd6>
81000985:	8b 43 28             	mov    0x28(%ebx),%eax
81000988:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100098b:	6a 01                	push   $0x1
8100098d:	6a 00                	push   $0x0
8100098f:	52                   	push   %edx
81000990:	ff 75 08             	pushl  0x8(%ebp)
81000993:	ff d0                	call   *%eax
81000995:	83 c4 10             	add    $0x10,%esp
81000998:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100099b:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100099f:	75 48                	jne    810009e9 <__sflush_r+0xd6>
810009a1:	8b 45 08             	mov    0x8(%ebp),%eax
810009a4:	8b 00                	mov    (%eax),%eax
810009a6:	85 c0                	test   %eax,%eax
810009a8:	74 3f                	je     810009e9 <__sflush_r+0xd6>
810009aa:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
810009b1:	8b 45 08             	mov    0x8(%ebp),%eax
810009b4:	8b 00                	mov    (%eax),%eax
810009b6:	83 f8 1d             	cmp    $0x1d,%eax
810009b9:	74 0a                	je     810009c5 <__sflush_r+0xb2>
810009bb:	8b 45 08             	mov    0x8(%ebp),%eax
810009be:	8b 00                	mov    (%eax),%eax
810009c0:	83 f8 16             	cmp    $0x16,%eax
810009c3:	75 11                	jne    810009d6 <__sflush_r+0xc3>
810009c5:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
810009cc:	8b 45 08             	mov    0x8(%ebp),%eax
810009cf:	8b 55 d8             	mov    -0x28(%ebp),%edx
810009d2:	89 10                	mov    %edx,(%eax)
810009d4:	eb 0b                	jmp    810009e1 <__sflush_r+0xce>
810009d6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009da:	83 c8 40             	or     $0x40,%eax
810009dd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810009e1:	8b 45 e0             	mov    -0x20(%ebp),%eax
810009e4:	e9 48 01 00 00       	jmp    81000b31 <__sflush_r+0x21e>
810009e9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009ed:	98                   	cwtl   
810009ee:	83 e0 04             	and    $0x4,%eax
810009f1:	85 c0                	test   %eax,%eax
810009f3:	74 13                	je     81000a08 <__sflush_r+0xf5>
810009f5:	8b 43 04             	mov    0x4(%ebx),%eax
810009f8:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810009fb:	8b 43 30             	mov    0x30(%ebx),%eax
810009fe:	85 c0                	test   %eax,%eax
81000a00:	74 06                	je     81000a08 <__sflush_r+0xf5>
81000a02:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000a05:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000a08:	8b 43 28             	mov    0x28(%ebx),%eax
81000a0b:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000a0e:	6a 00                	push   $0x0
81000a10:	ff 75 e4             	pushl  -0x1c(%ebp)
81000a13:	52                   	push   %edx
81000a14:	ff 75 08             	pushl  0x8(%ebp)
81000a17:	ff d0                	call   *%eax
81000a19:	83 c4 10             	add    $0x10,%esp
81000a1c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000a1f:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000a23:	75 1d                	jne    81000a42 <__sflush_r+0x12f>
81000a25:	8b 45 08             	mov    0x8(%ebp),%eax
81000a28:	8b 00                	mov    (%eax),%eax
81000a2a:	85 c0                	test   %eax,%eax
81000a2c:	74 14                	je     81000a42 <__sflush_r+0x12f>
81000a2e:	8b 45 08             	mov    0x8(%ebp),%eax
81000a31:	8b 00                	mov    (%eax),%eax
81000a33:	83 f8 1d             	cmp    $0x1d,%eax
81000a36:	74 0a                	je     81000a42 <__sflush_r+0x12f>
81000a38:	8b 45 08             	mov    0x8(%ebp),%eax
81000a3b:	8b 00                	mov    (%eax),%eax
81000a3d:	83 f8 16             	cmp    $0x16,%eax
81000a40:	75 6e                	jne    81000ab0 <__sflush_r+0x19d>
81000a42:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a46:	80 e4 f7             	and    $0xf7,%ah
81000a49:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000a4d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81000a54:	8b 43 10             	mov    0x10(%ebx),%eax
81000a57:	89 03                	mov    %eax,(%ebx)
81000a59:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a5d:	98                   	cwtl   
81000a5e:	25 00 10 00 00       	and    $0x1000,%eax
81000a63:	85 c0                	test   %eax,%eax
81000a65:	74 15                	je     81000a7c <__sflush_r+0x169>
81000a67:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000a6b:	75 09                	jne    81000a76 <__sflush_r+0x163>
81000a6d:	8b 45 08             	mov    0x8(%ebp),%eax
81000a70:	8b 00                	mov    (%eax),%eax
81000a72:	85 c0                	test   %eax,%eax
81000a74:	75 06                	jne    81000a7c <__sflush_r+0x169>
81000a76:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000a79:	89 43 50             	mov    %eax,0x50(%ebx)
81000a7c:	8b 45 08             	mov    0x8(%ebp),%eax
81000a7f:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000a82:	89 10                	mov    %edx,(%eax)
81000a84:	8b 43 30             	mov    0x30(%ebx),%eax
81000a87:	85 c0                	test   %eax,%eax
81000a89:	74 37                	je     81000ac2 <__sflush_r+0x1af>
81000a8b:	8b 53 30             	mov    0x30(%ebx),%edx
81000a8e:	8d 43 40             	lea    0x40(%ebx),%eax
81000a91:	39 c2                	cmp    %eax,%edx
81000a93:	74 12                	je     81000aa7 <__sflush_r+0x194>
81000a95:	8b 43 30             	mov    0x30(%ebx),%eax
81000a98:	83 ec 08             	sub    $0x8,%esp
81000a9b:	50                   	push   %eax
81000a9c:	ff 75 08             	pushl  0x8(%ebp)
81000a9f:	e8 fa 06 00 00       	call   8100119e <_free_r>
81000aa4:	83 c4 10             	add    $0x10,%esp
81000aa7:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000aae:	eb 12                	jmp    81000ac2 <__sflush_r+0x1af>
81000ab0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ab4:	83 c8 40             	or     $0x40,%eax
81000ab7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000abb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000ac0:	eb 6f                	jmp    81000b31 <__sflush_r+0x21e>
81000ac2:	b8 00 00 00 00       	mov    $0x0,%eax
81000ac7:	eb 68                	jmp    81000b31 <__sflush_r+0x21e>
81000ac9:	8b 73 10             	mov    0x10(%ebx),%esi
81000acc:	85 f6                	test   %esi,%esi
81000ace:	75 07                	jne    81000ad7 <__sflush_r+0x1c4>
81000ad0:	b8 00 00 00 00       	mov    $0x0,%eax
81000ad5:	eb 5a                	jmp    81000b31 <__sflush_r+0x21e>
81000ad7:	8b 03                	mov    (%ebx),%eax
81000ad9:	29 f0                	sub    %esi,%eax
81000adb:	89 c7                	mov    %eax,%edi
81000add:	89 33                	mov    %esi,(%ebx)
81000adf:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000ae3:	83 e0 03             	and    $0x3,%eax
81000ae6:	85 c0                	test   %eax,%eax
81000ae8:	75 05                	jne    81000aef <__sflush_r+0x1dc>
81000aea:	8b 43 14             	mov    0x14(%ebx),%eax
81000aed:	eb 05                	jmp    81000af4 <__sflush_r+0x1e1>
81000aef:	b8 00 00 00 00       	mov    $0x0,%eax
81000af4:	89 43 08             	mov    %eax,0x8(%ebx)
81000af7:	eb 2f                	jmp    81000b28 <__sflush_r+0x215>
81000af9:	8b 43 24             	mov    0x24(%ebx),%eax
81000afc:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000aff:	57                   	push   %edi
81000b00:	56                   	push   %esi
81000b01:	52                   	push   %edx
81000b02:	ff 75 08             	pushl  0x8(%ebp)
81000b05:	ff d0                	call   *%eax
81000b07:	83 c4 10             	add    $0x10,%esp
81000b0a:	85 c0                	test   %eax,%eax
81000b0c:	7f 12                	jg     81000b20 <__sflush_r+0x20d>
81000b0e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b12:	83 c8 40             	or     $0x40,%eax
81000b15:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000b19:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000b1e:	eb 11                	jmp    81000b31 <__sflush_r+0x21e>
81000b20:	89 c1                	mov    %eax,%ecx
81000b22:	89 c8                	mov    %ecx,%eax
81000b24:	01 c6                	add    %eax,%esi
81000b26:	29 cf                	sub    %ecx,%edi
81000b28:	85 ff                	test   %edi,%edi
81000b2a:	7f cd                	jg     81000af9 <__sflush_r+0x1e6>
81000b2c:	b8 00 00 00 00       	mov    $0x0,%eax
81000b31:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000b34:	5b                   	pop    %ebx
81000b35:	5e                   	pop    %esi
81000b36:	5f                   	pop    %edi
81000b37:	5d                   	pop    %ebp
81000b38:	c3                   	ret    

81000b39 <_fflush_r>:
81000b39:	55                   	push   %ebp
81000b3a:	89 e5                	mov    %esp,%ebp
81000b3c:	53                   	push   %ebx
81000b3d:	83 ec 14             	sub    $0x14,%esp
81000b40:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000b43:	8b 45 08             	mov    0x8(%ebp),%eax
81000b46:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000b49:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000b4d:	74 18                	je     81000b67 <_fflush_r+0x2e>
81000b4f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b52:	8b 40 38             	mov    0x38(%eax),%eax
81000b55:	85 c0                	test   %eax,%eax
81000b57:	75 0e                	jne    81000b67 <_fflush_r+0x2e>
81000b59:	83 ec 0c             	sub    $0xc,%esp
81000b5c:	ff 75 f4             	pushl  -0xc(%ebp)
81000b5f:	e8 d8 04 00 00       	call   8100103c <__sinit>
81000b64:	83 c4 10             	add    $0x10,%esp
81000b67:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b6b:	66 85 c0             	test   %ax,%ax
81000b6e:	75 07                	jne    81000b77 <_fflush_r+0x3e>
81000b70:	b8 00 00 00 00       	mov    $0x0,%eax
81000b75:	eb 15                	jmp    81000b8c <_fflush_r+0x53>
81000b77:	83 ec 08             	sub    $0x8,%esp
81000b7a:	53                   	push   %ebx
81000b7b:	ff 75 08             	pushl  0x8(%ebp)
81000b7e:	e8 90 fd ff ff       	call   81000913 <__sflush_r>
81000b83:	83 c4 10             	add    $0x10,%esp
81000b86:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000b89:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000b8c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000b8f:	c9                   	leave  
81000b90:	c3                   	ret    

81000b91 <fflush>:
81000b91:	55                   	push   %ebp
81000b92:	89 e5                	mov    %esp,%ebp
81000b94:	83 ec 08             	sub    $0x8,%esp
81000b97:	8b 55 08             	mov    0x8(%ebp),%edx
81000b9a:	85 d2                	test   %edx,%edx
81000b9c:	75 18                	jne    81000bb6 <fflush+0x25>
81000b9e:	a1 70 6b 00 81       	mov    0x81006b70,%eax
81000ba3:	83 ec 08             	sub    $0x8,%esp
81000ba6:	68 39 0b 00 81       	push   $0x81000b39
81000bab:	50                   	push   %eax
81000bac:	e8 91 0b 00 00       	call   81001742 <_fwalk_reent>
81000bb1:	83 c4 10             	add    $0x10,%esp
81000bb4:	eb 12                	jmp    81000bc8 <fflush+0x37>
81000bb6:	a1 24 73 00 81       	mov    0x81007324,%eax
81000bbb:	83 ec 08             	sub    $0x8,%esp
81000bbe:	52                   	push   %edx
81000bbf:	50                   	push   %eax
81000bc0:	e8 74 ff ff ff       	call   81000b39 <_fflush_r>
81000bc5:	83 c4 10             	add    $0x10,%esp
81000bc8:	c9                   	leave  
81000bc9:	c3                   	ret    

81000bca <_fgets_r>:
81000bca:	55                   	push   %ebp
81000bcb:	89 e5                	mov    %esp,%ebp
81000bcd:	83 ec 28             	sub    $0x28,%esp
81000bd0:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
81000bd4:	7f 0a                	jg     81000be0 <_fgets_r+0x16>
81000bd6:	b8 00 00 00 00       	mov    $0x0,%eax
81000bdb:	e9 46 01 00 00       	jmp    81000d26 <_fgets_r+0x15c>
81000be0:	8b 45 0c             	mov    0xc(%ebp),%eax
81000be3:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000be6:	8b 45 08             	mov    0x8(%ebp),%eax
81000be9:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000bec:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000bf0:	74 18                	je     81000c0a <_fgets_r+0x40>
81000bf2:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000bf5:	8b 40 38             	mov    0x38(%eax),%eax
81000bf8:	85 c0                	test   %eax,%eax
81000bfa:	75 0e                	jne    81000c0a <_fgets_r+0x40>
81000bfc:	83 ec 0c             	sub    $0xc,%esp
81000bff:	ff 75 ec             	pushl  -0x14(%ebp)
81000c02:	e8 35 04 00 00       	call   8100103c <__sinit>
81000c07:	83 c4 10             	add    $0x10,%esp
81000c0a:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
81000c0e:	8b 45 14             	mov    0x14(%ebp),%eax
81000c11:	8b 40 04             	mov    0x4(%eax),%eax
81000c14:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000c17:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000c1b:	75 34                	jne    81000c51 <_fgets_r+0x87>
81000c1d:	83 ec 08             	sub    $0x8,%esp
81000c20:	ff 75 14             	pushl  0x14(%ebp)
81000c23:	ff 75 08             	pushl  0x8(%ebp)
81000c26:	e8 99 33 00 00       	call   81003fc4 <__srefill_r>
81000c2b:	83 c4 10             	add    $0x10,%esp
81000c2e:	85 c0                	test   %eax,%eax
81000c30:	74 16                	je     81000c48 <_fgets_r+0x7e>
81000c32:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000c35:	3b 45 0c             	cmp    0xc(%ebp),%eax
81000c38:	0f 85 de 00 00 00    	jne    81000d1c <_fgets_r+0x152>
81000c3e:	b8 00 00 00 00       	mov    $0x0,%eax
81000c43:	e9 de 00 00 00       	jmp    81000d26 <_fgets_r+0x15c>
81000c48:	8b 45 14             	mov    0x14(%ebp),%eax
81000c4b:	8b 40 04             	mov    0x4(%eax),%eax
81000c4e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000c51:	8b 45 14             	mov    0x14(%ebp),%eax
81000c54:	8b 00                	mov    (%eax),%eax
81000c56:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000c59:	8b 45 10             	mov    0x10(%ebp),%eax
81000c5c:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000c5f:	76 06                	jbe    81000c67 <_fgets_r+0x9d>
81000c61:	8b 45 10             	mov    0x10(%ebp),%eax
81000c64:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000c67:	83 ec 04             	sub    $0x4,%esp
81000c6a:	ff 75 f4             	pushl  -0xc(%ebp)
81000c6d:	6a 0a                	push   $0xa
81000c6f:	ff 75 e8             	pushl  -0x18(%ebp)
81000c72:	e8 b9 24 00 00       	call   81003130 <memchr>
81000c77:	83 c4 10             	add    $0x10,%esp
81000c7a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000c7d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000c81:	74 4a                	je     81000ccd <_fgets_r+0x103>
81000c83:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81000c87:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000c8a:	2b 45 e8             	sub    -0x18(%ebp),%eax
81000c8d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000c90:	8b 45 14             	mov    0x14(%ebp),%eax
81000c93:	8b 40 04             	mov    0x4(%eax),%eax
81000c96:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000c99:	89 c2                	mov    %eax,%edx
81000c9b:	8b 45 14             	mov    0x14(%ebp),%eax
81000c9e:	89 50 04             	mov    %edx,0x4(%eax)
81000ca1:	8b 45 14             	mov    0x14(%ebp),%eax
81000ca4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81000ca7:	89 10                	mov    %edx,(%eax)
81000ca9:	83 ec 04             	sub    $0x4,%esp
81000cac:	ff 75 f4             	pushl  -0xc(%ebp)
81000caf:	ff 75 e8             	pushl  -0x18(%ebp)
81000cb2:	ff 75 f0             	pushl  -0x10(%ebp)
81000cb5:	e8 5e 25 00 00       	call   81003218 <memcpy>
81000cba:	83 c4 10             	add    $0x10,%esp
81000cbd:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000cc0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000cc3:	01 d0                	add    %edx,%eax
81000cc5:	c6 00 00             	movb   $0x0,(%eax)
81000cc8:	8b 45 0c             	mov    0xc(%ebp),%eax
81000ccb:	eb 59                	jmp    81000d26 <_fgets_r+0x15c>
81000ccd:	8b 45 14             	mov    0x14(%ebp),%eax
81000cd0:	8b 40 04             	mov    0x4(%eax),%eax
81000cd3:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000cd6:	89 c2                	mov    %eax,%edx
81000cd8:	8b 45 14             	mov    0x14(%ebp),%eax
81000cdb:	89 50 04             	mov    %edx,0x4(%eax)
81000cde:	8b 45 14             	mov    0x14(%ebp),%eax
81000ce1:	8b 10                	mov    (%eax),%edx
81000ce3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ce6:	01 c2                	add    %eax,%edx
81000ce8:	8b 45 14             	mov    0x14(%ebp),%eax
81000ceb:	89 10                	mov    %edx,(%eax)
81000ced:	83 ec 04             	sub    $0x4,%esp
81000cf0:	ff 75 f4             	pushl  -0xc(%ebp)
81000cf3:	ff 75 e8             	pushl  -0x18(%ebp)
81000cf6:	ff 75 f0             	pushl  -0x10(%ebp)
81000cf9:	e8 1a 25 00 00       	call   81003218 <memcpy>
81000cfe:	83 c4 10             	add    $0x10,%esp
81000d01:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d04:	01 45 f0             	add    %eax,-0x10(%ebp)
81000d07:	8b 45 10             	mov    0x10(%ebp),%eax
81000d0a:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000d0d:	89 45 10             	mov    %eax,0x10(%ebp)
81000d10:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81000d14:	0f 85 f4 fe ff ff    	jne    81000c0e <_fgets_r+0x44>
81000d1a:	eb 01                	jmp    81000d1d <_fgets_r+0x153>
81000d1c:	90                   	nop
81000d1d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d20:	c6 00 00             	movb   $0x0,(%eax)
81000d23:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d26:	c9                   	leave  
81000d27:	c3                   	ret    

81000d28 <fgets>:
81000d28:	55                   	push   %ebp
81000d29:	89 e5                	mov    %esp,%ebp
81000d2b:	83 ec 08             	sub    $0x8,%esp
81000d2e:	a1 24 73 00 81       	mov    0x81007324,%eax
81000d33:	ff 75 10             	pushl  0x10(%ebp)
81000d36:	ff 75 0c             	pushl  0xc(%ebp)
81000d39:	ff 75 08             	pushl  0x8(%ebp)
81000d3c:	50                   	push   %eax
81000d3d:	e8 88 fe ff ff       	call   81000bca <_fgets_r>
81000d42:	83 c4 10             	add    $0x10,%esp
81000d45:	c9                   	leave  
81000d46:	c3                   	ret    

81000d47 <std>:
81000d47:	55                   	push   %ebp
81000d48:	89 e5                	mov    %esp,%ebp
81000d4a:	83 ec 08             	sub    $0x8,%esp
81000d4d:	8b 45 08             	mov    0x8(%ebp),%eax
81000d50:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000d56:	8b 45 08             	mov    0x8(%ebp),%eax
81000d59:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000d60:	8b 45 08             	mov    0x8(%ebp),%eax
81000d63:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000d6a:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d6d:	89 c2                	mov    %eax,%edx
81000d6f:	8b 45 08             	mov    0x8(%ebp),%eax
81000d72:	66 89 50 0c          	mov    %dx,0xc(%eax)
81000d76:	8b 45 08             	mov    0x8(%ebp),%eax
81000d79:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000d80:	8b 45 10             	mov    0x10(%ebp),%eax
81000d83:	89 c2                	mov    %eax,%edx
81000d85:	8b 45 08             	mov    0x8(%ebp),%eax
81000d88:	66 89 50 0e          	mov    %dx,0xe(%eax)
81000d8c:	8b 45 08             	mov    0x8(%ebp),%eax
81000d8f:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000d96:	8b 45 08             	mov    0x8(%ebp),%eax
81000d99:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000da0:	8b 45 08             	mov    0x8(%ebp),%eax
81000da3:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000daa:	8b 45 08             	mov    0x8(%ebp),%eax
81000dad:	83 c0 5c             	add    $0x5c,%eax
81000db0:	83 ec 04             	sub    $0x4,%esp
81000db3:	6a 08                	push   $0x8
81000db5:	6a 00                	push   $0x0
81000db7:	50                   	push   %eax
81000db8:	e8 a3 24 00 00       	call   81003260 <memset>
81000dbd:	83 c4 10             	add    $0x10,%esp
81000dc0:	8b 45 08             	mov    0x8(%ebp),%eax
81000dc3:	8b 55 08             	mov    0x8(%ebp),%edx
81000dc6:	89 50 1c             	mov    %edx,0x1c(%eax)
81000dc9:	8b 45 08             	mov    0x8(%ebp),%eax
81000dcc:	c7 40 20 05 42 00 81 	movl   $0x81004205,0x20(%eax)
81000dd3:	8b 45 08             	mov    0x8(%ebp),%eax
81000dd6:	c7 40 24 53 42 00 81 	movl   $0x81004253,0x24(%eax)
81000ddd:	8b 45 08             	mov    0x8(%ebp),%eax
81000de0:	c7 40 28 ae 42 00 81 	movl   $0x810042ae,0x28(%eax)
81000de7:	8b 45 08             	mov    0x8(%ebp),%eax
81000dea:	c7 40 2c f8 42 00 81 	movl   $0x810042f8,0x2c(%eax)
81000df1:	90                   	nop
81000df2:	c9                   	leave  
81000df3:	c3                   	ret    

81000df4 <stdin_init>:
81000df4:	55                   	push   %ebp
81000df5:	89 e5                	mov    %esp,%ebp
81000df7:	83 ec 08             	sub    $0x8,%esp
81000dfa:	83 ec 04             	sub    $0x4,%esp
81000dfd:	6a 00                	push   $0x0
81000dff:	6a 04                	push   $0x4
81000e01:	ff 75 08             	pushl  0x8(%ebp)
81000e04:	e8 3e ff ff ff       	call   81000d47 <std>
81000e09:	83 c4 10             	add    $0x10,%esp
81000e0c:	90                   	nop
81000e0d:	c9                   	leave  
81000e0e:	c3                   	ret    

81000e0f <stdout_init>:
81000e0f:	55                   	push   %ebp
81000e10:	89 e5                	mov    %esp,%ebp
81000e12:	83 ec 08             	sub    $0x8,%esp
81000e15:	83 ec 04             	sub    $0x4,%esp
81000e18:	6a 01                	push   $0x1
81000e1a:	6a 09                	push   $0x9
81000e1c:	ff 75 08             	pushl  0x8(%ebp)
81000e1f:	e8 23 ff ff ff       	call   81000d47 <std>
81000e24:	83 c4 10             	add    $0x10,%esp
81000e27:	90                   	nop
81000e28:	c9                   	leave  
81000e29:	c3                   	ret    

81000e2a <stderr_init>:
81000e2a:	55                   	push   %ebp
81000e2b:	89 e5                	mov    %esp,%ebp
81000e2d:	83 ec 08             	sub    $0x8,%esp
81000e30:	83 ec 04             	sub    $0x4,%esp
81000e33:	6a 02                	push   $0x2
81000e35:	6a 12                	push   $0x12
81000e37:	ff 75 08             	pushl  0x8(%ebp)
81000e3a:	e8 08 ff ff ff       	call   81000d47 <std>
81000e3f:	83 c4 10             	add    $0x10,%esp
81000e42:	90                   	nop
81000e43:	c9                   	leave  
81000e44:	c3                   	ret    

81000e45 <__sfmoreglue>:
81000e45:	55                   	push   %ebp
81000e46:	89 e5                	mov    %esp,%ebp
81000e48:	53                   	push   %ebx
81000e49:	83 ec 14             	sub    $0x14,%esp
81000e4c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000e4f:	8d 43 ff             	lea    -0x1(%ebx),%eax
81000e52:	6b c0 68             	imul   $0x68,%eax,%eax
81000e55:	83 c0 74             	add    $0x74,%eax
81000e58:	83 ec 08             	sub    $0x8,%esp
81000e5b:	50                   	push   %eax
81000e5c:	ff 75 08             	pushl  0x8(%ebp)
81000e5f:	e8 a7 1a 00 00       	call   8100290b <_malloc_r>
81000e64:	83 c4 10             	add    $0x10,%esp
81000e67:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000e6a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000e6e:	75 07                	jne    81000e77 <__sfmoreglue+0x32>
81000e70:	b8 00 00 00 00       	mov    $0x0,%eax
81000e75:	eb 38                	jmp    81000eaf <__sfmoreglue+0x6a>
81000e77:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e7a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000e80:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e83:	89 58 04             	mov    %ebx,0x4(%eax)
81000e86:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e89:	8d 50 0c             	lea    0xc(%eax),%edx
81000e8c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e8f:	89 50 08             	mov    %edx,0x8(%eax)
81000e92:	89 d8                	mov    %ebx,%eax
81000e94:	6b c0 68             	imul   $0x68,%eax,%eax
81000e97:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000e9a:	83 c2 0c             	add    $0xc,%edx
81000e9d:	83 ec 04             	sub    $0x4,%esp
81000ea0:	50                   	push   %eax
81000ea1:	6a 00                	push   $0x0
81000ea3:	52                   	push   %edx
81000ea4:	e8 b7 23 00 00       	call   81003260 <memset>
81000ea9:	83 c4 10             	add    $0x10,%esp
81000eac:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000eaf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000eb2:	c9                   	leave  
81000eb3:	c3                   	ret    

81000eb4 <__sfp>:
81000eb4:	55                   	push   %ebp
81000eb5:	89 e5                	mov    %esp,%ebp
81000eb7:	83 ec 18             	sub    $0x18,%esp
81000eba:	e8 16 02 00 00       	call   810010d5 <__sfp_lock_acquire>
81000ebf:	a1 70 6b 00 81       	mov    0x81006b70,%eax
81000ec4:	8b 40 38             	mov    0x38(%eax),%eax
81000ec7:	85 c0                	test   %eax,%eax
81000ec9:	75 11                	jne    81000edc <__sfp+0x28>
81000ecb:	a1 70 6b 00 81       	mov    0x81006b70,%eax
81000ed0:	83 ec 0c             	sub    $0xc,%esp
81000ed3:	50                   	push   %eax
81000ed4:	e8 63 01 00 00       	call   8100103c <__sinit>
81000ed9:	83 c4 10             	add    $0x10,%esp
81000edc:	a1 70 6b 00 81       	mov    0x81006b70,%eax
81000ee1:	05 e0 02 00 00       	add    $0x2e0,%eax
81000ee6:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000ee9:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000eec:	8b 40 08             	mov    0x8(%eax),%eax
81000eef:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000ef2:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000ef5:	8b 40 04             	mov    0x4(%eax),%eax
81000ef8:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000efb:	eb 10                	jmp    81000f0d <__sfp+0x59>
81000efd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f00:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000f04:	66 85 c0             	test   %ax,%ax
81000f07:	74 58                	je     81000f61 <__sfp+0xad>
81000f09:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
81000f0d:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81000f11:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000f15:	79 e6                	jns    81000efd <__sfp+0x49>
81000f17:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000f1a:	8b 00                	mov    (%eax),%eax
81000f1c:	85 c0                	test   %eax,%eax
81000f1e:	75 1e                	jne    81000f3e <__sfp+0x8a>
81000f20:	83 ec 08             	sub    $0x8,%esp
81000f23:	6a 04                	push   $0x4
81000f25:	ff 75 08             	pushl  0x8(%ebp)
81000f28:	e8 18 ff ff ff       	call   81000e45 <__sfmoreglue>
81000f2d:	83 c4 10             	add    $0x10,%esp
81000f30:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000f33:	89 02                	mov    %eax,(%edx)
81000f35:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000f38:	8b 00                	mov    (%eax),%eax
81000f3a:	85 c0                	test   %eax,%eax
81000f3c:	74 0a                	je     81000f48 <__sfp+0x94>
81000f3e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000f41:	8b 00                	mov    (%eax),%eax
81000f43:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000f46:	eb a1                	jmp    81000ee9 <__sfp+0x35>
81000f48:	90                   	nop
81000f49:	e8 8d 01 00 00       	call   810010db <__sfp_lock_release>
81000f4e:	8b 45 08             	mov    0x8(%ebp),%eax
81000f51:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000f57:	b8 00 00 00 00       	mov    $0x0,%eax
81000f5c:	e9 9e 00 00 00       	jmp    81000fff <__sfp+0x14b>
81000f61:	90                   	nop
81000f62:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f65:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
81000f6b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f6e:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81000f74:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f77:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000f7e:	e8 58 01 00 00       	call   810010db <__sfp_lock_release>
81000f83:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f86:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000f8c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f8f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000f96:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f99:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000fa0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fa3:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000faa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fad:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000fb4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fb7:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000fbe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fc1:	83 c0 5c             	add    $0x5c,%eax
81000fc4:	83 ec 04             	sub    $0x4,%esp
81000fc7:	6a 08                	push   $0x8
81000fc9:	6a 00                	push   $0x0
81000fcb:	50                   	push   %eax
81000fcc:	e8 8f 22 00 00       	call   81003260 <memset>
81000fd1:	83 c4 10             	add    $0x10,%esp
81000fd4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fd7:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000fde:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fe1:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
81000fe8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000feb:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000ff2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ff5:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
81000ffc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fff:	c9                   	leave  
81001000:	c3                   	ret    

81001001 <_cleanup_r>:
81001001:	55                   	push   %ebp
81001002:	89 e5                	mov    %esp,%ebp
81001004:	83 ec 18             	sub    $0x18,%esp
81001007:	c7 45 f4 e2 4c 00 81 	movl   $0x81004ce2,-0xc(%ebp)
8100100e:	83 ec 08             	sub    $0x8,%esp
81001011:	ff 75 f4             	pushl  -0xc(%ebp)
81001014:	ff 75 08             	pushl  0x8(%ebp)
81001017:	e8 26 07 00 00       	call   81001742 <_fwalk_reent>
8100101c:	83 c4 10             	add    $0x10,%esp
8100101f:	90                   	nop
81001020:	c9                   	leave  
81001021:	c3                   	ret    

81001022 <_cleanup>:
81001022:	55                   	push   %ebp
81001023:	89 e5                	mov    %esp,%ebp
81001025:	83 ec 08             	sub    $0x8,%esp
81001028:	a1 70 6b 00 81       	mov    0x81006b70,%eax
8100102d:	83 ec 0c             	sub    $0xc,%esp
81001030:	50                   	push   %eax
81001031:	e8 cb ff ff ff       	call   81001001 <_cleanup_r>
81001036:	83 c4 10             	add    $0x10,%esp
81001039:	90                   	nop
8100103a:	c9                   	leave  
8100103b:	c3                   	ret    

8100103c <__sinit>:
8100103c:	55                   	push   %ebp
8100103d:	89 e5                	mov    %esp,%ebp
8100103f:	83 ec 08             	sub    $0x8,%esp
81001042:	e8 9a 00 00 00       	call   810010e1 <__sinit_lock_acquire>
81001047:	8b 45 08             	mov    0x8(%ebp),%eax
8100104a:	8b 40 38             	mov    0x38(%eax),%eax
8100104d:	85 c0                	test   %eax,%eax
8100104f:	74 07                	je     81001058 <__sinit+0x1c>
81001051:	e8 91 00 00 00       	call   810010e7 <__sinit_lock_release>
81001056:	eb 7b                	jmp    810010d3 <__sinit+0x97>
81001058:	8b 45 08             	mov    0x8(%ebp),%eax
8100105b:	c7 40 3c 01 10 00 81 	movl   $0x81001001,0x3c(%eax)
81001062:	8b 45 08             	mov    0x8(%ebp),%eax
81001065:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
8100106c:	00 00 00 
8100106f:	8b 45 08             	mov    0x8(%ebp),%eax
81001072:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
81001079:	00 00 00 
8100107c:	8b 45 08             	mov    0x8(%ebp),%eax
8100107f:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
81001085:	8b 45 08             	mov    0x8(%ebp),%eax
81001088:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
8100108e:	8b 45 08             	mov    0x8(%ebp),%eax
81001091:	8b 40 04             	mov    0x4(%eax),%eax
81001094:	83 ec 0c             	sub    $0xc,%esp
81001097:	50                   	push   %eax
81001098:	e8 57 fd ff ff       	call   81000df4 <stdin_init>
8100109d:	83 c4 10             	add    $0x10,%esp
810010a0:	8b 45 08             	mov    0x8(%ebp),%eax
810010a3:	8b 40 08             	mov    0x8(%eax),%eax
810010a6:	83 ec 0c             	sub    $0xc,%esp
810010a9:	50                   	push   %eax
810010aa:	e8 60 fd ff ff       	call   81000e0f <stdout_init>
810010af:	83 c4 10             	add    $0x10,%esp
810010b2:	8b 45 08             	mov    0x8(%ebp),%eax
810010b5:	8b 40 0c             	mov    0xc(%eax),%eax
810010b8:	83 ec 0c             	sub    $0xc,%esp
810010bb:	50                   	push   %eax
810010bc:	e8 69 fd ff ff       	call   81000e2a <stderr_init>
810010c1:	83 c4 10             	add    $0x10,%esp
810010c4:	8b 45 08             	mov    0x8(%ebp),%eax
810010c7:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
810010ce:	e8 14 00 00 00       	call   810010e7 <__sinit_lock_release>
810010d3:	c9                   	leave  
810010d4:	c3                   	ret    

810010d5 <__sfp_lock_acquire>:
810010d5:	55                   	push   %ebp
810010d6:	89 e5                	mov    %esp,%ebp
810010d8:	90                   	nop
810010d9:	5d                   	pop    %ebp
810010da:	c3                   	ret    

810010db <__sfp_lock_release>:
810010db:	55                   	push   %ebp
810010dc:	89 e5                	mov    %esp,%ebp
810010de:	90                   	nop
810010df:	5d                   	pop    %ebp
810010e0:	c3                   	ret    

810010e1 <__sinit_lock_acquire>:
810010e1:	55                   	push   %ebp
810010e2:	89 e5                	mov    %esp,%ebp
810010e4:	90                   	nop
810010e5:	5d                   	pop    %ebp
810010e6:	c3                   	ret    

810010e7 <__sinit_lock_release>:
810010e7:	55                   	push   %ebp
810010e8:	89 e5                	mov    %esp,%ebp
810010ea:	90                   	nop
810010eb:	5d                   	pop    %ebp
810010ec:	c3                   	ret    

810010ed <__fp_lock>:
810010ed:	55                   	push   %ebp
810010ee:	89 e5                	mov    %esp,%ebp
810010f0:	b8 00 00 00 00       	mov    $0x0,%eax
810010f5:	5d                   	pop    %ebp
810010f6:	c3                   	ret    

810010f7 <__fp_unlock>:
810010f7:	55                   	push   %ebp
810010f8:	89 e5                	mov    %esp,%ebp
810010fa:	b8 00 00 00 00       	mov    $0x0,%eax
810010ff:	5d                   	pop    %ebp
81001100:	c3                   	ret    

81001101 <__fp_lock_all>:
81001101:	55                   	push   %ebp
81001102:	89 e5                	mov    %esp,%ebp
81001104:	83 ec 08             	sub    $0x8,%esp
81001107:	e8 c9 ff ff ff       	call   810010d5 <__sfp_lock_acquire>
8100110c:	a1 24 73 00 81       	mov    0x81007324,%eax
81001111:	83 ec 08             	sub    $0x8,%esp
81001114:	68 ed 10 00 81       	push   $0x810010ed
81001119:	50                   	push   %eax
8100111a:	e8 bb 05 00 00       	call   810016da <_fwalk>
8100111f:	83 c4 10             	add    $0x10,%esp
81001122:	90                   	nop
81001123:	c9                   	leave  
81001124:	c3                   	ret    

81001125 <__fp_unlock_all>:
81001125:	55                   	push   %ebp
81001126:	89 e5                	mov    %esp,%ebp
81001128:	83 ec 08             	sub    $0x8,%esp
8100112b:	a1 24 73 00 81       	mov    0x81007324,%eax
81001130:	83 ec 08             	sub    $0x8,%esp
81001133:	68 f7 10 00 81       	push   $0x810010f7
81001138:	50                   	push   %eax
81001139:	e8 9c 05 00 00       	call   810016da <_fwalk>
8100113e:	83 c4 10             	add    $0x10,%esp
81001141:	e8 95 ff ff ff       	call   810010db <__sfp_lock_release>
81001146:	90                   	nop
81001147:	c9                   	leave  
81001148:	c3                   	ret    

81001149 <_fiprintf_r>:
81001149:	55                   	push   %ebp
8100114a:	89 e5                	mov    %esp,%ebp
8100114c:	83 ec 18             	sub    $0x18,%esp
8100114f:	8d 45 14             	lea    0x14(%ebp),%eax
81001152:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001155:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001158:	50                   	push   %eax
81001159:	ff 75 10             	pushl  0x10(%ebp)
8100115c:	ff 75 0c             	pushl  0xc(%ebp)
8100115f:	ff 75 08             	pushl  0x8(%ebp)
81001162:	e8 9c 23 00 00       	call   81003503 <_vfiprintf_r>
81001167:	83 c4 10             	add    $0x10,%esp
8100116a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100116d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001170:	c9                   	leave  
81001171:	c3                   	ret    

81001172 <fiprintf>:
81001172:	55                   	push   %ebp
81001173:	89 e5                	mov    %esp,%ebp
81001175:	83 ec 18             	sub    $0x18,%esp
81001178:	8d 45 10             	lea    0x10(%ebp),%eax
8100117b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100117e:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001181:	a1 24 73 00 81       	mov    0x81007324,%eax
81001186:	52                   	push   %edx
81001187:	ff 75 0c             	pushl  0xc(%ebp)
8100118a:	ff 75 08             	pushl  0x8(%ebp)
8100118d:	50                   	push   %eax
8100118e:	e8 70 23 00 00       	call   81003503 <_vfiprintf_r>
81001193:	83 c4 10             	add    $0x10,%esp
81001196:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001199:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100119c:	c9                   	leave  
8100119d:	c3                   	ret    

8100119e <_free_r>:
8100119e:	55                   	push   %ebp
8100119f:	89 e5                	mov    %esp,%ebp
810011a1:	53                   	push   %ebx
810011a2:	83 ec 34             	sub    $0x34,%esp
810011a5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810011a9:	0f 84 c4 03 00 00    	je     81001573 <_free_r+0x3d5>
810011af:	83 ec 0c             	sub    $0xc,%esp
810011b2:	ff 75 08             	pushl  0x8(%ebp)
810011b5:	e8 2e 21 00 00       	call   810032e8 <__malloc_lock>
810011ba:	83 c4 10             	add    $0x10,%esp
810011bd:	8b 45 0c             	mov    0xc(%ebp),%eax
810011c0:	83 e8 08             	sub    $0x8,%eax
810011c3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810011c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011c9:	8b 40 04             	mov    0x4(%eax),%eax
810011cc:	89 45 e0             	mov    %eax,-0x20(%ebp)
810011cf:	8b 45 e0             	mov    -0x20(%ebp),%eax
810011d2:	83 e0 fe             	and    $0xfffffffe,%eax
810011d5:	89 45 f0             	mov    %eax,-0x10(%ebp)
810011d8:	8b 55 f4             	mov    -0xc(%ebp),%edx
810011db:	8b 45 f0             	mov    -0x10(%ebp),%eax
810011de:	01 d0                	add    %edx,%eax
810011e0:	89 45 dc             	mov    %eax,-0x24(%ebp)
810011e3:	8b 45 dc             	mov    -0x24(%ebp),%eax
810011e6:	8b 40 04             	mov    0x4(%eax),%eax
810011e9:	83 e0 fc             	and    $0xfffffffc,%eax
810011ec:	89 45 d8             	mov    %eax,-0x28(%ebp)
810011ef:	b8 40 73 00 81       	mov    $0x81007340,%eax
810011f4:	8b 40 08             	mov    0x8(%eax),%eax
810011f7:	39 45 dc             	cmp    %eax,-0x24(%ebp)
810011fa:	0f 85 94 00 00 00    	jne    81001294 <_free_r+0xf6>
81001200:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001203:	01 45 f0             	add    %eax,-0x10(%ebp)
81001206:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001209:	83 e0 01             	and    $0x1,%eax
8100120c:	85 c0                	test   %eax,%eax
8100120e:	75 3a                	jne    8100124a <_free_r+0xac>
81001210:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001213:	8b 00                	mov    (%eax),%eax
81001215:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001218:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100121b:	f7 d8                	neg    %eax
8100121d:	01 45 f4             	add    %eax,-0xc(%ebp)
81001220:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001223:	01 45 f0             	add    %eax,-0x10(%ebp)
81001226:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001229:	8b 40 0c             	mov    0xc(%eax),%eax
8100122c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100122f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001232:	8b 40 08             	mov    0x8(%eax),%eax
81001235:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001238:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100123b:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100123e:	89 50 0c             	mov    %edx,0xc(%eax)
81001241:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001244:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001247:	89 50 08             	mov    %edx,0x8(%eax)
8100124a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100124d:	83 c8 01             	or     $0x1,%eax
81001250:	89 c2                	mov    %eax,%edx
81001252:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001255:	89 50 04             	mov    %edx,0x4(%eax)
81001258:	ba 40 73 00 81       	mov    $0x81007340,%edx
8100125d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001260:	89 42 08             	mov    %eax,0x8(%edx)
81001263:	a1 48 77 00 81       	mov    0x81007748,%eax
81001268:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8100126b:	72 14                	jb     81001281 <_free_r+0xe3>
8100126d:	a1 20 7d 00 81       	mov    0x81007d20,%eax
81001272:	83 ec 08             	sub    $0x8,%esp
81001275:	50                   	push   %eax
81001276:	ff 75 08             	pushl  0x8(%ebp)
81001279:	e8 fb 02 00 00       	call   81001579 <_malloc_trim_r>
8100127e:	83 c4 10             	add    $0x10,%esp
81001281:	83 ec 0c             	sub    $0xc,%esp
81001284:	ff 75 08             	pushl  0x8(%ebp)
81001287:	e8 62 20 00 00       	call   810032ee <__malloc_unlock>
8100128c:	83 c4 10             	add    $0x10,%esp
8100128f:	e9 e0 02 00 00       	jmp    81001574 <_free_r+0x3d6>
81001294:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001297:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100129a:	89 50 04             	mov    %edx,0x4(%eax)
8100129d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810012a4:	8b 45 e0             	mov    -0x20(%ebp),%eax
810012a7:	83 e0 01             	and    $0x1,%eax
810012aa:	85 c0                	test   %eax,%eax
810012ac:	75 52                	jne    81001300 <_free_r+0x162>
810012ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012b1:	8b 00                	mov    (%eax),%eax
810012b3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810012b6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810012b9:	f7 d8                	neg    %eax
810012bb:	01 45 f4             	add    %eax,-0xc(%ebp)
810012be:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810012c1:	01 45 f0             	add    %eax,-0x10(%ebp)
810012c4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012c7:	8b 40 08             	mov    0x8(%eax),%eax
810012ca:	ba 48 73 00 81       	mov    $0x81007348,%edx
810012cf:	39 d0                	cmp    %edx,%eax
810012d1:	75 09                	jne    810012dc <_free_r+0x13e>
810012d3:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810012da:	eb 24                	jmp    81001300 <_free_r+0x162>
810012dc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012df:	8b 40 0c             	mov    0xc(%eax),%eax
810012e2:	89 45 ec             	mov    %eax,-0x14(%ebp)
810012e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012e8:	8b 40 08             	mov    0x8(%eax),%eax
810012eb:	89 45 e8             	mov    %eax,-0x18(%ebp)
810012ee:	8b 45 e8             	mov    -0x18(%ebp),%eax
810012f1:	8b 55 ec             	mov    -0x14(%ebp),%edx
810012f4:	89 50 0c             	mov    %edx,0xc(%eax)
810012f7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810012fa:	8b 55 e8             	mov    -0x18(%ebp),%edx
810012fd:	89 50 08             	mov    %edx,0x8(%eax)
81001300:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001303:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001306:	01 d0                	add    %edx,%eax
81001308:	8b 40 04             	mov    0x4(%eax),%eax
8100130b:	83 e0 01             	and    $0x1,%eax
8100130e:	85 c0                	test   %eax,%eax
81001310:	75 75                	jne    81001387 <_free_r+0x1e9>
81001312:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001315:	01 45 f0             	add    %eax,-0x10(%ebp)
81001318:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100131c:	75 45                	jne    81001363 <_free_r+0x1c5>
8100131e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001321:	8b 40 08             	mov    0x8(%eax),%eax
81001324:	ba 48 73 00 81       	mov    $0x81007348,%edx
81001329:	39 d0                	cmp    %edx,%eax
8100132b:	75 36                	jne    81001363 <_free_r+0x1c5>
8100132d:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001334:	b8 48 73 00 81       	mov    $0x81007348,%eax
81001339:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100133c:	89 50 0c             	mov    %edx,0xc(%eax)
8100133f:	ba 48 73 00 81       	mov    $0x81007348,%edx
81001344:	8b 40 0c             	mov    0xc(%eax),%eax
81001347:	89 42 08             	mov    %eax,0x8(%edx)
8100134a:	ba 48 73 00 81       	mov    $0x81007348,%edx
8100134f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001352:	89 50 0c             	mov    %edx,0xc(%eax)
81001355:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001358:	8b 50 0c             	mov    0xc(%eax),%edx
8100135b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100135e:	89 50 08             	mov    %edx,0x8(%eax)
81001361:	eb 24                	jmp    81001387 <_free_r+0x1e9>
81001363:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001366:	8b 40 0c             	mov    0xc(%eax),%eax
81001369:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100136c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100136f:	8b 40 08             	mov    0x8(%eax),%eax
81001372:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001375:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001378:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100137b:	89 50 0c             	mov    %edx,0xc(%eax)
8100137e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001381:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001384:	89 50 08             	mov    %edx,0x8(%eax)
81001387:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100138a:	83 c8 01             	or     $0x1,%eax
8100138d:	89 c2                	mov    %eax,%edx
8100138f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001392:	89 50 04             	mov    %edx,0x4(%eax)
81001395:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001398:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100139b:	01 c2                	add    %eax,%edx
8100139d:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013a0:	89 02                	mov    %eax,(%edx)
810013a2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810013a6:	0f 85 b7 01 00 00    	jne    81001563 <_free_r+0x3c5>
810013ac:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
810013b3:	77 7f                	ja     81001434 <_free_r+0x296>
810013b5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013b8:	c1 e8 03             	shr    $0x3,%eax
810013bb:	89 45 d0             	mov    %eax,-0x30(%ebp)
810013be:	b8 40 73 00 81       	mov    $0x81007340,%eax
810013c3:	8b 58 04             	mov    0x4(%eax),%ebx
810013c6:	8b 45 d0             	mov    -0x30(%ebp),%eax
810013c9:	8d 50 03             	lea    0x3(%eax),%edx
810013cc:	85 c0                	test   %eax,%eax
810013ce:	0f 48 c2             	cmovs  %edx,%eax
810013d1:	c1 f8 02             	sar    $0x2,%eax
810013d4:	ba 01 00 00 00       	mov    $0x1,%edx
810013d9:	89 c1                	mov    %eax,%ecx
810013db:	d3 e2                	shl    %cl,%edx
810013dd:	89 d0                	mov    %edx,%eax
810013df:	ba 40 73 00 81       	mov    $0x81007340,%edx
810013e4:	09 d8                	or     %ebx,%eax
810013e6:	89 42 04             	mov    %eax,0x4(%edx)
810013e9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810013ec:	83 c0 01             	add    $0x1,%eax
810013ef:	01 c0                	add    %eax,%eax
810013f1:	c1 e0 02             	shl    $0x2,%eax
810013f4:	05 40 73 00 81       	add    $0x81007340,%eax
810013f9:	83 e8 08             	sub    $0x8,%eax
810013fc:	89 45 ec             	mov    %eax,-0x14(%ebp)
810013ff:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001402:	8b 40 08             	mov    0x8(%eax),%eax
81001405:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001408:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100140b:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100140e:	89 50 0c             	mov    %edx,0xc(%eax)
81001411:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001414:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001417:	89 50 08             	mov    %edx,0x8(%eax)
8100141a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100141d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001420:	89 50 08             	mov    %edx,0x8(%eax)
81001423:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001426:	8b 50 08             	mov    0x8(%eax),%edx
81001429:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100142c:	89 50 0c             	mov    %edx,0xc(%eax)
8100142f:	e9 2f 01 00 00       	jmp    81001563 <_free_r+0x3c5>
81001434:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001437:	c1 e8 09             	shr    $0x9,%eax
8100143a:	85 c0                	test   %eax,%eax
8100143c:	75 08                	jne    81001446 <_free_r+0x2a8>
8100143e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001441:	c1 e8 03             	shr    $0x3,%eax
81001444:	eb 77                	jmp    810014bd <_free_r+0x31f>
81001446:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001449:	c1 e8 09             	shr    $0x9,%eax
8100144c:	83 f8 04             	cmp    $0x4,%eax
8100144f:	77 0b                	ja     8100145c <_free_r+0x2be>
81001451:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001454:	c1 e8 06             	shr    $0x6,%eax
81001457:	83 c0 38             	add    $0x38,%eax
8100145a:	eb 61                	jmp    810014bd <_free_r+0x31f>
8100145c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100145f:	c1 e8 09             	shr    $0x9,%eax
81001462:	83 f8 14             	cmp    $0x14,%eax
81001465:	77 0b                	ja     81001472 <_free_r+0x2d4>
81001467:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100146a:	c1 e8 09             	shr    $0x9,%eax
8100146d:	83 c0 5b             	add    $0x5b,%eax
81001470:	eb 4b                	jmp    810014bd <_free_r+0x31f>
81001472:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001475:	c1 e8 09             	shr    $0x9,%eax
81001478:	83 f8 54             	cmp    $0x54,%eax
8100147b:	77 0b                	ja     81001488 <_free_r+0x2ea>
8100147d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001480:	c1 e8 0c             	shr    $0xc,%eax
81001483:	83 c0 6e             	add    $0x6e,%eax
81001486:	eb 35                	jmp    810014bd <_free_r+0x31f>
81001488:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100148b:	c1 e8 09             	shr    $0x9,%eax
8100148e:	3d 54 01 00 00       	cmp    $0x154,%eax
81001493:	77 0b                	ja     810014a0 <_free_r+0x302>
81001495:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001498:	c1 e8 0f             	shr    $0xf,%eax
8100149b:	83 c0 77             	add    $0x77,%eax
8100149e:	eb 1d                	jmp    810014bd <_free_r+0x31f>
810014a0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014a3:	c1 e8 09             	shr    $0x9,%eax
810014a6:	3d 54 05 00 00       	cmp    $0x554,%eax
810014ab:	77 0b                	ja     810014b8 <_free_r+0x31a>
810014ad:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014b0:	c1 e8 12             	shr    $0x12,%eax
810014b3:	83 c0 7c             	add    $0x7c,%eax
810014b6:	eb 05                	jmp    810014bd <_free_r+0x31f>
810014b8:	b8 7e 00 00 00       	mov    $0x7e,%eax
810014bd:	89 45 d0             	mov    %eax,-0x30(%ebp)
810014c0:	8b 45 d0             	mov    -0x30(%ebp),%eax
810014c3:	83 c0 01             	add    $0x1,%eax
810014c6:	01 c0                	add    %eax,%eax
810014c8:	c1 e0 02             	shl    $0x2,%eax
810014cb:	05 40 73 00 81       	add    $0x81007340,%eax
810014d0:	83 e8 08             	sub    $0x8,%eax
810014d3:	89 45 ec             	mov    %eax,-0x14(%ebp)
810014d6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810014d9:	8b 40 08             	mov    0x8(%eax),%eax
810014dc:	89 45 e8             	mov    %eax,-0x18(%ebp)
810014df:	8b 45 e8             	mov    -0x18(%ebp),%eax
810014e2:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810014e5:	75 36                	jne    8100151d <_free_r+0x37f>
810014e7:	b8 40 73 00 81       	mov    $0x81007340,%eax
810014ec:	8b 58 04             	mov    0x4(%eax),%ebx
810014ef:	8b 45 d0             	mov    -0x30(%ebp),%eax
810014f2:	8d 50 03             	lea    0x3(%eax),%edx
810014f5:	85 c0                	test   %eax,%eax
810014f7:	0f 48 c2             	cmovs  %edx,%eax
810014fa:	c1 f8 02             	sar    $0x2,%eax
810014fd:	ba 01 00 00 00       	mov    $0x1,%edx
81001502:	89 c1                	mov    %eax,%ecx
81001504:	d3 e2                	shl    %cl,%edx
81001506:	89 d0                	mov    %edx,%eax
81001508:	ba 40 73 00 81       	mov    $0x81007340,%edx
8100150d:	09 d8                	or     %ebx,%eax
8100150f:	89 42 04             	mov    %eax,0x4(%edx)
81001512:	eb 28                	jmp    8100153c <_free_r+0x39e>
81001514:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001517:	8b 40 08             	mov    0x8(%eax),%eax
8100151a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100151d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001520:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001523:	74 0e                	je     81001533 <_free_r+0x395>
81001525:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001528:	8b 40 04             	mov    0x4(%eax),%eax
8100152b:	83 e0 fc             	and    $0xfffffffc,%eax
8100152e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001531:	72 e1                	jb     81001514 <_free_r+0x376>
81001533:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001536:	8b 40 0c             	mov    0xc(%eax),%eax
81001539:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100153c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100153f:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001542:	89 50 0c             	mov    %edx,0xc(%eax)
81001545:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001548:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100154b:	89 50 08             	mov    %edx,0x8(%eax)
8100154e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001551:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001554:	89 50 08             	mov    %edx,0x8(%eax)
81001557:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100155a:	8b 50 08             	mov    0x8(%eax),%edx
8100155d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001560:	89 50 0c             	mov    %edx,0xc(%eax)
81001563:	83 ec 0c             	sub    $0xc,%esp
81001566:	ff 75 08             	pushl  0x8(%ebp)
81001569:	e8 80 1d 00 00       	call   810032ee <__malloc_unlock>
8100156e:	83 c4 10             	add    $0x10,%esp
81001571:	eb 01                	jmp    81001574 <_free_r+0x3d6>
81001573:	90                   	nop
81001574:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001577:	c9                   	leave  
81001578:	c3                   	ret    

81001579 <_malloc_trim_r>:
81001579:	55                   	push   %ebp
8100157a:	89 e5                	mov    %esp,%ebp
8100157c:	83 ec 28             	sub    $0x28,%esp
8100157f:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81001586:	83 ec 0c             	sub    $0xc,%esp
81001589:	ff 75 08             	pushl  0x8(%ebp)
8100158c:	e8 57 1d 00 00       	call   810032e8 <__malloc_lock>
81001591:	83 c4 10             	add    $0x10,%esp
81001594:	b8 40 73 00 81       	mov    $0x81007340,%eax
81001599:	8b 40 08             	mov    0x8(%eax),%eax
8100159c:	8b 40 04             	mov    0x4(%eax),%eax
8100159f:	83 e0 fc             	and    $0xfffffffc,%eax
810015a2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810015a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015a8:	2b 45 0c             	sub    0xc(%ebp),%eax
810015ab:	89 c2                	mov    %eax,%edx
810015ad:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015b0:	01 d0                	add    %edx,%eax
810015b2:	83 e8 11             	sub    $0x11,%eax
810015b5:	ba 00 00 00 00       	mov    $0x0,%edx
810015ba:	f7 75 f4             	divl   -0xc(%ebp)
810015bd:	83 e8 01             	sub    $0x1,%eax
810015c0:	0f af 45 f4          	imul   -0xc(%ebp),%eax
810015c4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810015c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015ca:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810015cd:	7d 18                	jge    810015e7 <_malloc_trim_r+0x6e>
810015cf:	83 ec 0c             	sub    $0xc,%esp
810015d2:	ff 75 08             	pushl  0x8(%ebp)
810015d5:	e8 14 1d 00 00       	call   810032ee <__malloc_unlock>
810015da:	83 c4 10             	add    $0x10,%esp
810015dd:	b8 00 00 00 00       	mov    $0x0,%eax
810015e2:	e9 f1 00 00 00       	jmp    810016d8 <_malloc_trim_r+0x15f>
810015e7:	83 ec 08             	sub    $0x8,%esp
810015ea:	6a 00                	push   $0x0
810015ec:	ff 75 08             	pushl  0x8(%ebp)
810015ef:	e8 d1 2b 00 00       	call   810041c5 <_sbrk_r>
810015f4:	83 c4 10             	add    $0x10,%esp
810015f7:	89 45 e8             	mov    %eax,-0x18(%ebp)
810015fa:	b8 40 73 00 81       	mov    $0x81007340,%eax
810015ff:	8b 50 08             	mov    0x8(%eax),%edx
81001602:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001605:	01 d0                	add    %edx,%eax
81001607:	39 45 e8             	cmp    %eax,-0x18(%ebp)
8100160a:	74 18                	je     81001624 <_malloc_trim_r+0xab>
8100160c:	83 ec 0c             	sub    $0xc,%esp
8100160f:	ff 75 08             	pushl  0x8(%ebp)
81001612:	e8 d7 1c 00 00       	call   810032ee <__malloc_unlock>
81001617:	83 c4 10             	add    $0x10,%esp
8100161a:	b8 00 00 00 00       	mov    $0x0,%eax
8100161f:	e9 b4 00 00 00       	jmp    810016d8 <_malloc_trim_r+0x15f>
81001624:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001627:	f7 d8                	neg    %eax
81001629:	83 ec 08             	sub    $0x8,%esp
8100162c:	50                   	push   %eax
8100162d:	ff 75 08             	pushl  0x8(%ebp)
81001630:	e8 90 2b 00 00       	call   810041c5 <_sbrk_r>
81001635:	83 c4 10             	add    $0x10,%esp
81001638:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100163b:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100163f:	75 61                	jne    810016a2 <_malloc_trim_r+0x129>
81001641:	83 ec 08             	sub    $0x8,%esp
81001644:	6a 00                	push   $0x0
81001646:	ff 75 08             	pushl  0x8(%ebp)
81001649:	e8 77 2b 00 00       	call   810041c5 <_sbrk_r>
8100164e:	83 c4 10             	add    $0x10,%esp
81001651:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001654:	b8 40 73 00 81       	mov    $0x81007340,%eax
81001659:	8b 50 08             	mov    0x8(%eax),%edx
8100165c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100165f:	29 d0                	sub    %edx,%eax
81001661:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001664:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81001668:	7e 23                	jle    8100168d <_malloc_trim_r+0x114>
8100166a:	8b 15 4c 77 00 81    	mov    0x8100774c,%edx
81001670:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001673:	29 d0                	sub    %edx,%eax
81001675:	a3 40 7d 00 81       	mov    %eax,0x81007d40
8100167a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100167d:	83 c8 01             	or     $0x1,%eax
81001680:	89 c2                	mov    %eax,%edx
81001682:	b8 40 73 00 81       	mov    $0x81007340,%eax
81001687:	8b 40 08             	mov    0x8(%eax),%eax
8100168a:	89 50 04             	mov    %edx,0x4(%eax)
8100168d:	83 ec 0c             	sub    $0xc,%esp
81001690:	ff 75 08             	pushl  0x8(%ebp)
81001693:	e8 56 1c 00 00       	call   810032ee <__malloc_unlock>
81001698:	83 c4 10             	add    $0x10,%esp
8100169b:	b8 00 00 00 00       	mov    $0x0,%eax
810016a0:	eb 36                	jmp    810016d8 <_malloc_trim_r+0x15f>
810016a2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016a5:	2b 45 ec             	sub    -0x14(%ebp),%eax
810016a8:	83 c8 01             	or     $0x1,%eax
810016ab:	89 c2                	mov    %eax,%edx
810016ad:	b8 40 73 00 81       	mov    $0x81007340,%eax
810016b2:	8b 40 08             	mov    0x8(%eax),%eax
810016b5:	89 50 04             	mov    %edx,0x4(%eax)
810016b8:	a1 40 7d 00 81       	mov    0x81007d40,%eax
810016bd:	2b 45 ec             	sub    -0x14(%ebp),%eax
810016c0:	a3 40 7d 00 81       	mov    %eax,0x81007d40
810016c5:	83 ec 0c             	sub    $0xc,%esp
810016c8:	ff 75 08             	pushl  0x8(%ebp)
810016cb:	e8 1e 1c 00 00       	call   810032ee <__malloc_unlock>
810016d0:	83 c4 10             	add    $0x10,%esp
810016d3:	b8 01 00 00 00       	mov    $0x1,%eax
810016d8:	c9                   	leave  
810016d9:	c3                   	ret    

810016da <_fwalk>:
810016da:	55                   	push   %ebp
810016db:	89 e5                	mov    %esp,%ebp
810016dd:	57                   	push   %edi
810016de:	56                   	push   %esi
810016df:	53                   	push   %ebx
810016e0:	83 ec 1c             	sub    $0x1c,%esp
810016e3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810016ea:	8b 45 08             	mov    0x8(%ebp),%eax
810016ed:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
810016f3:	eb 3e                	jmp    81001733 <_fwalk+0x59>
810016f5:	8b 5e 08             	mov    0x8(%esi),%ebx
810016f8:	8b 7e 04             	mov    0x4(%esi),%edi
810016fb:	eb 2d                	jmp    8100172a <_fwalk+0x50>
810016fd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001701:	66 85 c0             	test   %ax,%ax
81001704:	74 21                	je     81001727 <_fwalk+0x4d>
81001706:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100170a:	66 83 f8 01          	cmp    $0x1,%ax
8100170e:	74 17                	je     81001727 <_fwalk+0x4d>
81001710:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001714:	66 83 f8 ff          	cmp    $0xffff,%ax
81001718:	74 0d                	je     81001727 <_fwalk+0x4d>
8100171a:	83 ec 0c             	sub    $0xc,%esp
8100171d:	53                   	push   %ebx
8100171e:	ff 55 0c             	call   *0xc(%ebp)
81001721:	83 c4 10             	add    $0x10,%esp
81001724:	09 45 e4             	or     %eax,-0x1c(%ebp)
81001727:	83 c3 68             	add    $0x68,%ebx
8100172a:	83 ef 01             	sub    $0x1,%edi
8100172d:	85 ff                	test   %edi,%edi
8100172f:	79 cc                	jns    810016fd <_fwalk+0x23>
81001731:	8b 36                	mov    (%esi),%esi
81001733:	85 f6                	test   %esi,%esi
81001735:	75 be                	jne    810016f5 <_fwalk+0x1b>
81001737:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100173a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100173d:	5b                   	pop    %ebx
8100173e:	5e                   	pop    %esi
8100173f:	5f                   	pop    %edi
81001740:	5d                   	pop    %ebp
81001741:	c3                   	ret    

81001742 <_fwalk_reent>:
81001742:	55                   	push   %ebp
81001743:	89 e5                	mov    %esp,%ebp
81001745:	57                   	push   %edi
81001746:	56                   	push   %esi
81001747:	53                   	push   %ebx
81001748:	83 ec 1c             	sub    $0x1c,%esp
8100174b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001752:	8b 45 08             	mov    0x8(%ebp),%eax
81001755:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
8100175b:	eb 41                	jmp    8100179e <_fwalk_reent+0x5c>
8100175d:	8b 5e 08             	mov    0x8(%esi),%ebx
81001760:	8b 7e 04             	mov    0x4(%esi),%edi
81001763:	eb 30                	jmp    81001795 <_fwalk_reent+0x53>
81001765:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001769:	66 85 c0             	test   %ax,%ax
8100176c:	74 24                	je     81001792 <_fwalk_reent+0x50>
8100176e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001772:	66 83 f8 01          	cmp    $0x1,%ax
81001776:	74 1a                	je     81001792 <_fwalk_reent+0x50>
81001778:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100177c:	66 83 f8 ff          	cmp    $0xffff,%ax
81001780:	74 10                	je     81001792 <_fwalk_reent+0x50>
81001782:	83 ec 08             	sub    $0x8,%esp
81001785:	53                   	push   %ebx
81001786:	ff 75 08             	pushl  0x8(%ebp)
81001789:	ff 55 0c             	call   *0xc(%ebp)
8100178c:	83 c4 10             	add    $0x10,%esp
8100178f:	09 45 e4             	or     %eax,-0x1c(%ebp)
81001792:	83 c3 68             	add    $0x68,%ebx
81001795:	83 ef 01             	sub    $0x1,%edi
81001798:	85 ff                	test   %edi,%edi
8100179a:	79 c9                	jns    81001765 <_fwalk_reent+0x23>
8100179c:	8b 36                	mov    (%esi),%esi
8100179e:	85 f6                	test   %esi,%esi
810017a0:	75 bb                	jne    8100175d <_fwalk_reent+0x1b>
810017a2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810017a5:	8d 65 f4             	lea    -0xc(%ebp),%esp
810017a8:	5b                   	pop    %ebx
810017a9:	5e                   	pop    %esi
810017aa:	5f                   	pop    %edi
810017ab:	5d                   	pop    %ebp
810017ac:	c3                   	ret    

810017ad <_fwrite_r>:
810017ad:	55                   	push   %ebp
810017ae:	89 e5                	mov    %esp,%ebp
810017b0:	83 ec 28             	sub    $0x28,%esp
810017b3:	8b 45 0c             	mov    0xc(%ebp),%eax
810017b6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810017b9:	8b 45 14             	mov    0x14(%ebp),%eax
810017bc:	0f af 45 10          	imul   0x10(%ebp),%eax
810017c0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810017c3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017c6:	89 45 e0             	mov    %eax,-0x20(%ebp)
810017c9:	8b 45 e0             	mov    -0x20(%ebp),%eax
810017cc:	89 45 ec             	mov    %eax,-0x14(%ebp)
810017cf:	8d 45 dc             	lea    -0x24(%ebp),%eax
810017d2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810017d5:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
810017dc:	8b 45 08             	mov    0x8(%ebp),%eax
810017df:	89 45 f0             	mov    %eax,-0x10(%ebp)
810017e2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810017e6:	74 18                	je     81001800 <_fwrite_r+0x53>
810017e8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810017eb:	8b 40 38             	mov    0x38(%eax),%eax
810017ee:	85 c0                	test   %eax,%eax
810017f0:	75 0e                	jne    81001800 <_fwrite_r+0x53>
810017f2:	83 ec 0c             	sub    $0xc,%esp
810017f5:	ff 75 f0             	pushl  -0x10(%ebp)
810017f8:	e8 3f f8 ff ff       	call   8100103c <__sinit>
810017fd:	83 c4 10             	add    $0x10,%esp
81001800:	8b 45 18             	mov    0x18(%ebp),%eax
81001803:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001807:	98                   	cwtl   
81001808:	25 00 20 00 00       	and    $0x2000,%eax
8100180d:	85 c0                	test   %eax,%eax
8100180f:	75 24                	jne    81001835 <_fwrite_r+0x88>
81001811:	8b 45 18             	mov    0x18(%ebp),%eax
81001814:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001818:	80 cc 20             	or     $0x20,%ah
8100181b:	89 c2                	mov    %eax,%edx
8100181d:	8b 45 18             	mov    0x18(%ebp),%eax
81001820:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001824:	8b 45 18             	mov    0x18(%ebp),%eax
81001827:	8b 40 64             	mov    0x64(%eax),%eax
8100182a:	80 e4 df             	and    $0xdf,%ah
8100182d:	89 c2                	mov    %eax,%edx
8100182f:	8b 45 18             	mov    0x18(%ebp),%eax
81001832:	89 50 64             	mov    %edx,0x64(%eax)
81001835:	83 ec 04             	sub    $0x4,%esp
81001838:	8d 45 e4             	lea    -0x1c(%ebp),%eax
8100183b:	50                   	push   %eax
8100183c:	ff 75 18             	pushl  0x18(%ebp)
8100183f:	ff 75 08             	pushl  0x8(%ebp)
81001842:	e8 cd 38 00 00       	call   81005114 <__sfvwrite_r>
81001847:	83 c4 10             	add    $0x10,%esp
8100184a:	85 c0                	test   %eax,%eax
8100184c:	75 05                	jne    81001853 <_fwrite_r+0xa6>
8100184e:	8b 45 14             	mov    0x14(%ebp),%eax
81001851:	eb 10                	jmp    81001863 <_fwrite_r+0xb6>
81001853:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001856:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001859:	29 d0                	sub    %edx,%eax
8100185b:	ba 00 00 00 00       	mov    $0x0,%edx
81001860:	f7 75 10             	divl   0x10(%ebp)
81001863:	c9                   	leave  
81001864:	c3                   	ret    

81001865 <fwrite>:
81001865:	55                   	push   %ebp
81001866:	89 e5                	mov    %esp,%ebp
81001868:	83 ec 08             	sub    $0x8,%esp
8100186b:	a1 24 73 00 81       	mov    0x81007324,%eax
81001870:	83 ec 0c             	sub    $0xc,%esp
81001873:	ff 75 14             	pushl  0x14(%ebp)
81001876:	ff 75 10             	pushl  0x10(%ebp)
81001879:	ff 75 0c             	pushl  0xc(%ebp)
8100187c:	ff 75 08             	pushl  0x8(%ebp)
8100187f:	50                   	push   %eax
81001880:	e8 28 ff ff ff       	call   810017ad <_fwrite_r>
81001885:	83 c4 20             	add    $0x20,%esp
81001888:	c9                   	leave  
81001889:	c3                   	ret    

8100188a <reverse_argv_elements>:
8100188a:	55                   	push   %ebp
8100188b:	89 e5                	mov    %esp,%ebp
8100188d:	83 ec 10             	sub    $0x10,%esp
81001890:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
81001897:	eb 5e                	jmp    810018f7 <reverse_argv_elements+0x6d>
81001899:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100189c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810018a3:	8b 45 08             	mov    0x8(%ebp),%eax
810018a6:	01 d0                	add    %edx,%eax
810018a8:	8b 00                	mov    (%eax),%eax
810018aa:	89 45 f8             	mov    %eax,-0x8(%ebp)
810018ad:	8b 45 0c             	mov    0xc(%ebp),%eax
810018b0:	2b 45 fc             	sub    -0x4(%ebp),%eax
810018b3:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
810018b8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810018bf:	8b 45 08             	mov    0x8(%ebp),%eax
810018c2:	01 d0                	add    %edx,%eax
810018c4:	8b 55 fc             	mov    -0x4(%ebp),%edx
810018c7:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
810018ce:	8b 55 08             	mov    0x8(%ebp),%edx
810018d1:	01 ca                	add    %ecx,%edx
810018d3:	8b 00                	mov    (%eax),%eax
810018d5:	89 02                	mov    %eax,(%edx)
810018d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810018da:	2b 45 fc             	sub    -0x4(%ebp),%eax
810018dd:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
810018e2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810018e9:	8b 45 08             	mov    0x8(%ebp),%eax
810018ec:	01 c2                	add    %eax,%edx
810018ee:	8b 45 f8             	mov    -0x8(%ebp),%eax
810018f1:	89 02                	mov    %eax,(%edx)
810018f3:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
810018f7:	8b 45 0c             	mov    0xc(%ebp),%eax
810018fa:	d1 f8                	sar    %eax
810018fc:	39 45 fc             	cmp    %eax,-0x4(%ebp)
810018ff:	7c 98                	jl     81001899 <reverse_argv_elements+0xf>
81001901:	90                   	nop
81001902:	90                   	nop
81001903:	c9                   	leave  
81001904:	c3                   	ret    

81001905 <permute>:
81001905:	55                   	push   %ebp
81001906:	89 e5                	mov    %esp,%ebp
81001908:	ff 75 0c             	pushl  0xc(%ebp)
8100190b:	ff 75 08             	pushl  0x8(%ebp)
8100190e:	e8 77 ff ff ff       	call   8100188a <reverse_argv_elements>
81001913:	83 c4 08             	add    $0x8,%esp
81001916:	8b 55 0c             	mov    0xc(%ebp),%edx
81001919:	8b 45 10             	mov    0x10(%ebp),%eax
8100191c:	01 d0                	add    %edx,%eax
8100191e:	50                   	push   %eax
8100191f:	ff 75 08             	pushl  0x8(%ebp)
81001922:	e8 63 ff ff ff       	call   8100188a <reverse_argv_elements>
81001927:	83 c4 08             	add    $0x8,%esp
8100192a:	ff 75 10             	pushl  0x10(%ebp)
8100192d:	ff 75 08             	pushl  0x8(%ebp)
81001930:	e8 55 ff ff ff       	call   8100188a <reverse_argv_elements>
81001935:	83 c4 08             	add    $0x8,%esp
81001938:	90                   	nop
81001939:	c9                   	leave  
8100193a:	c3                   	ret    

8100193b <is_option>:
8100193b:	55                   	push   %ebp
8100193c:	89 e5                	mov    %esp,%ebp
8100193e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81001942:	74 1a                	je     8100195e <is_option+0x23>
81001944:	8b 45 08             	mov    0x8(%ebp),%eax
81001947:	0f b6 00             	movzbl (%eax),%eax
8100194a:	3c 2d                	cmp    $0x2d,%al
8100194c:	74 10                	je     8100195e <is_option+0x23>
8100194e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001952:	74 11                	je     81001965 <is_option+0x2a>
81001954:	8b 45 08             	mov    0x8(%ebp),%eax
81001957:	0f b6 00             	movzbl (%eax),%eax
8100195a:	3c 2b                	cmp    $0x2b,%al
8100195c:	75 07                	jne    81001965 <is_option+0x2a>
8100195e:	b8 01 00 00 00       	mov    $0x1,%eax
81001963:	eb 05                	jmp    8100196a <is_option+0x2f>
81001965:	b8 00 00 00 00       	mov    $0x0,%eax
8100196a:	5d                   	pop    %ebp
8100196b:	c3                   	ret    

8100196c <read_globals>:
8100196c:	55                   	push   %ebp
8100196d:	89 e5                	mov    %esp,%ebp
8100196f:	8b 15 f4 7c 00 81    	mov    0x81007cf4,%edx
81001975:	8b 45 08             	mov    0x8(%ebp),%eax
81001978:	89 10                	mov    %edx,(%eax)
8100197a:	8b 15 f8 7c 00 81    	mov    0x81007cf8,%edx
81001980:	8b 45 08             	mov    0x8(%ebp),%eax
81001983:	89 50 04             	mov    %edx,0x4(%eax)
81001986:	8b 15 e4 6e 00 81    	mov    0x81006ee4,%edx
8100198c:	8b 45 08             	mov    0x8(%ebp),%eax
8100198f:	89 50 08             	mov    %edx,0x8(%eax)
81001992:	8b 15 e8 6e 00 81    	mov    0x81006ee8,%edx
81001998:	8b 45 08             	mov    0x8(%ebp),%eax
8100199b:	89 50 0c             	mov    %edx,0xc(%eax)
8100199e:	8b 15 fc 7c 00 81    	mov    0x81007cfc,%edx
810019a4:	8b 45 08             	mov    0x8(%ebp),%eax
810019a7:	89 50 10             	mov    %edx,0x10(%eax)
810019aa:	8b 15 00 7d 00 81    	mov    0x81007d00,%edx
810019b0:	8b 45 08             	mov    0x8(%ebp),%eax
810019b3:	89 50 14             	mov    %edx,0x14(%eax)
810019b6:	8b 15 04 7d 00 81    	mov    0x81007d04,%edx
810019bc:	8b 45 08             	mov    0x8(%ebp),%eax
810019bf:	89 50 18             	mov    %edx,0x18(%eax)
810019c2:	90                   	nop
810019c3:	5d                   	pop    %ebp
810019c4:	c3                   	ret    

810019c5 <write_globals>:
810019c5:	55                   	push   %ebp
810019c6:	89 e5                	mov    %esp,%ebp
810019c8:	8b 45 08             	mov    0x8(%ebp),%eax
810019cb:	8b 00                	mov    (%eax),%eax
810019cd:	a3 f4 7c 00 81       	mov    %eax,0x81007cf4
810019d2:	8b 45 08             	mov    0x8(%ebp),%eax
810019d5:	8b 40 04             	mov    0x4(%eax),%eax
810019d8:	a3 f8 7c 00 81       	mov    %eax,0x81007cf8
810019dd:	8b 45 08             	mov    0x8(%ebp),%eax
810019e0:	8b 40 08             	mov    0x8(%eax),%eax
810019e3:	a3 e4 6e 00 81       	mov    %eax,0x81006ee4
810019e8:	8b 45 08             	mov    0x8(%ebp),%eax
810019eb:	8b 40 0c             	mov    0xc(%eax),%eax
810019ee:	a3 e8 6e 00 81       	mov    %eax,0x81006ee8
810019f3:	8b 45 08             	mov    0x8(%ebp),%eax
810019f6:	8b 40 10             	mov    0x10(%eax),%eax
810019f9:	a3 fc 7c 00 81       	mov    %eax,0x81007cfc
810019fe:	8b 45 08             	mov    0x8(%ebp),%eax
81001a01:	8b 40 14             	mov    0x14(%eax),%eax
81001a04:	a3 00 7d 00 81       	mov    %eax,0x81007d00
81001a09:	8b 45 08             	mov    0x8(%ebp),%eax
81001a0c:	8b 40 18             	mov    0x18(%eax),%eax
81001a0f:	a3 04 7d 00 81       	mov    %eax,0x81007d04
81001a14:	90                   	nop
81001a15:	5d                   	pop    %ebp
81001a16:	c3                   	ret    

81001a17 <getopt_internal>:
81001a17:	55                   	push   %ebp
81001a18:	89 e5                	mov    %esp,%ebp
81001a1a:	53                   	push   %ebx
81001a1b:	83 ec 34             	sub    $0x34,%esp
81001a1e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81001a25:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001a2c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81001a33:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001a3a:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81001a41:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81001a48:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81001a4f:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001a56:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81001a5d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81001a61:	74 35                	je     81001a98 <getopt_internal+0x81>
81001a63:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001a67:	74 2f                	je     81001a98 <getopt_internal+0x81>
81001a69:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001a6d:	75 06                	jne    81001a75 <getopt_internal+0x5e>
81001a6f:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001a73:	74 23                	je     81001a98 <getopt_internal+0x81>
81001a75:	8b 45 20             	mov    0x20(%ebp),%eax
81001a78:	8b 40 04             	mov    0x4(%eax),%eax
81001a7b:	39 45 08             	cmp    %eax,0x8(%ebp)
81001a7e:	7e 18                	jle    81001a98 <getopt_internal+0x81>
81001a80:	8b 45 20             	mov    0x20(%ebp),%eax
81001a83:	8b 40 04             	mov    0x4(%eax),%eax
81001a86:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001a8d:	8b 45 0c             	mov    0xc(%ebp),%eax
81001a90:	01 d0                	add    %edx,%eax
81001a92:	8b 00                	mov    (%eax),%eax
81001a94:	85 c0                	test   %eax,%eax
81001a96:	75 0a                	jne    81001aa2 <getopt_internal+0x8b>
81001a98:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001a9d:	e9 85 0a 00 00       	jmp    81002527 <getopt_internal+0xb10>
81001aa2:	8b 45 20             	mov    0x20(%ebp),%eax
81001aa5:	8b 40 04             	mov    0x4(%eax),%eax
81001aa8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001aaf:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ab2:	01 d0                	add    %edx,%eax
81001ab4:	8b 00                	mov    (%eax),%eax
81001ab6:	83 ec 08             	sub    $0x8,%esp
81001ab9:	68 e8 6a 00 81       	push   $0x81006ae8
81001abe:	50                   	push   %eax
81001abf:	e8 58 29 00 00       	call   8100441c <strcmp>
81001ac4:	83 c4 10             	add    $0x10,%esp
81001ac7:	85 c0                	test   %eax,%eax
81001ac9:	75 19                	jne    81001ae4 <getopt_internal+0xcd>
81001acb:	8b 45 20             	mov    0x20(%ebp),%eax
81001ace:	8b 40 04             	mov    0x4(%eax),%eax
81001ad1:	8d 50 01             	lea    0x1(%eax),%edx
81001ad4:	8b 45 20             	mov    0x20(%ebp),%eax
81001ad7:	89 50 04             	mov    %edx,0x4(%eax)
81001ada:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001adf:	e9 43 0a 00 00       	jmp    81002527 <getopt_internal+0xb10>
81001ae4:	8b 45 20             	mov    0x20(%ebp),%eax
81001ae7:	8b 40 04             	mov    0x4(%eax),%eax
81001aea:	85 c0                	test   %eax,%eax
81001aec:	75 28                	jne    81001b16 <getopt_internal+0xff>
81001aee:	8b 45 20             	mov    0x20(%ebp),%eax
81001af1:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001af8:	8b 45 20             	mov    0x20(%ebp),%eax
81001afb:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81001b02:	8b 45 20             	mov    0x20(%ebp),%eax
81001b05:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001b0c:	8b 45 20             	mov    0x20(%ebp),%eax
81001b0f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001b16:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001b1a:	74 33                	je     81001b4f <getopt_internal+0x138>
81001b1c:	8b 45 10             	mov    0x10(%ebp),%eax
81001b1f:	0f b6 00             	movzbl (%eax),%eax
81001b22:	3c 2d                	cmp    $0x2d,%al
81001b24:	74 0a                	je     81001b30 <getopt_internal+0x119>
81001b26:	8b 45 10             	mov    0x10(%ebp),%eax
81001b29:	0f b6 00             	movzbl (%eax),%eax
81001b2c:	3c 2b                	cmp    $0x2b,%al
81001b2e:	75 1f                	jne    81001b4f <getopt_internal+0x138>
81001b30:	8b 45 10             	mov    0x10(%ebp),%eax
81001b33:	0f b6 00             	movzbl (%eax),%eax
81001b36:	3c 2d                	cmp    $0x2d,%al
81001b38:	75 07                	jne    81001b41 <getopt_internal+0x12a>
81001b3a:	b8 01 00 00 00       	mov    $0x1,%eax
81001b3f:	eb 05                	jmp    81001b46 <getopt_internal+0x12f>
81001b41:	b8 02 00 00 00       	mov    $0x2,%eax
81001b46:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001b49:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81001b4d:	eb 23                	jmp    81001b72 <getopt_internal+0x15b>
81001b4f:	83 ec 0c             	sub    $0xc,%esp
81001b52:	68 eb 6a 00 81       	push   $0x81006aeb
81001b57:	e8 76 3a 00 00       	call   810055d2 <getenv>
81001b5c:	83 c4 10             	add    $0x10,%esp
81001b5f:	85 c0                	test   %eax,%eax
81001b61:	74 07                	je     81001b6a <getopt_internal+0x153>
81001b63:	b8 02 00 00 00       	mov    $0x2,%eax
81001b68:	eb 05                	jmp    81001b6f <getopt_internal+0x158>
81001b6a:	b8 00 00 00 00       	mov    $0x0,%eax
81001b6f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001b72:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001b76:	74 15                	je     81001b8d <getopt_internal+0x176>
81001b78:	8b 45 10             	mov    0x10(%ebp),%eax
81001b7b:	0f b6 00             	movzbl (%eax),%eax
81001b7e:	3c 3a                	cmp    $0x3a,%al
81001b80:	75 0b                	jne    81001b8d <getopt_internal+0x176>
81001b82:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81001b86:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81001b8d:	8b 45 20             	mov    0x20(%ebp),%eax
81001b90:	8b 40 10             	mov    0x10(%eax),%eax
81001b93:	83 f8 01             	cmp    $0x1,%eax
81001b96:	0f 85 a2 01 00 00    	jne    81001d3e <getopt_internal+0x327>
81001b9c:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
81001ba0:	0f 84 02 01 00 00    	je     81001ca8 <getopt_internal+0x291>
81001ba6:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81001baa:	0f 84 56 01 00 00    	je     81001d06 <getopt_internal+0x2ef>
81001bb0:	8b 45 20             	mov    0x20(%ebp),%eax
81001bb3:	8b 50 04             	mov    0x4(%eax),%edx
81001bb6:	8b 45 20             	mov    0x20(%ebp),%eax
81001bb9:	89 50 14             	mov    %edx,0x14(%eax)
81001bbc:	8b 45 20             	mov    0x20(%ebp),%eax
81001bbf:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001bc6:	eb 1e                	jmp    81001be6 <getopt_internal+0x1cf>
81001bc8:	8b 45 20             	mov    0x20(%ebp),%eax
81001bcb:	8b 40 04             	mov    0x4(%eax),%eax
81001bce:	8d 50 01             	lea    0x1(%eax),%edx
81001bd1:	8b 45 20             	mov    0x20(%ebp),%eax
81001bd4:	89 50 04             	mov    %edx,0x4(%eax)
81001bd7:	8b 45 20             	mov    0x20(%ebp),%eax
81001bda:	8b 40 18             	mov    0x18(%eax),%eax
81001bdd:	8d 50 01             	lea    0x1(%eax),%edx
81001be0:	8b 45 20             	mov    0x20(%ebp),%eax
81001be3:	89 50 18             	mov    %edx,0x18(%eax)
81001be6:	8b 45 20             	mov    0x20(%ebp),%eax
81001be9:	8b 40 04             	mov    0x4(%eax),%eax
81001bec:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001bf3:	8b 45 0c             	mov    0xc(%ebp),%eax
81001bf6:	01 d0                	add    %edx,%eax
81001bf8:	8b 00                	mov    (%eax),%eax
81001bfa:	83 ec 08             	sub    $0x8,%esp
81001bfd:	ff 75 1c             	pushl  0x1c(%ebp)
81001c00:	50                   	push   %eax
81001c01:	e8 35 fd ff ff       	call   8100193b <is_option>
81001c06:	83 c4 10             	add    $0x10,%esp
81001c09:	85 c0                	test   %eax,%eax
81001c0b:	74 bb                	je     81001bc8 <getopt_internal+0x1b1>
81001c0d:	8b 45 20             	mov    0x20(%ebp),%eax
81001c10:	8b 40 04             	mov    0x4(%eax),%eax
81001c13:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c1a:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c1d:	01 d0                	add    %edx,%eax
81001c1f:	8b 00                	mov    (%eax),%eax
81001c21:	85 c0                	test   %eax,%eax
81001c23:	75 16                	jne    81001c3b <getopt_internal+0x224>
81001c25:	8b 45 20             	mov    0x20(%ebp),%eax
81001c28:	8b 50 14             	mov    0x14(%eax),%edx
81001c2b:	8b 45 20             	mov    0x20(%ebp),%eax
81001c2e:	89 50 04             	mov    %edx,0x4(%eax)
81001c31:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001c36:	e9 ec 08 00 00       	jmp    81002527 <getopt_internal+0xb10>
81001c3b:	8b 45 20             	mov    0x20(%ebp),%eax
81001c3e:	8b 40 04             	mov    0x4(%eax),%eax
81001c41:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c48:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c4b:	01 d0                	add    %edx,%eax
81001c4d:	8b 00                	mov    (%eax),%eax
81001c4f:	83 ec 08             	sub    $0x8,%esp
81001c52:	68 e8 6a 00 81       	push   $0x81006ae8
81001c57:	50                   	push   %eax
81001c58:	e8 bf 27 00 00       	call   8100441c <strcmp>
81001c5d:	83 c4 10             	add    $0x10,%esp
81001c60:	85 c0                	test   %eax,%eax
81001c62:	0f 85 cf 00 00 00    	jne    81001d37 <getopt_internal+0x320>
81001c68:	8b 45 20             	mov    0x20(%ebp),%eax
81001c6b:	8b 40 18             	mov    0x18(%eax),%eax
81001c6e:	8b 55 20             	mov    0x20(%ebp),%edx
81001c71:	8b 52 14             	mov    0x14(%edx),%edx
81001c74:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001c7b:	8b 55 0c             	mov    0xc(%ebp),%edx
81001c7e:	01 ca                	add    %ecx,%edx
81001c80:	83 ec 04             	sub    $0x4,%esp
81001c83:	6a 01                	push   $0x1
81001c85:	50                   	push   %eax
81001c86:	52                   	push   %edx
81001c87:	e8 79 fc ff ff       	call   81001905 <permute>
81001c8c:	83 c4 10             	add    $0x10,%esp
81001c8f:	8b 45 20             	mov    0x20(%ebp),%eax
81001c92:	8b 40 14             	mov    0x14(%eax),%eax
81001c95:	8d 50 01             	lea    0x1(%eax),%edx
81001c98:	8b 45 20             	mov    0x20(%ebp),%eax
81001c9b:	89 50 04             	mov    %edx,0x4(%eax)
81001c9e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001ca3:	e9 7f 08 00 00       	jmp    81002527 <getopt_internal+0xb10>
81001ca8:	8b 45 20             	mov    0x20(%ebp),%eax
81001cab:	8b 40 04             	mov    0x4(%eax),%eax
81001cae:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001cb5:	8b 45 0c             	mov    0xc(%ebp),%eax
81001cb8:	01 d0                	add    %edx,%eax
81001cba:	8b 00                	mov    (%eax),%eax
81001cbc:	83 ec 08             	sub    $0x8,%esp
81001cbf:	ff 75 1c             	pushl  0x1c(%ebp)
81001cc2:	50                   	push   %eax
81001cc3:	e8 73 fc ff ff       	call   8100193b <is_option>
81001cc8:	83 c4 10             	add    $0x10,%esp
81001ccb:	85 c0                	test   %eax,%eax
81001ccd:	75 6b                	jne    81001d3a <getopt_internal+0x323>
81001ccf:	8b 45 20             	mov    0x20(%ebp),%eax
81001cd2:	8b 40 04             	mov    0x4(%eax),%eax
81001cd5:	8d 48 01             	lea    0x1(%eax),%ecx
81001cd8:	8b 55 20             	mov    0x20(%ebp),%edx
81001cdb:	89 4a 04             	mov    %ecx,0x4(%edx)
81001cde:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001ce5:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ce8:	01 d0                	add    %edx,%eax
81001cea:	8b 10                	mov    (%eax),%edx
81001cec:	8b 45 20             	mov    0x20(%ebp),%eax
81001cef:	89 10                	mov    %edx,(%eax)
81001cf1:	8b 45 20             	mov    0x20(%ebp),%eax
81001cf4:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
81001cfb:	8b 45 20             	mov    0x20(%ebp),%eax
81001cfe:	8b 40 0c             	mov    0xc(%eax),%eax
81001d01:	e9 21 08 00 00       	jmp    81002527 <getopt_internal+0xb10>
81001d06:	8b 45 20             	mov    0x20(%ebp),%eax
81001d09:	8b 40 04             	mov    0x4(%eax),%eax
81001d0c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d13:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d16:	01 d0                	add    %edx,%eax
81001d18:	8b 00                	mov    (%eax),%eax
81001d1a:	83 ec 08             	sub    $0x8,%esp
81001d1d:	ff 75 1c             	pushl  0x1c(%ebp)
81001d20:	50                   	push   %eax
81001d21:	e8 15 fc ff ff       	call   8100193b <is_option>
81001d26:	83 c4 10             	add    $0x10,%esp
81001d29:	85 c0                	test   %eax,%eax
81001d2b:	75 10                	jne    81001d3d <getopt_internal+0x326>
81001d2d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001d32:	e9 f0 07 00 00       	jmp    81002527 <getopt_internal+0xb10>
81001d37:	90                   	nop
81001d38:	eb 04                	jmp    81001d3e <getopt_internal+0x327>
81001d3a:	90                   	nop
81001d3b:	eb 01                	jmp    81001d3e <getopt_internal+0x327>
81001d3d:	90                   	nop
81001d3e:	8b 45 20             	mov    0x20(%ebp),%eax
81001d41:	8b 40 04             	mov    0x4(%eax),%eax
81001d44:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d4b:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d4e:	01 d0                	add    %edx,%eax
81001d50:	8b 00                	mov    (%eax),%eax
81001d52:	85 c0                	test   %eax,%eax
81001d54:	75 0a                	jne    81001d60 <getopt_internal+0x349>
81001d56:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001d5b:	e9 c7 07 00 00       	jmp    81002527 <getopt_internal+0xb10>
81001d60:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001d64:	0f 84 15 03 00 00    	je     8100207f <getopt_internal+0x668>
81001d6a:	8b 45 20             	mov    0x20(%ebp),%eax
81001d6d:	8b 40 04             	mov    0x4(%eax),%eax
81001d70:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d77:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d7a:	01 d0                	add    %edx,%eax
81001d7c:	8b 00                	mov    (%eax),%eax
81001d7e:	83 ec 04             	sub    $0x4,%esp
81001d81:	6a 02                	push   $0x2
81001d83:	68 e8 6a 00 81       	push   $0x81006ae8
81001d88:	50                   	push   %eax
81001d89:	e8 37 14 00 00       	call   810031c5 <memcmp>
81001d8e:	83 c4 10             	add    $0x10,%esp
81001d91:	85 c0                	test   %eax,%eax
81001d93:	74 29                	je     81001dbe <getopt_internal+0x3a7>
81001d95:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81001d99:	0f 84 e0 02 00 00    	je     8100207f <getopt_internal+0x668>
81001d9f:	8b 45 20             	mov    0x20(%ebp),%eax
81001da2:	8b 40 04             	mov    0x4(%eax),%eax
81001da5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001dac:	8b 45 0c             	mov    0xc(%ebp),%eax
81001daf:	01 d0                	add    %edx,%eax
81001db1:	8b 00                	mov    (%eax),%eax
81001db3:	0f b6 00             	movzbl (%eax),%eax
81001db6:	3c 2b                	cmp    $0x2b,%al
81001db8:	0f 85 c1 02 00 00    	jne    8100207f <getopt_internal+0x668>
81001dbe:	8b 45 20             	mov    0x20(%ebp),%eax
81001dc1:	8b 40 10             	mov    0x10(%eax),%eax
81001dc4:	83 f8 01             	cmp    $0x1,%eax
81001dc7:	0f 85 b2 02 00 00    	jne    8100207f <getopt_internal+0x668>
81001dcd:	8b 45 20             	mov    0x20(%ebp),%eax
81001dd0:	8b 40 04             	mov    0x4(%eax),%eax
81001dd3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001dda:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ddd:	01 d0                	add    %edx,%eax
81001ddf:	8b 00                	mov    (%eax),%eax
81001de1:	83 ec 04             	sub    $0x4,%esp
81001de4:	6a 02                	push   $0x2
81001de6:	68 e8 6a 00 81       	push   $0x81006ae8
81001deb:	50                   	push   %eax
81001dec:	e8 d4 13 00 00       	call   810031c5 <memcmp>
81001df1:	83 c4 10             	add    $0x10,%esp
81001df4:	85 c0                	test   %eax,%eax
81001df6:	75 0a                	jne    81001e02 <getopt_internal+0x3eb>
81001df8:	8b 45 20             	mov    0x20(%ebp),%eax
81001dfb:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
81001e02:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81001e09:	8b 45 20             	mov    0x20(%ebp),%eax
81001e0c:	8b 40 04             	mov    0x4(%eax),%eax
81001e0f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e16:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e19:	01 d0                	add    %edx,%eax
81001e1b:	8b 10                	mov    (%eax),%edx
81001e1d:	8b 45 20             	mov    0x20(%ebp),%eax
81001e20:	8b 40 10             	mov    0x10(%eax),%eax
81001e23:	01 d0                	add    %edx,%eax
81001e25:	83 ec 08             	sub    $0x8,%esp
81001e28:	6a 3d                	push   $0x3d
81001e2a:	50                   	push   %eax
81001e2b:	e8 f0 24 00 00       	call   81004320 <strchr>
81001e30:	83 c4 10             	add    $0x10,%esp
81001e33:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001e36:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001e3a:	75 4a                	jne    81001e86 <getopt_internal+0x46f>
81001e3c:	8b 45 20             	mov    0x20(%ebp),%eax
81001e3f:	8b 40 04             	mov    0x4(%eax),%eax
81001e42:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e49:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e4c:	01 d0                	add    %edx,%eax
81001e4e:	8b 00                	mov    (%eax),%eax
81001e50:	83 ec 0c             	sub    $0xc,%esp
81001e53:	50                   	push   %eax
81001e54:	e8 77 26 00 00       	call   810044d0 <strlen>
81001e59:	83 c4 10             	add    $0x10,%esp
81001e5c:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001e5f:	8b 45 20             	mov    0x20(%ebp),%eax
81001e62:	8b 40 04             	mov    0x4(%eax),%eax
81001e65:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e6c:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e6f:	01 d0                	add    %edx,%eax
81001e71:	8b 10                	mov    (%eax),%edx
81001e73:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001e76:	01 d0                	add    %edx,%eax
81001e78:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001e7b:	8b 45 20             	mov    0x20(%ebp),%eax
81001e7e:	8b 40 10             	mov    0x10(%eax),%eax
81001e81:	29 45 ec             	sub    %eax,-0x14(%ebp)
81001e84:	eb 28                	jmp    81001eae <getopt_internal+0x497>
81001e86:	8b 45 20             	mov    0x20(%ebp),%eax
81001e89:	8b 40 04             	mov    0x4(%eax),%eax
81001e8c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e93:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e96:	01 d0                	add    %edx,%eax
81001e98:	8b 08                	mov    (%eax),%ecx
81001e9a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001e9d:	29 c8                	sub    %ecx,%eax
81001e9f:	89 c2                	mov    %eax,%edx
81001ea1:	8b 45 20             	mov    0x20(%ebp),%eax
81001ea4:	8b 48 10             	mov    0x10(%eax),%ecx
81001ea7:	89 d0                	mov    %edx,%eax
81001ea9:	29 c8                	sub    %ecx,%eax
81001eab:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001eae:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001eb5:	e9 95 01 00 00       	jmp    8100204f <getopt_internal+0x638>
81001eba:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ebd:	c1 e0 04             	shl    $0x4,%eax
81001ec0:	89 c2                	mov    %eax,%edx
81001ec2:	8b 45 14             	mov    0x14(%ebp),%eax
81001ec5:	01 d0                	add    %edx,%eax
81001ec7:	8b 00                	mov    (%eax),%eax
81001ec9:	8b 55 20             	mov    0x20(%ebp),%edx
81001ecc:	8b 52 04             	mov    0x4(%edx),%edx
81001ecf:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001ed6:	8b 55 0c             	mov    0xc(%ebp),%edx
81001ed9:	01 ca                	add    %ecx,%edx
81001edb:	8b 0a                	mov    (%edx),%ecx
81001edd:	8b 55 20             	mov    0x20(%ebp),%edx
81001ee0:	8b 52 10             	mov    0x10(%edx),%edx
81001ee3:	01 ca                	add    %ecx,%edx
81001ee5:	83 ec 04             	sub    $0x4,%esp
81001ee8:	ff 75 ec             	pushl  -0x14(%ebp)
81001eeb:	50                   	push   %eax
81001eec:	52                   	push   %edx
81001eed:	e8 d3 12 00 00       	call   810031c5 <memcmp>
81001ef2:	83 c4 10             	add    $0x10,%esp
81001ef5:	85 c0                	test   %eax,%eax
81001ef7:	0f 85 4e 01 00 00    	jne    8100204b <getopt_internal+0x634>
81001efd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f00:	c1 e0 04             	shl    $0x4,%eax
81001f03:	89 c2                	mov    %eax,%edx
81001f05:	8b 45 14             	mov    0x14(%ebp),%eax
81001f08:	01 d0                	add    %edx,%eax
81001f0a:	8b 00                	mov    (%eax),%eax
81001f0c:	83 ec 0c             	sub    $0xc,%esp
81001f0f:	50                   	push   %eax
81001f10:	e8 bb 25 00 00       	call   810044d0 <strlen>
81001f15:	83 c4 10             	add    $0x10,%esp
81001f18:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001f1b:	75 0b                	jne    81001f28 <getopt_internal+0x511>
81001f1d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f20:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001f23:	e9 3e 01 00 00       	jmp    81002066 <getopt_internal+0x64f>
81001f28:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001f2c:	79 0b                	jns    81001f39 <getopt_internal+0x522>
81001f2e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f31:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001f34:	e9 12 01 00 00       	jmp    8100204b <getopt_internal+0x634>
81001f39:	8b 45 20             	mov    0x20(%ebp),%eax
81001f3c:	8b 40 08             	mov    0x8(%eax),%eax
81001f3f:	85 c0                	test   %eax,%eax
81001f41:	0f 84 ef 00 00 00    	je     81002036 <getopt_internal+0x61f>
81001f47:	a1 24 73 00 81       	mov    0x81007324,%eax
81001f4c:	8b 50 0c             	mov    0xc(%eax),%edx
81001f4f:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f52:	8b 00                	mov    (%eax),%eax
81001f54:	83 ec 08             	sub    $0x8,%esp
81001f57:	52                   	push   %edx
81001f58:	50                   	push   %eax
81001f59:	e8 e2 2f 00 00       	call   81004f40 <fputs>
81001f5e:	83 c4 10             	add    $0x10,%esp
81001f61:	a1 24 73 00 81       	mov    0x81007324,%eax
81001f66:	8b 40 0c             	mov    0xc(%eax),%eax
81001f69:	83 ec 08             	sub    $0x8,%esp
81001f6c:	50                   	push   %eax
81001f6d:	68 fb 6a 00 81       	push   $0x81006afb
81001f72:	e8 c9 2f 00 00       	call   81004f40 <fputs>
81001f77:	83 c4 10             	add    $0x10,%esp
81001f7a:	a1 24 73 00 81       	mov    0x81007324,%eax
81001f7f:	8b 50 0c             	mov    0xc(%eax),%edx
81001f82:	8b 45 20             	mov    0x20(%ebp),%eax
81001f85:	8b 40 04             	mov    0x4(%eax),%eax
81001f88:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81001f8f:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f92:	01 c8                	add    %ecx,%eax
81001f94:	8b 00                	mov    (%eax),%eax
81001f96:	83 ec 08             	sub    $0x8,%esp
81001f99:	52                   	push   %edx
81001f9a:	50                   	push   %eax
81001f9b:	e8 a0 2f 00 00       	call   81004f40 <fputs>
81001fa0:	83 c4 10             	add    $0x10,%esp
81001fa3:	a1 24 73 00 81       	mov    0x81007324,%eax
81001fa8:	8b 40 0c             	mov    0xc(%eax),%eax
81001fab:	83 ec 08             	sub    $0x8,%esp
81001fae:	50                   	push   %eax
81001faf:	68 06 6b 00 81       	push   $0x81006b06
81001fb4:	e8 87 2f 00 00       	call   81004f40 <fputs>
81001fb9:	83 c4 10             	add    $0x10,%esp
81001fbc:	a1 24 73 00 81       	mov    0x81007324,%eax
81001fc1:	8b 50 0c             	mov    0xc(%eax),%edx
81001fc4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001fc7:	c1 e0 04             	shl    $0x4,%eax
81001fca:	89 c1                	mov    %eax,%ecx
81001fcc:	8b 45 14             	mov    0x14(%ebp),%eax
81001fcf:	01 c8                	add    %ecx,%eax
81001fd1:	8b 00                	mov    (%eax),%eax
81001fd3:	83 ec 08             	sub    $0x8,%esp
81001fd6:	52                   	push   %edx
81001fd7:	50                   	push   %eax
81001fd8:	e8 63 2f 00 00       	call   81004f40 <fputs>
81001fdd:	83 c4 10             	add    $0x10,%esp
81001fe0:	a1 24 73 00 81       	mov    0x81007324,%eax
81001fe5:	8b 40 0c             	mov    0xc(%eax),%eax
81001fe8:	83 ec 08             	sub    $0x8,%esp
81001feb:	50                   	push   %eax
81001fec:	68 23 6b 00 81       	push   $0x81006b23
81001ff1:	e8 4a 2f 00 00       	call   81004f40 <fputs>
81001ff6:	83 c4 10             	add    $0x10,%esp
81001ff9:	a1 24 73 00 81       	mov    0x81007324,%eax
81001ffe:	8b 50 0c             	mov    0xc(%eax),%edx
81002001:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002004:	c1 e0 04             	shl    $0x4,%eax
81002007:	89 c1                	mov    %eax,%ecx
81002009:	8b 45 14             	mov    0x14(%ebp),%eax
8100200c:	01 c8                	add    %ecx,%eax
8100200e:	8b 00                	mov    (%eax),%eax
81002010:	83 ec 08             	sub    $0x8,%esp
81002013:	52                   	push   %edx
81002014:	50                   	push   %eax
81002015:	e8 26 2f 00 00       	call   81004f40 <fputs>
8100201a:	83 c4 10             	add    $0x10,%esp
8100201d:	a1 24 73 00 81       	mov    0x81007324,%eax
81002022:	8b 40 0c             	mov    0xc(%eax),%eax
81002025:	83 ec 08             	sub    $0x8,%esp
81002028:	50                   	push   %eax
81002029:	68 2c 6b 00 81       	push   $0x81006b2c
8100202e:	e8 0d 2f 00 00       	call   81004f40 <fputs>
81002033:	83 c4 10             	add    $0x10,%esp
81002036:	8b 45 20             	mov    0x20(%ebp),%eax
81002039:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81002040:	8b 45 20             	mov    0x20(%ebp),%eax
81002043:	8b 40 0c             	mov    0xc(%eax),%eax
81002046:	e9 dc 04 00 00       	jmp    81002527 <getopt_internal+0xb10>
8100204b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100204f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002052:	c1 e0 04             	shl    $0x4,%eax
81002055:	89 c2                	mov    %eax,%edx
81002057:	8b 45 14             	mov    0x14(%ebp),%eax
8100205a:	01 d0                	add    %edx,%eax
8100205c:	8b 00                	mov    (%eax),%eax
8100205e:	85 c0                	test   %eax,%eax
81002060:	0f 85 54 fe ff ff    	jne    81001eba <getopt_internal+0x4a3>
81002066:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100206a:	78 13                	js     8100207f <getopt_internal+0x668>
8100206c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100206f:	c1 e0 04             	shl    $0x4,%eax
81002072:	89 c2                	mov    %eax,%edx
81002074:	8b 45 14             	mov    0x14(%ebp),%eax
81002077:	01 d0                	add    %edx,%eax
81002079:	8b 40 04             	mov    0x4(%eax),%eax
8100207c:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100207f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002083:	0f 89 9a 01 00 00    	jns    81002223 <getopt_internal+0x80c>
81002089:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100208d:	0f 84 90 01 00 00    	je     81002223 <getopt_internal+0x80c>
81002093:	8b 45 20             	mov    0x20(%ebp),%eax
81002096:	8b 40 04             	mov    0x4(%eax),%eax
81002099:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810020a0:	8b 45 0c             	mov    0xc(%ebp),%eax
810020a3:	01 d0                	add    %edx,%eax
810020a5:	8b 10                	mov    (%eax),%edx
810020a7:	8b 45 20             	mov    0x20(%ebp),%eax
810020aa:	8b 40 10             	mov    0x10(%eax),%eax
810020ad:	01 d0                	add    %edx,%eax
810020af:	0f b6 00             	movzbl (%eax),%eax
810020b2:	0f be c0             	movsbl %al,%eax
810020b5:	83 ec 08             	sub    $0x8,%esp
810020b8:	50                   	push   %eax
810020b9:	ff 75 10             	pushl  0x10(%ebp)
810020bc:	e8 5f 22 00 00       	call   81004320 <strchr>
810020c1:	83 c4 10             	add    $0x10,%esp
810020c4:	89 45 dc             	mov    %eax,-0x24(%ebp)
810020c7:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810020cb:	0f 85 f1 00 00 00    	jne    810021c2 <getopt_internal+0x7ab>
810020d1:	8b 45 20             	mov    0x20(%ebp),%eax
810020d4:	8b 40 08             	mov    0x8(%eax),%eax
810020d7:	85 c0                	test   %eax,%eax
810020d9:	0f 84 83 00 00 00    	je     81002162 <getopt_internal+0x74b>
810020df:	a1 24 73 00 81       	mov    0x81007324,%eax
810020e4:	8b 50 0c             	mov    0xc(%eax),%edx
810020e7:	8b 45 0c             	mov    0xc(%ebp),%eax
810020ea:	8b 00                	mov    (%eax),%eax
810020ec:	83 ec 08             	sub    $0x8,%esp
810020ef:	52                   	push   %edx
810020f0:	50                   	push   %eax
810020f1:	e8 4a 2e 00 00       	call   81004f40 <fputs>
810020f6:	83 c4 10             	add    $0x10,%esp
810020f9:	a1 24 73 00 81       	mov    0x81007324,%eax
810020fe:	8b 40 0c             	mov    0xc(%eax),%eax
81002101:	83 ec 08             	sub    $0x8,%esp
81002104:	50                   	push   %eax
81002105:	68 30 6b 00 81       	push   $0x81006b30
8100210a:	e8 31 2e 00 00       	call   81004f40 <fputs>
8100210f:	83 c4 10             	add    $0x10,%esp
81002112:	a1 24 73 00 81       	mov    0x81007324,%eax
81002117:	8b 50 0c             	mov    0xc(%eax),%edx
8100211a:	8b 45 20             	mov    0x20(%ebp),%eax
8100211d:	8b 40 04             	mov    0x4(%eax),%eax
81002120:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81002127:	8b 45 0c             	mov    0xc(%ebp),%eax
8100212a:	01 c8                	add    %ecx,%eax
8100212c:	8b 08                	mov    (%eax),%ecx
8100212e:	8b 45 20             	mov    0x20(%ebp),%eax
81002131:	8b 40 10             	mov    0x10(%eax),%eax
81002134:	01 c8                	add    %ecx,%eax
81002136:	0f b6 00             	movzbl (%eax),%eax
81002139:	0f be c0             	movsbl %al,%eax
8100213c:	83 ec 08             	sub    $0x8,%esp
8100213f:	52                   	push   %edx
81002140:	50                   	push   %eax
81002141:	e8 06 2d 00 00       	call   81004e4c <fputc>
81002146:	83 c4 10             	add    $0x10,%esp
81002149:	a1 24 73 00 81       	mov    0x81007324,%eax
8100214e:	8b 40 0c             	mov    0xc(%eax),%eax
81002151:	83 ec 08             	sub    $0x8,%esp
81002154:	50                   	push   %eax
81002155:	68 47 6b 00 81       	push   $0x81006b47
8100215a:	e8 e1 2d 00 00       	call   81004f40 <fputs>
8100215f:	83 c4 10             	add    $0x10,%esp
81002162:	8b 45 20             	mov    0x20(%ebp),%eax
81002165:	8b 40 10             	mov    0x10(%eax),%eax
81002168:	8d 50 01             	lea    0x1(%eax),%edx
8100216b:	8b 45 20             	mov    0x20(%ebp),%eax
8100216e:	89 50 10             	mov    %edx,0x10(%eax)
81002171:	8b 45 20             	mov    0x20(%ebp),%eax
81002174:	8b 40 04             	mov    0x4(%eax),%eax
81002177:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100217e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002181:	01 d0                	add    %edx,%eax
81002183:	8b 10                	mov    (%eax),%edx
81002185:	8b 45 20             	mov    0x20(%ebp),%eax
81002188:	8b 40 10             	mov    0x10(%eax),%eax
8100218b:	01 d0                	add    %edx,%eax
8100218d:	0f b6 00             	movzbl (%eax),%eax
81002190:	84 c0                	test   %al,%al
81002192:	75 19                	jne    810021ad <getopt_internal+0x796>
81002194:	8b 45 20             	mov    0x20(%ebp),%eax
81002197:	8b 40 04             	mov    0x4(%eax),%eax
8100219a:	8d 50 01             	lea    0x1(%eax),%edx
8100219d:	8b 45 20             	mov    0x20(%ebp),%eax
810021a0:	89 50 04             	mov    %edx,0x4(%eax)
810021a3:	8b 45 20             	mov    0x20(%ebp),%eax
810021a6:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810021ad:	8b 45 20             	mov    0x20(%ebp),%eax
810021b0:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
810021b7:	8b 45 20             	mov    0x20(%ebp),%eax
810021ba:	8b 40 0c             	mov    0xc(%eax),%eax
810021bd:	e9 65 03 00 00       	jmp    81002527 <getopt_internal+0xb10>
810021c2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810021c5:	83 c0 01             	add    $0x1,%eax
810021c8:	0f b6 00             	movzbl (%eax),%eax
810021cb:	3c 3a                	cmp    $0x3a,%al
810021cd:	75 1b                	jne    810021ea <getopt_internal+0x7d3>
810021cf:	8b 45 dc             	mov    -0x24(%ebp),%eax
810021d2:	83 c0 02             	add    $0x2,%eax
810021d5:	0f b6 00             	movzbl (%eax),%eax
810021d8:	3c 3a                	cmp    $0x3a,%al
810021da:	75 07                	jne    810021e3 <getopt_internal+0x7cc>
810021dc:	b8 02 00 00 00       	mov    $0x2,%eax
810021e1:	eb 0c                	jmp    810021ef <getopt_internal+0x7d8>
810021e3:	b8 01 00 00 00       	mov    $0x1,%eax
810021e8:	eb 05                	jmp    810021ef <getopt_internal+0x7d8>
810021ea:	b8 00 00 00 00       	mov    $0x0,%eax
810021ef:	89 45 e0             	mov    %eax,-0x20(%ebp)
810021f2:	8b 45 20             	mov    0x20(%ebp),%eax
810021f5:	8b 40 04             	mov    0x4(%eax),%eax
810021f8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810021ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81002202:	01 d0                	add    %edx,%eax
81002204:	8b 10                	mov    (%eax),%edx
81002206:	8b 45 20             	mov    0x20(%ebp),%eax
81002209:	8b 40 10             	mov    0x10(%eax),%eax
8100220c:	83 c0 01             	add    $0x1,%eax
8100220f:	01 d0                	add    %edx,%eax
81002211:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002214:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002217:	0f b6 00             	movzbl (%eax),%eax
8100221a:	0f be d0             	movsbl %al,%edx
8100221d:	8b 45 20             	mov    0x20(%ebp),%eax
81002220:	89 50 0c             	mov    %edx,0xc(%eax)
81002223:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8100222a:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
8100222e:	74 40                	je     81002270 <getopt_internal+0x859>
81002230:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
81002234:	0f 85 b0 01 00 00    	jne    810023ea <getopt_internal+0x9d3>
8100223a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100223d:	0f b6 00             	movzbl (%eax),%eax
81002240:	3c 3d                	cmp    $0x3d,%al
81002242:	75 04                	jne    81002248 <getopt_internal+0x831>
81002244:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81002248:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100224b:	0f b6 00             	movzbl (%eax),%eax
8100224e:	84 c0                	test   %al,%al
81002250:	74 05                	je     81002257 <getopt_internal+0x840>
81002252:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002255:	eb 05                	jmp    8100225c <getopt_internal+0x845>
81002257:	b8 00 00 00 00       	mov    $0x0,%eax
8100225c:	8b 55 20             	mov    0x20(%ebp),%edx
8100225f:	89 02                	mov    %eax,(%edx)
81002261:	8b 45 20             	mov    0x20(%ebp),%eax
81002264:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100226b:	e9 d2 01 00 00       	jmp    81002442 <getopt_internal+0xa2b>
81002270:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002273:	0f b6 00             	movzbl (%eax),%eax
81002276:	3c 3d                	cmp    $0x3d,%al
81002278:	75 04                	jne    8100227e <getopt_internal+0x867>
8100227a:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
8100227e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002281:	0f b6 00             	movzbl (%eax),%eax
81002284:	84 c0                	test   %al,%al
81002286:	74 17                	je     8100229f <getopt_internal+0x888>
81002288:	8b 45 20             	mov    0x20(%ebp),%eax
8100228b:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100228e:	89 10                	mov    %edx,(%eax)
81002290:	8b 45 20             	mov    0x20(%ebp),%eax
81002293:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100229a:	e9 a3 01 00 00       	jmp    81002442 <getopt_internal+0xa2b>
8100229f:	8b 45 20             	mov    0x20(%ebp),%eax
810022a2:	8b 40 04             	mov    0x4(%eax),%eax
810022a5:	83 c0 01             	add    $0x1,%eax
810022a8:	39 45 08             	cmp    %eax,0x8(%ebp)
810022ab:	0f 8f 0a 01 00 00    	jg     810023bb <getopt_internal+0x9a4>
810022b1:	8b 45 20             	mov    0x20(%ebp),%eax
810022b4:	8b 40 08             	mov    0x8(%eax),%eax
810022b7:	85 c0                	test   %eax,%eax
810022b9:	0f 84 d3 00 00 00    	je     81002392 <getopt_internal+0x97b>
810022bf:	a1 24 73 00 81       	mov    0x81007324,%eax
810022c4:	8b 50 0c             	mov    0xc(%eax),%edx
810022c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810022ca:	8b 00                	mov    (%eax),%eax
810022cc:	83 ec 08             	sub    $0x8,%esp
810022cf:	52                   	push   %edx
810022d0:	50                   	push   %eax
810022d1:	e8 6a 2c 00 00       	call   81004f40 <fputs>
810022d6:	83 c4 10             	add    $0x10,%esp
810022d9:	a1 24 73 00 81       	mov    0x81007324,%eax
810022de:	8b 40 0c             	mov    0xc(%eax),%eax
810022e1:	83 ec 08             	sub    $0x8,%esp
810022e4:	50                   	push   %eax
810022e5:	68 4c 6b 00 81       	push   $0x81006b4c
810022ea:	e8 51 2c 00 00       	call   81004f40 <fputs>
810022ef:	83 c4 10             	add    $0x10,%esp
810022f2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810022f6:	78 54                	js     8100234c <getopt_internal+0x935>
810022f8:	a1 24 73 00 81       	mov    0x81007324,%eax
810022fd:	8b 40 0c             	mov    0xc(%eax),%eax
81002300:	83 ec 08             	sub    $0x8,%esp
81002303:	50                   	push   %eax
81002304:	6a 2d                	push   $0x2d
81002306:	e8 41 2b 00 00       	call   81004e4c <fputc>
8100230b:	83 c4 10             	add    $0x10,%esp
8100230e:	a1 24 73 00 81       	mov    0x81007324,%eax
81002313:	8b 50 0c             	mov    0xc(%eax),%edx
81002316:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002319:	c1 e0 04             	shl    $0x4,%eax
8100231c:	89 c1                	mov    %eax,%ecx
8100231e:	8b 45 14             	mov    0x14(%ebp),%eax
81002321:	01 c8                	add    %ecx,%eax
81002323:	8b 00                	mov    (%eax),%eax
81002325:	83 ec 08             	sub    $0x8,%esp
81002328:	52                   	push   %edx
81002329:	50                   	push   %eax
8100232a:	e8 11 2c 00 00       	call   81004f40 <fputs>
8100232f:	83 c4 10             	add    $0x10,%esp
81002332:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002336:	74 07                	je     8100233f <getopt_internal+0x928>
81002338:	ba 3a 00 00 00       	mov    $0x3a,%edx
8100233d:	eb 05                	jmp    81002344 <getopt_internal+0x92d>
8100233f:	ba 3f 00 00 00       	mov    $0x3f,%edx
81002344:	8b 45 20             	mov    0x20(%ebp),%eax
81002347:	89 50 0c             	mov    %edx,0xc(%eax)
8100234a:	eb 2d                	jmp    81002379 <getopt_internal+0x962>
8100234c:	a1 24 73 00 81       	mov    0x81007324,%eax
81002351:	8b 50 0c             	mov    0xc(%eax),%edx
81002354:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002357:	0f b6 00             	movzbl (%eax),%eax
8100235a:	0f be c0             	movsbl %al,%eax
8100235d:	83 ec 08             	sub    $0x8,%esp
81002360:	52                   	push   %edx
81002361:	50                   	push   %eax
81002362:	e8 e5 2a 00 00       	call   81004e4c <fputc>
81002367:	83 c4 10             	add    $0x10,%esp
8100236a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100236d:	0f b6 00             	movzbl (%eax),%eax
81002370:	0f be d0             	movsbl %al,%edx
81002373:	8b 45 20             	mov    0x20(%ebp),%eax
81002376:	89 50 0c             	mov    %edx,0xc(%eax)
81002379:	a1 24 73 00 81       	mov    0x81007324,%eax
8100237e:	8b 40 0c             	mov    0xc(%eax),%eax
81002381:	83 ec 08             	sub    $0x8,%esp
81002384:	50                   	push   %eax
81002385:	68 47 6b 00 81       	push   $0x81006b47
8100238a:	e8 b1 2b 00 00       	call   81004f40 <fputs>
8100238f:	83 c4 10             	add    $0x10,%esp
81002392:	8b 45 20             	mov    0x20(%ebp),%eax
81002395:	8b 40 04             	mov    0x4(%eax),%eax
81002398:	8d 50 01             	lea    0x1(%eax),%edx
8100239b:	8b 45 20             	mov    0x20(%ebp),%eax
8100239e:	89 50 04             	mov    %edx,0x4(%eax)
810023a1:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810023a5:	74 0a                	je     810023b1 <getopt_internal+0x99a>
810023a7:	b8 3a 00 00 00       	mov    $0x3a,%eax
810023ac:	e9 76 01 00 00       	jmp    81002527 <getopt_internal+0xb10>
810023b1:	b8 3f 00 00 00       	mov    $0x3f,%eax
810023b6:	e9 6c 01 00 00       	jmp    81002527 <getopt_internal+0xb10>
810023bb:	8b 45 20             	mov    0x20(%ebp),%eax
810023be:	8b 40 04             	mov    0x4(%eax),%eax
810023c1:	83 c0 01             	add    $0x1,%eax
810023c4:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810023cb:	8b 45 0c             	mov    0xc(%ebp),%eax
810023ce:	01 d0                	add    %edx,%eax
810023d0:	8b 10                	mov    (%eax),%edx
810023d2:	8b 45 20             	mov    0x20(%ebp),%eax
810023d5:	89 10                	mov    %edx,(%eax)
810023d7:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
810023de:	8b 45 20             	mov    0x20(%ebp),%eax
810023e1:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810023e8:	eb 58                	jmp    81002442 <getopt_internal+0xa2b>
810023ea:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810023ee:	79 3e                	jns    8100242e <getopt_internal+0xa17>
810023f0:	8b 45 20             	mov    0x20(%ebp),%eax
810023f3:	8b 40 10             	mov    0x10(%eax),%eax
810023f6:	8d 50 01             	lea    0x1(%eax),%edx
810023f9:	8b 45 20             	mov    0x20(%ebp),%eax
810023fc:	89 50 10             	mov    %edx,0x10(%eax)
810023ff:	8b 45 20             	mov    0x20(%ebp),%eax
81002402:	8b 40 04             	mov    0x4(%eax),%eax
81002405:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100240c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100240f:	01 d0                	add    %edx,%eax
81002411:	8b 10                	mov    (%eax),%edx
81002413:	8b 45 20             	mov    0x20(%ebp),%eax
81002416:	8b 40 10             	mov    0x10(%eax),%eax
81002419:	01 d0                	add    %edx,%eax
8100241b:	0f b6 00             	movzbl (%eax),%eax
8100241e:	84 c0                	test   %al,%al
81002420:	75 16                	jne    81002438 <getopt_internal+0xa21>
81002422:	8b 45 20             	mov    0x20(%ebp),%eax
81002425:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100242c:	eb 0a                	jmp    81002438 <getopt_internal+0xa21>
8100242e:	8b 45 20             	mov    0x20(%ebp),%eax
81002431:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002438:	8b 45 20             	mov    0x20(%ebp),%eax
8100243b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81002441:	90                   	nop
81002442:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002446:	75 57                	jne    8100249f <getopt_internal+0xa88>
81002448:	8b 45 20             	mov    0x20(%ebp),%eax
8100244b:	8b 40 10             	mov    0x10(%eax),%eax
8100244e:	83 f8 01             	cmp    $0x1,%eax
81002451:	75 4c                	jne    8100249f <getopt_internal+0xa88>
81002453:	8b 45 20             	mov    0x20(%ebp),%eax
81002456:	8b 40 18             	mov    0x18(%eax),%eax
81002459:	85 c0                	test   %eax,%eax
8100245b:	74 42                	je     8100249f <getopt_internal+0xa88>
8100245d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002460:	8d 48 01             	lea    0x1(%eax),%ecx
81002463:	8b 45 20             	mov    0x20(%ebp),%eax
81002466:	8b 40 18             	mov    0x18(%eax),%eax
81002469:	8b 55 20             	mov    0x20(%ebp),%edx
8100246c:	8b 52 14             	mov    0x14(%edx),%edx
8100246f:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
81002476:	8b 55 0c             	mov    0xc(%ebp),%edx
81002479:	01 da                	add    %ebx,%edx
8100247b:	83 ec 04             	sub    $0x4,%esp
8100247e:	51                   	push   %ecx
8100247f:	50                   	push   %eax
81002480:	52                   	push   %edx
81002481:	e8 7f f4 ff ff       	call   81001905 <permute>
81002486:	83 c4 10             	add    $0x10,%esp
81002489:	8b 45 20             	mov    0x20(%ebp),%eax
8100248c:	8b 40 14             	mov    0x14(%eax),%eax
8100248f:	8d 50 01             	lea    0x1(%eax),%edx
81002492:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002495:	01 c2                	add    %eax,%edx
81002497:	8b 45 20             	mov    0x20(%ebp),%eax
8100249a:	89 50 04             	mov    %edx,0x4(%eax)
8100249d:	eb 1f                	jmp    810024be <getopt_internal+0xaa7>
8100249f:	8b 45 20             	mov    0x20(%ebp),%eax
810024a2:	8b 40 10             	mov    0x10(%eax),%eax
810024a5:	83 f8 01             	cmp    $0x1,%eax
810024a8:	75 14                	jne    810024be <getopt_internal+0xaa7>
810024aa:	8b 45 20             	mov    0x20(%ebp),%eax
810024ad:	8b 40 04             	mov    0x4(%eax),%eax
810024b0:	8d 50 01             	lea    0x1(%eax),%edx
810024b3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810024b6:	01 c2                	add    %eax,%edx
810024b8:	8b 45 20             	mov    0x20(%ebp),%eax
810024bb:	89 50 04             	mov    %edx,0x4(%eax)
810024be:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810024c2:	78 5d                	js     81002521 <getopt_internal+0xb0a>
810024c4:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
810024c8:	74 08                	je     810024d2 <getopt_internal+0xabb>
810024ca:	8b 45 18             	mov    0x18(%ebp),%eax
810024cd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810024d0:	89 10                	mov    %edx,(%eax)
810024d2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810024d5:	c1 e0 04             	shl    $0x4,%eax
810024d8:	89 c2                	mov    %eax,%edx
810024da:	8b 45 14             	mov    0x14(%ebp),%eax
810024dd:	01 d0                	add    %edx,%eax
810024df:	8b 40 08             	mov    0x8(%eax),%eax
810024e2:	85 c0                	test   %eax,%eax
810024e4:	74 29                	je     8100250f <getopt_internal+0xaf8>
810024e6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810024e9:	c1 e0 04             	shl    $0x4,%eax
810024ec:	89 c2                	mov    %eax,%edx
810024ee:	8b 45 14             	mov    0x14(%ebp),%eax
810024f1:	01 c2                	add    %eax,%edx
810024f3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810024f6:	c1 e0 04             	shl    $0x4,%eax
810024f9:	89 c1                	mov    %eax,%ecx
810024fb:	8b 45 14             	mov    0x14(%ebp),%eax
810024fe:	01 c8                	add    %ecx,%eax
81002500:	8b 40 08             	mov    0x8(%eax),%eax
81002503:	8b 52 0c             	mov    0xc(%edx),%edx
81002506:	89 10                	mov    %edx,(%eax)
81002508:	b8 00 00 00 00       	mov    $0x0,%eax
8100250d:	eb 18                	jmp    81002527 <getopt_internal+0xb10>
8100250f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002512:	c1 e0 04             	shl    $0x4,%eax
81002515:	89 c2                	mov    %eax,%edx
81002517:	8b 45 14             	mov    0x14(%ebp),%eax
8100251a:	01 d0                	add    %edx,%eax
8100251c:	8b 40 0c             	mov    0xc(%eax),%eax
8100251f:	eb 06                	jmp    81002527 <getopt_internal+0xb10>
81002521:	8b 45 20             	mov    0x20(%ebp),%eax
81002524:	8b 40 0c             	mov    0xc(%eax),%eax
81002527:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100252a:	c9                   	leave  
8100252b:	c3                   	ret    

8100252c <getopt>:
8100252c:	55                   	push   %ebp
8100252d:	89 e5                	mov    %esp,%ebp
8100252f:	83 ec 28             	sub    $0x28,%esp
81002532:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002535:	50                   	push   %eax
81002536:	e8 31 f4 ff ff       	call   8100196c <read_globals>
8100253b:	83 c4 04             	add    $0x4,%esp
8100253e:	83 ec 04             	sub    $0x4,%esp
81002541:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002544:	50                   	push   %eax
81002545:	6a 00                	push   $0x0
81002547:	6a 00                	push   $0x0
81002549:	6a 00                	push   $0x0
8100254b:	ff 75 10             	pushl  0x10(%ebp)
8100254e:	ff 75 0c             	pushl  0xc(%ebp)
81002551:	ff 75 08             	pushl  0x8(%ebp)
81002554:	e8 be f4 ff ff       	call   81001a17 <getopt_internal>
81002559:	83 c4 20             	add    $0x20,%esp
8100255c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100255f:	83 ec 0c             	sub    $0xc,%esp
81002562:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002565:	50                   	push   %eax
81002566:	e8 5a f4 ff ff       	call   810019c5 <write_globals>
8100256b:	83 c4 10             	add    $0x10,%esp
8100256e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002571:	c9                   	leave  
81002572:	c3                   	ret    

81002573 <getopt_long>:
81002573:	55                   	push   %ebp
81002574:	89 e5                	mov    %esp,%ebp
81002576:	83 ec 28             	sub    $0x28,%esp
81002579:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100257c:	50                   	push   %eax
8100257d:	e8 ea f3 ff ff       	call   8100196c <read_globals>
81002582:	83 c4 04             	add    $0x4,%esp
81002585:	83 ec 04             	sub    $0x4,%esp
81002588:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100258b:	50                   	push   %eax
8100258c:	6a 00                	push   $0x0
8100258e:	ff 75 18             	pushl  0x18(%ebp)
81002591:	ff 75 14             	pushl  0x14(%ebp)
81002594:	ff 75 10             	pushl  0x10(%ebp)
81002597:	ff 75 0c             	pushl  0xc(%ebp)
8100259a:	ff 75 08             	pushl  0x8(%ebp)
8100259d:	e8 75 f4 ff ff       	call   81001a17 <getopt_internal>
810025a2:	83 c4 20             	add    $0x20,%esp
810025a5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810025a8:	83 ec 0c             	sub    $0xc,%esp
810025ab:	8d 45 d8             	lea    -0x28(%ebp),%eax
810025ae:	50                   	push   %eax
810025af:	e8 11 f4 ff ff       	call   810019c5 <write_globals>
810025b4:	83 c4 10             	add    $0x10,%esp
810025b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810025ba:	c9                   	leave  
810025bb:	c3                   	ret    

810025bc <getopt_long_only>:
810025bc:	55                   	push   %ebp
810025bd:	89 e5                	mov    %esp,%ebp
810025bf:	83 ec 28             	sub    $0x28,%esp
810025c2:	8d 45 d8             	lea    -0x28(%ebp),%eax
810025c5:	50                   	push   %eax
810025c6:	e8 a1 f3 ff ff       	call   8100196c <read_globals>
810025cb:	83 c4 04             	add    $0x4,%esp
810025ce:	83 ec 04             	sub    $0x4,%esp
810025d1:	8d 45 d8             	lea    -0x28(%ebp),%eax
810025d4:	50                   	push   %eax
810025d5:	6a 01                	push   $0x1
810025d7:	ff 75 18             	pushl  0x18(%ebp)
810025da:	ff 75 14             	pushl  0x14(%ebp)
810025dd:	ff 75 10             	pushl  0x10(%ebp)
810025e0:	ff 75 0c             	pushl  0xc(%ebp)
810025e3:	ff 75 08             	pushl  0x8(%ebp)
810025e6:	e8 2c f4 ff ff       	call   81001a17 <getopt_internal>
810025eb:	83 c4 20             	add    $0x20,%esp
810025ee:	89 45 f4             	mov    %eax,-0xc(%ebp)
810025f1:	83 ec 0c             	sub    $0xc,%esp
810025f4:	8d 45 d8             	lea    -0x28(%ebp),%eax
810025f7:	50                   	push   %eax
810025f8:	e8 c8 f3 ff ff       	call   810019c5 <write_globals>
810025fd:	83 c4 10             	add    $0x10,%esp
81002600:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002603:	c9                   	leave  
81002604:	c3                   	ret    

81002605 <__getopt_r>:
81002605:	55                   	push   %ebp
81002606:	89 e5                	mov    %esp,%ebp
81002608:	83 ec 08             	sub    $0x8,%esp
8100260b:	83 ec 04             	sub    $0x4,%esp
8100260e:	ff 75 14             	pushl  0x14(%ebp)
81002611:	6a 00                	push   $0x0
81002613:	6a 00                	push   $0x0
81002615:	6a 00                	push   $0x0
81002617:	ff 75 10             	pushl  0x10(%ebp)
8100261a:	ff 75 0c             	pushl  0xc(%ebp)
8100261d:	ff 75 08             	pushl  0x8(%ebp)
81002620:	e8 f2 f3 ff ff       	call   81001a17 <getopt_internal>
81002625:	83 c4 20             	add    $0x20,%esp
81002628:	c9                   	leave  
81002629:	c3                   	ret    

8100262a <__getopt_long_r>:
8100262a:	55                   	push   %ebp
8100262b:	89 e5                	mov    %esp,%ebp
8100262d:	83 ec 08             	sub    $0x8,%esp
81002630:	83 ec 04             	sub    $0x4,%esp
81002633:	ff 75 1c             	pushl  0x1c(%ebp)
81002636:	6a 00                	push   $0x0
81002638:	ff 75 18             	pushl  0x18(%ebp)
8100263b:	ff 75 14             	pushl  0x14(%ebp)
8100263e:	ff 75 10             	pushl  0x10(%ebp)
81002641:	ff 75 0c             	pushl  0xc(%ebp)
81002644:	ff 75 08             	pushl  0x8(%ebp)
81002647:	e8 cb f3 ff ff       	call   81001a17 <getopt_internal>
8100264c:	83 c4 20             	add    $0x20,%esp
8100264f:	c9                   	leave  
81002650:	c3                   	ret    

81002651 <__getopt_long_only_r>:
81002651:	55                   	push   %ebp
81002652:	89 e5                	mov    %esp,%ebp
81002654:	83 ec 08             	sub    $0x8,%esp
81002657:	83 ec 04             	sub    $0x4,%esp
8100265a:	ff 75 1c             	pushl  0x1c(%ebp)
8100265d:	6a 01                	push   $0x1
8100265f:	ff 75 18             	pushl  0x18(%ebp)
81002662:	ff 75 14             	pushl  0x14(%ebp)
81002665:	ff 75 10             	pushl  0x10(%ebp)
81002668:	ff 75 0c             	pushl  0xc(%ebp)
8100266b:	ff 75 08             	pushl  0x8(%ebp)
8100266e:	e8 a4 f3 ff ff       	call   81001a17 <getopt_internal>
81002673:	83 c4 20             	add    $0x20,%esp
81002676:	c9                   	leave  
81002677:	c3                   	ret    

81002678 <malloc_extend_top>:
81002678:	55                   	push   %ebp
81002679:	89 e5                	mov    %esp,%ebp
8100267b:	83 ec 38             	sub    $0x38,%esp
8100267e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002685:	b8 40 73 00 81       	mov    $0x81007340,%eax
8100268a:	8b 40 08             	mov    0x8(%eax),%eax
8100268d:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002690:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002693:	8b 40 04             	mov    0x4(%eax),%eax
81002696:	83 e0 fc             	and    $0xfffffffc,%eax
81002699:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100269c:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100269f:	8b 45 dc             	mov    -0x24(%ebp),%eax
810026a2:	01 d0                	add    %edx,%eax
810026a4:	89 45 d8             	mov    %eax,-0x28(%ebp)
810026a7:	8b 15 20 7d 00 81    	mov    0x81007d20,%edx
810026ad:	8b 45 0c             	mov    0xc(%ebp),%eax
810026b0:	01 d0                	add    %edx,%eax
810026b2:	83 c0 10             	add    $0x10,%eax
810026b5:	89 45 e8             	mov    %eax,-0x18(%ebp)
810026b8:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
810026bf:	a1 4c 77 00 81       	mov    0x8100774c,%eax
810026c4:	83 f8 ff             	cmp    $0xffffffff,%eax
810026c7:	74 15                	je     810026de <malloc_extend_top+0x66>
810026c9:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810026cc:	8b 45 e8             	mov    -0x18(%ebp),%eax
810026cf:	01 d0                	add    %edx,%eax
810026d1:	8d 50 ff             	lea    -0x1(%eax),%edx
810026d4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810026d7:	f7 d8                	neg    %eax
810026d9:	21 d0                	and    %edx,%eax
810026db:	89 45 e8             	mov    %eax,-0x18(%ebp)
810026de:	8b 45 e8             	mov    -0x18(%ebp),%eax
810026e1:	83 ec 08             	sub    $0x8,%esp
810026e4:	50                   	push   %eax
810026e5:	ff 75 08             	pushl  0x8(%ebp)
810026e8:	e8 d8 1a 00 00       	call   810041c5 <_sbrk_r>
810026ed:	83 c4 10             	add    $0x10,%esp
810026f0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810026f3:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810026f7:	0f 84 0b 02 00 00    	je     81002908 <malloc_extend_top+0x290>
810026fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002700:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002703:	73 0e                	jae    81002713 <malloc_extend_top+0x9b>
81002705:	b8 40 73 00 81       	mov    $0x81007340,%eax
8100270a:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100270d:	0f 85 f5 01 00 00    	jne    81002908 <malloc_extend_top+0x290>
81002713:	a1 40 7d 00 81       	mov    0x81007d40,%eax
81002718:	89 c2                	mov    %eax,%edx
8100271a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100271d:	01 d0                	add    %edx,%eax
8100271f:	a3 40 7d 00 81       	mov    %eax,0x81007d40
81002724:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002727:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100272a:	75 30                	jne    8100275c <malloc_extend_top+0xe4>
8100272c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100272f:	8d 50 ff             	lea    -0x1(%eax),%edx
81002732:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002735:	21 d0                	and    %edx,%eax
81002737:	85 c0                	test   %eax,%eax
81002739:	75 21                	jne    8100275c <malloc_extend_top+0xe4>
8100273b:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100273e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002741:	01 d0                	add    %edx,%eax
81002743:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002746:	b8 40 73 00 81       	mov    $0x81007340,%eax
8100274b:	8b 40 08             	mov    0x8(%eax),%eax
8100274e:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002751:	83 ca 01             	or     $0x1,%edx
81002754:	89 50 04             	mov    %edx,0x4(%eax)
81002757:	e9 76 01 00 00       	jmp    810028d2 <malloc_extend_top+0x25a>
8100275c:	a1 4c 77 00 81       	mov    0x8100774c,%eax
81002761:	83 f8 ff             	cmp    $0xffffffff,%eax
81002764:	75 0a                	jne    81002770 <malloc_extend_top+0xf8>
81002766:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002769:	a3 4c 77 00 81       	mov    %eax,0x8100774c
8100276e:	eb 13                	jmp    81002783 <malloc_extend_top+0x10b>
81002770:	8b 15 40 7d 00 81    	mov    0x81007d40,%edx
81002776:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002779:	2b 45 d8             	sub    -0x28(%ebp),%eax
8100277c:	01 d0                	add    %edx,%eax
8100277e:	a3 40 7d 00 81       	mov    %eax,0x81007d40
81002783:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002786:	83 c0 08             	add    $0x8,%eax
81002789:	83 e0 07             	and    $0x7,%eax
8100278c:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100278f:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81002793:	74 13                	je     810027a8 <malloc_extend_top+0x130>
81002795:	b8 08 00 00 00       	mov    $0x8,%eax
8100279a:	2b 45 cc             	sub    -0x34(%ebp),%eax
8100279d:	89 45 f0             	mov    %eax,-0x10(%ebp)
810027a0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810027a3:	01 45 f4             	add    %eax,-0xc(%ebp)
810027a6:	eb 07                	jmp    810027af <malloc_extend_top+0x137>
810027a8:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810027af:	8b 55 f4             	mov    -0xc(%ebp),%edx
810027b2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810027b5:	01 d0                	add    %edx,%eax
810027b7:	89 c2                	mov    %eax,%edx
810027b9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810027bc:	83 e8 01             	sub    $0x1,%eax
810027bf:	21 c2                	and    %eax,%edx
810027c1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810027c4:	29 d0                	sub    %edx,%eax
810027c6:	01 45 f0             	add    %eax,-0x10(%ebp)
810027c9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810027cc:	83 e8 01             	sub    $0x1,%eax
810027cf:	21 45 f0             	and    %eax,-0x10(%ebp)
810027d2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810027d5:	83 ec 08             	sub    $0x8,%esp
810027d8:	50                   	push   %eax
810027d9:	ff 75 08             	pushl  0x8(%ebp)
810027dc:	e8 e4 19 00 00       	call   810041c5 <_sbrk_r>
810027e1:	83 c4 10             	add    $0x10,%esp
810027e4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810027e7:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810027eb:	75 28                	jne    81002815 <malloc_extend_top+0x19d>
810027ed:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810027f4:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810027fb:	8b 55 f4             	mov    -0xc(%ebp),%edx
810027fe:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002801:	01 d0                	add    %edx,%eax
81002803:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002806:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
8100280a:	74 09                	je     81002815 <malloc_extend_top+0x19d>
8100280c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100280f:	83 e8 08             	sub    $0x8,%eax
81002812:	01 45 ec             	add    %eax,-0x14(%ebp)
81002815:	a1 40 7d 00 81       	mov    0x81007d40,%eax
8100281a:	89 c2                	mov    %eax,%edx
8100281c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100281f:	01 d0                	add    %edx,%eax
81002821:	a3 40 7d 00 81       	mov    %eax,0x81007d40
81002826:	ba 40 73 00 81       	mov    $0x81007340,%edx
8100282b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100282e:	89 42 08             	mov    %eax,0x8(%edx)
81002831:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002834:	2b 45 f4             	sub    -0xc(%ebp),%eax
81002837:	89 c2                	mov    %eax,%edx
81002839:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100283c:	01 d0                	add    %edx,%eax
8100283e:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002841:	b8 40 73 00 81       	mov    $0x81007340,%eax
81002846:	8b 40 08             	mov    0x8(%eax),%eax
81002849:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100284c:	83 ca 01             	or     $0x1,%edx
8100284f:	89 50 04             	mov    %edx,0x4(%eax)
81002852:	b8 40 73 00 81       	mov    $0x81007340,%eax
81002857:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100285a:	74 76                	je     810028d2 <malloc_extend_top+0x25a>
8100285c:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81002860:	77 14                	ja     81002876 <malloc_extend_top+0x1fe>
81002862:	b8 40 73 00 81       	mov    $0x81007340,%eax
81002867:	8b 40 08             	mov    0x8(%eax),%eax
8100286a:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81002871:	e9 93 00 00 00       	jmp    81002909 <malloc_extend_top+0x291>
81002876:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002879:	83 e8 0c             	sub    $0xc,%eax
8100287c:	83 e0 f8             	and    $0xfffffff8,%eax
8100287f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002882:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002885:	8b 40 04             	mov    0x4(%eax),%eax
81002888:	83 e0 01             	and    $0x1,%eax
8100288b:	0b 45 dc             	or     -0x24(%ebp),%eax
8100288e:	89 c2                	mov    %eax,%edx
81002890:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002893:	89 50 04             	mov    %edx,0x4(%eax)
81002896:	8b 55 e0             	mov    -0x20(%ebp),%edx
81002899:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100289c:	01 d0                	add    %edx,%eax
8100289e:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810028a5:	8b 45 dc             	mov    -0x24(%ebp),%eax
810028a8:	8d 50 04             	lea    0x4(%eax),%edx
810028ab:	8b 45 e0             	mov    -0x20(%ebp),%eax
810028ae:	01 d0                	add    %edx,%eax
810028b0:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810028b7:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810028bb:	76 15                	jbe    810028d2 <malloc_extend_top+0x25a>
810028bd:	8b 45 e0             	mov    -0x20(%ebp),%eax
810028c0:	83 c0 08             	add    $0x8,%eax
810028c3:	83 ec 08             	sub    $0x8,%esp
810028c6:	50                   	push   %eax
810028c7:	ff 75 08             	pushl  0x8(%ebp)
810028ca:	e8 cf e8 ff ff       	call   8100119e <_free_r>
810028cf:	83 c4 10             	add    $0x10,%esp
810028d2:	a1 40 7d 00 81       	mov    0x81007d40,%eax
810028d7:	89 c2                	mov    %eax,%edx
810028d9:	a1 24 7d 00 81       	mov    0x81007d24,%eax
810028de:	39 c2                	cmp    %eax,%edx
810028e0:	76 0a                	jbe    810028ec <malloc_extend_top+0x274>
810028e2:	a1 40 7d 00 81       	mov    0x81007d40,%eax
810028e7:	a3 24 7d 00 81       	mov    %eax,0x81007d24
810028ec:	a1 40 7d 00 81       	mov    0x81007d40,%eax
810028f1:	89 c2                	mov    %eax,%edx
810028f3:	a1 28 7d 00 81       	mov    0x81007d28,%eax
810028f8:	39 c2                	cmp    %eax,%edx
810028fa:	76 0d                	jbe    81002909 <malloc_extend_top+0x291>
810028fc:	a1 40 7d 00 81       	mov    0x81007d40,%eax
81002901:	a3 28 7d 00 81       	mov    %eax,0x81007d28
81002906:	eb 01                	jmp    81002909 <malloc_extend_top+0x291>
81002908:	90                   	nop
81002909:	c9                   	leave  
8100290a:	c3                   	ret    

8100290b <_malloc_r>:
8100290b:	55                   	push   %ebp
8100290c:	89 e5                	mov    %esp,%ebp
8100290e:	53                   	push   %ebx
8100290f:	83 ec 44             	sub    $0x44,%esp
81002912:	8b 45 0c             	mov    0xc(%ebp),%eax
81002915:	83 c0 0b             	add    $0xb,%eax
81002918:	83 f8 16             	cmp    $0x16,%eax
8100291b:	76 0b                	jbe    81002928 <_malloc_r+0x1d>
8100291d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002920:	83 c0 0b             	add    $0xb,%eax
81002923:	83 e0 f8             	and    $0xfffffff8,%eax
81002926:	eb 05                	jmp    8100292d <_malloc_r+0x22>
81002928:	b8 10 00 00 00       	mov    $0x10,%eax
8100292d:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002930:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002933:	85 c0                	test   %eax,%eax
81002935:	78 08                	js     8100293f <_malloc_r+0x34>
81002937:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100293a:	3b 45 0c             	cmp    0xc(%ebp),%eax
8100293d:	73 13                	jae    81002952 <_malloc_r+0x47>
8100293f:	8b 45 08             	mov    0x8(%ebp),%eax
81002942:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002948:	b8 00 00 00 00       	mov    $0x0,%eax
8100294d:	e9 d6 07 00 00       	jmp    81003128 <_malloc_r+0x81d>
81002952:	83 ec 0c             	sub    $0xc,%esp
81002955:	ff 75 08             	pushl  0x8(%ebp)
81002958:	e8 8b 09 00 00       	call   810032e8 <__malloc_lock>
8100295d:	83 c4 10             	add    $0x10,%esp
81002960:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
81002967:	0f 87 b0 00 00 00    	ja     81002a1d <_malloc_r+0x112>
8100296d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002970:	c1 e8 03             	shr    $0x3,%eax
81002973:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002976:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002979:	83 c0 01             	add    $0x1,%eax
8100297c:	01 c0                	add    %eax,%eax
8100297e:	c1 e0 02             	shl    $0x2,%eax
81002981:	05 40 73 00 81       	add    $0x81007340,%eax
81002986:	83 e8 08             	sub    $0x8,%eax
81002989:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100298c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100298f:	8b 40 0c             	mov    0xc(%eax),%eax
81002992:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002995:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002998:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100299b:	75 0d                	jne    810029aa <_malloc_r+0x9f>
8100299d:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
810029a1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810029a4:	8b 40 0c             	mov    0xc(%eax),%eax
810029a7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810029aa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029ad:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
810029b0:	74 62                	je     81002a14 <_malloc_r+0x109>
810029b2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029b5:	8b 40 04             	mov    0x4(%eax),%eax
810029b8:	83 e0 fc             	and    $0xfffffffc,%eax
810029bb:	89 45 cc             	mov    %eax,-0x34(%ebp)
810029be:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029c1:	8b 40 0c             	mov    0xc(%eax),%eax
810029c4:	89 45 d8             	mov    %eax,-0x28(%ebp)
810029c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029ca:	8b 40 08             	mov    0x8(%eax),%eax
810029cd:	89 45 dc             	mov    %eax,-0x24(%ebp)
810029d0:	8b 45 dc             	mov    -0x24(%ebp),%eax
810029d3:	8b 55 d8             	mov    -0x28(%ebp),%edx
810029d6:	89 50 0c             	mov    %edx,0xc(%eax)
810029d9:	8b 45 d8             	mov    -0x28(%ebp),%eax
810029dc:	8b 55 dc             	mov    -0x24(%ebp),%edx
810029df:	89 50 08             	mov    %edx,0x8(%eax)
810029e2:	8b 55 f4             	mov    -0xc(%ebp),%edx
810029e5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810029e8:	01 d0                	add    %edx,%eax
810029ea:	8b 50 04             	mov    0x4(%eax),%edx
810029ed:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810029f0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810029f3:	01 c8                	add    %ecx,%eax
810029f5:	83 ca 01             	or     $0x1,%edx
810029f8:	89 50 04             	mov    %edx,0x4(%eax)
810029fb:	83 ec 0c             	sub    $0xc,%esp
810029fe:	ff 75 08             	pushl  0x8(%ebp)
81002a01:	e8 e8 08 00 00       	call   810032ee <__malloc_unlock>
81002a06:	83 c4 10             	add    $0x10,%esp
81002a09:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a0c:	83 c0 08             	add    $0x8,%eax
81002a0f:	e9 14 07 00 00       	jmp    81003128 <_malloc_r+0x81d>
81002a14:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
81002a18:	e9 46 01 00 00       	jmp    81002b63 <_malloc_r+0x258>
81002a1d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a20:	c1 e8 09             	shr    $0x9,%eax
81002a23:	85 c0                	test   %eax,%eax
81002a25:	75 08                	jne    81002a2f <_malloc_r+0x124>
81002a27:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a2a:	c1 e8 03             	shr    $0x3,%eax
81002a2d:	eb 77                	jmp    81002aa6 <_malloc_r+0x19b>
81002a2f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a32:	c1 e8 09             	shr    $0x9,%eax
81002a35:	83 f8 04             	cmp    $0x4,%eax
81002a38:	77 0b                	ja     81002a45 <_malloc_r+0x13a>
81002a3a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a3d:	c1 e8 06             	shr    $0x6,%eax
81002a40:	83 c0 38             	add    $0x38,%eax
81002a43:	eb 61                	jmp    81002aa6 <_malloc_r+0x19b>
81002a45:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a48:	c1 e8 09             	shr    $0x9,%eax
81002a4b:	83 f8 14             	cmp    $0x14,%eax
81002a4e:	77 0b                	ja     81002a5b <_malloc_r+0x150>
81002a50:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a53:	c1 e8 09             	shr    $0x9,%eax
81002a56:	83 c0 5b             	add    $0x5b,%eax
81002a59:	eb 4b                	jmp    81002aa6 <_malloc_r+0x19b>
81002a5b:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a5e:	c1 e8 09             	shr    $0x9,%eax
81002a61:	83 f8 54             	cmp    $0x54,%eax
81002a64:	77 0b                	ja     81002a71 <_malloc_r+0x166>
81002a66:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a69:	c1 e8 0c             	shr    $0xc,%eax
81002a6c:	83 c0 6e             	add    $0x6e,%eax
81002a6f:	eb 35                	jmp    81002aa6 <_malloc_r+0x19b>
81002a71:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a74:	c1 e8 09             	shr    $0x9,%eax
81002a77:	3d 54 01 00 00       	cmp    $0x154,%eax
81002a7c:	77 0b                	ja     81002a89 <_malloc_r+0x17e>
81002a7e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a81:	c1 e8 0f             	shr    $0xf,%eax
81002a84:	83 c0 77             	add    $0x77,%eax
81002a87:	eb 1d                	jmp    81002aa6 <_malloc_r+0x19b>
81002a89:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a8c:	c1 e8 09             	shr    $0x9,%eax
81002a8f:	3d 54 05 00 00       	cmp    $0x554,%eax
81002a94:	77 0b                	ja     81002aa1 <_malloc_r+0x196>
81002a96:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a99:	c1 e8 12             	shr    $0x12,%eax
81002a9c:	83 c0 7c             	add    $0x7c,%eax
81002a9f:	eb 05                	jmp    81002aa6 <_malloc_r+0x19b>
81002aa1:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002aa6:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002aa9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002aac:	83 c0 01             	add    $0x1,%eax
81002aaf:	01 c0                	add    %eax,%eax
81002ab1:	c1 e0 02             	shl    $0x2,%eax
81002ab4:	05 40 73 00 81       	add    $0x81007340,%eax
81002ab9:	83 e8 08             	sub    $0x8,%eax
81002abc:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002abf:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002ac2:	8b 40 0c             	mov    0xc(%eax),%eax
81002ac5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002ac8:	e9 86 00 00 00       	jmp    81002b53 <_malloc_r+0x248>
81002acd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ad0:	8b 40 04             	mov    0x4(%eax),%eax
81002ad3:	83 e0 fc             	and    $0xfffffffc,%eax
81002ad6:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002ad9:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002adc:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002adf:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002ae2:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002ae6:	7e 06                	jle    81002aee <_malloc_r+0x1e3>
81002ae8:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81002aec:	eb 71                	jmp    81002b5f <_malloc_r+0x254>
81002aee:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002af2:	78 56                	js     81002b4a <_malloc_r+0x23f>
81002af4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002af7:	8b 40 0c             	mov    0xc(%eax),%eax
81002afa:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002afd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b00:	8b 40 08             	mov    0x8(%eax),%eax
81002b03:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002b06:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002b09:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002b0c:	89 50 0c             	mov    %edx,0xc(%eax)
81002b0f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b12:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002b15:	89 50 08             	mov    %edx,0x8(%eax)
81002b18:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002b1b:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002b1e:	01 d0                	add    %edx,%eax
81002b20:	8b 50 04             	mov    0x4(%eax),%edx
81002b23:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002b26:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002b29:	01 c8                	add    %ecx,%eax
81002b2b:	83 ca 01             	or     $0x1,%edx
81002b2e:	89 50 04             	mov    %edx,0x4(%eax)
81002b31:	83 ec 0c             	sub    $0xc,%esp
81002b34:	ff 75 08             	pushl  0x8(%ebp)
81002b37:	e8 b2 07 00 00       	call   810032ee <__malloc_unlock>
81002b3c:	83 c4 10             	add    $0x10,%esp
81002b3f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b42:	83 c0 08             	add    $0x8,%eax
81002b45:	e9 de 05 00 00       	jmp    81003128 <_malloc_r+0x81d>
81002b4a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b4d:	8b 40 0c             	mov    0xc(%eax),%eax
81002b50:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b53:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b56:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002b59:	0f 85 6e ff ff ff    	jne    81002acd <_malloc_r+0x1c2>
81002b5f:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002b63:	b8 48 73 00 81       	mov    $0x81007348,%eax
81002b68:	8b 40 08             	mov    0x8(%eax),%eax
81002b6b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b6e:	b8 48 73 00 81       	mov    $0x81007348,%eax
81002b73:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81002b76:	0f 84 9c 02 00 00    	je     81002e18 <_malloc_r+0x50d>
81002b7c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b7f:	8b 40 04             	mov    0x4(%eax),%eax
81002b82:	83 e0 fc             	and    $0xfffffffc,%eax
81002b85:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002b88:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002b8b:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002b8e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002b91:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002b95:	7e 7a                	jle    81002c11 <_malloc_r+0x306>
81002b97:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002b9a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002b9d:	01 d0                	add    %edx,%eax
81002b9f:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002ba2:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002ba5:	83 c8 01             	or     $0x1,%eax
81002ba8:	89 c2                	mov    %eax,%edx
81002baa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002bad:	89 50 04             	mov    %edx,0x4(%eax)
81002bb0:	b8 48 73 00 81       	mov    $0x81007348,%eax
81002bb5:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81002bb8:	89 50 0c             	mov    %edx,0xc(%eax)
81002bbb:	ba 48 73 00 81       	mov    $0x81007348,%edx
81002bc0:	8b 40 0c             	mov    0xc(%eax),%eax
81002bc3:	89 42 08             	mov    %eax,0x8(%edx)
81002bc6:	ba 48 73 00 81       	mov    $0x81007348,%edx
81002bcb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002bce:	89 50 0c             	mov    %edx,0xc(%eax)
81002bd1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002bd4:	8b 50 0c             	mov    0xc(%eax),%edx
81002bd7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002bda:	89 50 08             	mov    %edx,0x8(%eax)
81002bdd:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002be0:	83 c8 01             	or     $0x1,%eax
81002be3:	89 c2                	mov    %eax,%edx
81002be5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002be8:	89 50 04             	mov    %edx,0x4(%eax)
81002beb:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002bee:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002bf1:	01 c2                	add    %eax,%edx
81002bf3:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002bf6:	89 02                	mov    %eax,(%edx)
81002bf8:	83 ec 0c             	sub    $0xc,%esp
81002bfb:	ff 75 08             	pushl  0x8(%ebp)
81002bfe:	e8 eb 06 00 00       	call   810032ee <__malloc_unlock>
81002c03:	83 c4 10             	add    $0x10,%esp
81002c06:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c09:	83 c0 08             	add    $0x8,%eax
81002c0c:	e9 17 05 00 00       	jmp    81003128 <_malloc_r+0x81d>
81002c11:	b8 48 73 00 81       	mov    $0x81007348,%eax
81002c16:	ba 48 73 00 81       	mov    $0x81007348,%edx
81002c1b:	89 50 0c             	mov    %edx,0xc(%eax)
81002c1e:	ba 48 73 00 81       	mov    $0x81007348,%edx
81002c23:	8b 40 0c             	mov    0xc(%eax),%eax
81002c26:	89 42 08             	mov    %eax,0x8(%edx)
81002c29:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002c2d:	78 32                	js     81002c61 <_malloc_r+0x356>
81002c2f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002c32:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c35:	01 d0                	add    %edx,%eax
81002c37:	8b 50 04             	mov    0x4(%eax),%edx
81002c3a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002c3d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c40:	01 c8                	add    %ecx,%eax
81002c42:	83 ca 01             	or     $0x1,%edx
81002c45:	89 50 04             	mov    %edx,0x4(%eax)
81002c48:	83 ec 0c             	sub    $0xc,%esp
81002c4b:	ff 75 08             	pushl  0x8(%ebp)
81002c4e:	e8 9b 06 00 00       	call   810032ee <__malloc_unlock>
81002c53:	83 c4 10             	add    $0x10,%esp
81002c56:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c59:	83 c0 08             	add    $0x8,%eax
81002c5c:	e9 c7 04 00 00       	jmp    81003128 <_malloc_r+0x81d>
81002c61:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
81002c68:	77 7f                	ja     81002ce9 <_malloc_r+0x3de>
81002c6a:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c6d:	c1 e8 03             	shr    $0x3,%eax
81002c70:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002c73:	b8 40 73 00 81       	mov    $0x81007340,%eax
81002c78:	8b 58 04             	mov    0x4(%eax),%ebx
81002c7b:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002c7e:	8d 50 03             	lea    0x3(%eax),%edx
81002c81:	85 c0                	test   %eax,%eax
81002c83:	0f 48 c2             	cmovs  %edx,%eax
81002c86:	c1 f8 02             	sar    $0x2,%eax
81002c89:	ba 01 00 00 00       	mov    $0x1,%edx
81002c8e:	89 c1                	mov    %eax,%ecx
81002c90:	d3 e2                	shl    %cl,%edx
81002c92:	89 d0                	mov    %edx,%eax
81002c94:	ba 40 73 00 81       	mov    $0x81007340,%edx
81002c99:	09 d8                	or     %ebx,%eax
81002c9b:	89 42 04             	mov    %eax,0x4(%edx)
81002c9e:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002ca1:	83 c0 01             	add    $0x1,%eax
81002ca4:	01 c0                	add    %eax,%eax
81002ca6:	c1 e0 02             	shl    $0x2,%eax
81002ca9:	05 40 73 00 81       	add    $0x81007340,%eax
81002cae:	83 e8 08             	sub    $0x8,%eax
81002cb1:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002cb4:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002cb7:	8b 40 08             	mov    0x8(%eax),%eax
81002cba:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002cbd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cc0:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002cc3:	89 50 0c             	mov    %edx,0xc(%eax)
81002cc6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cc9:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002ccc:	89 50 08             	mov    %edx,0x8(%eax)
81002ccf:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002cd2:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002cd5:	89 50 08             	mov    %edx,0x8(%eax)
81002cd8:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002cdb:	8b 50 08             	mov    0x8(%eax),%edx
81002cde:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002ce1:	89 50 0c             	mov    %edx,0xc(%eax)
81002ce4:	e9 2f 01 00 00       	jmp    81002e18 <_malloc_r+0x50d>
81002ce9:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002cec:	c1 e8 09             	shr    $0x9,%eax
81002cef:	85 c0                	test   %eax,%eax
81002cf1:	75 08                	jne    81002cfb <_malloc_r+0x3f0>
81002cf3:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002cf6:	c1 e8 03             	shr    $0x3,%eax
81002cf9:	eb 77                	jmp    81002d72 <_malloc_r+0x467>
81002cfb:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002cfe:	c1 e8 09             	shr    $0x9,%eax
81002d01:	83 f8 04             	cmp    $0x4,%eax
81002d04:	77 0b                	ja     81002d11 <_malloc_r+0x406>
81002d06:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d09:	c1 e8 06             	shr    $0x6,%eax
81002d0c:	83 c0 38             	add    $0x38,%eax
81002d0f:	eb 61                	jmp    81002d72 <_malloc_r+0x467>
81002d11:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d14:	c1 e8 09             	shr    $0x9,%eax
81002d17:	83 f8 14             	cmp    $0x14,%eax
81002d1a:	77 0b                	ja     81002d27 <_malloc_r+0x41c>
81002d1c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d1f:	c1 e8 09             	shr    $0x9,%eax
81002d22:	83 c0 5b             	add    $0x5b,%eax
81002d25:	eb 4b                	jmp    81002d72 <_malloc_r+0x467>
81002d27:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d2a:	c1 e8 09             	shr    $0x9,%eax
81002d2d:	83 f8 54             	cmp    $0x54,%eax
81002d30:	77 0b                	ja     81002d3d <_malloc_r+0x432>
81002d32:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d35:	c1 e8 0c             	shr    $0xc,%eax
81002d38:	83 c0 6e             	add    $0x6e,%eax
81002d3b:	eb 35                	jmp    81002d72 <_malloc_r+0x467>
81002d3d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d40:	c1 e8 09             	shr    $0x9,%eax
81002d43:	3d 54 01 00 00       	cmp    $0x154,%eax
81002d48:	77 0b                	ja     81002d55 <_malloc_r+0x44a>
81002d4a:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d4d:	c1 e8 0f             	shr    $0xf,%eax
81002d50:	83 c0 77             	add    $0x77,%eax
81002d53:	eb 1d                	jmp    81002d72 <_malloc_r+0x467>
81002d55:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d58:	c1 e8 09             	shr    $0x9,%eax
81002d5b:	3d 54 05 00 00       	cmp    $0x554,%eax
81002d60:	77 0b                	ja     81002d6d <_malloc_r+0x462>
81002d62:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d65:	c1 e8 12             	shr    $0x12,%eax
81002d68:	83 c0 7c             	add    $0x7c,%eax
81002d6b:	eb 05                	jmp    81002d72 <_malloc_r+0x467>
81002d6d:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002d72:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002d75:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002d78:	83 c0 01             	add    $0x1,%eax
81002d7b:	01 c0                	add    %eax,%eax
81002d7d:	c1 e0 02             	shl    $0x2,%eax
81002d80:	05 40 73 00 81       	add    $0x81007340,%eax
81002d85:	83 e8 08             	sub    $0x8,%eax
81002d88:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002d8b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002d8e:	8b 40 08             	mov    0x8(%eax),%eax
81002d91:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002d94:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002d97:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002d9a:	75 36                	jne    81002dd2 <_malloc_r+0x4c7>
81002d9c:	b8 40 73 00 81       	mov    $0x81007340,%eax
81002da1:	8b 58 04             	mov    0x4(%eax),%ebx
81002da4:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002da7:	8d 50 03             	lea    0x3(%eax),%edx
81002daa:	85 c0                	test   %eax,%eax
81002dac:	0f 48 c2             	cmovs  %edx,%eax
81002daf:	c1 f8 02             	sar    $0x2,%eax
81002db2:	ba 01 00 00 00       	mov    $0x1,%edx
81002db7:	89 c1                	mov    %eax,%ecx
81002db9:	d3 e2                	shl    %cl,%edx
81002dbb:	89 d0                	mov    %edx,%eax
81002dbd:	ba 40 73 00 81       	mov    $0x81007340,%edx
81002dc2:	09 d8                	or     %ebx,%eax
81002dc4:	89 42 04             	mov    %eax,0x4(%edx)
81002dc7:	eb 28                	jmp    81002df1 <_malloc_r+0x4e6>
81002dc9:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002dcc:	8b 40 08             	mov    0x8(%eax),%eax
81002dcf:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002dd2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002dd5:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002dd8:	74 0e                	je     81002de8 <_malloc_r+0x4dd>
81002dda:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002ddd:	8b 40 04             	mov    0x4(%eax),%eax
81002de0:	83 e0 fc             	and    $0xfffffffc,%eax
81002de3:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81002de6:	72 e1                	jb     81002dc9 <_malloc_r+0x4be>
81002de8:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002deb:	8b 40 0c             	mov    0xc(%eax),%eax
81002dee:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002df1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002df4:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002df7:	89 50 0c             	mov    %edx,0xc(%eax)
81002dfa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002dfd:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002e00:	89 50 08             	mov    %edx,0x8(%eax)
81002e03:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e06:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002e09:	89 50 08             	mov    %edx,0x8(%eax)
81002e0c:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e0f:	8b 50 08             	mov    0x8(%eax),%edx
81002e12:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e15:	89 50 0c             	mov    %edx,0xc(%eax)
81002e18:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e1b:	8d 50 03             	lea    0x3(%eax),%edx
81002e1e:	85 c0                	test   %eax,%eax
81002e20:	0f 48 c2             	cmovs  %edx,%eax
81002e23:	c1 f8 02             	sar    $0x2,%eax
81002e26:	ba 01 00 00 00       	mov    $0x1,%edx
81002e2b:	89 c1                	mov    %eax,%ecx
81002e2d:	d3 e2                	shl    %cl,%edx
81002e2f:	89 d0                	mov    %edx,%eax
81002e31:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002e34:	b8 40 73 00 81       	mov    $0x81007340,%eax
81002e39:	8b 40 04             	mov    0x4(%eax),%eax
81002e3c:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81002e3f:	0f 87 13 02 00 00    	ja     81003058 <_malloc_r+0x74d>
81002e45:	b8 40 73 00 81       	mov    $0x81007340,%eax
81002e4a:	8b 40 04             	mov    0x4(%eax),%eax
81002e4d:	23 45 e4             	and    -0x1c(%ebp),%eax
81002e50:	85 c0                	test   %eax,%eax
81002e52:	75 27                	jne    81002e7b <_malloc_r+0x570>
81002e54:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e57:	83 e0 fc             	and    $0xfffffffc,%eax
81002e5a:	83 c0 04             	add    $0x4,%eax
81002e5d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002e60:	d1 65 e4             	shll   -0x1c(%ebp)
81002e63:	eb 07                	jmp    81002e6c <_malloc_r+0x561>
81002e65:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81002e69:	d1 65 e4             	shll   -0x1c(%ebp)
81002e6c:	b8 40 73 00 81       	mov    $0x81007340,%eax
81002e71:	8b 40 04             	mov    0x4(%eax),%eax
81002e74:	23 45 e4             	and    -0x1c(%ebp),%eax
81002e77:	85 c0                	test   %eax,%eax
81002e79:	74 ea                	je     81002e65 <_malloc_r+0x55a>
81002e7b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e7e:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002e81:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e84:	83 c0 01             	add    $0x1,%eax
81002e87:	01 c0                	add    %eax,%eax
81002e89:	c1 e0 02             	shl    $0x2,%eax
81002e8c:	05 40 73 00 81       	add    $0x81007340,%eax
81002e91:	83 e8 08             	sub    $0x8,%eax
81002e94:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002e97:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002e9a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002e9d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002ea0:	8b 40 0c             	mov    0xc(%eax),%eax
81002ea3:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002ea6:	e9 22 01 00 00       	jmp    81002fcd <_malloc_r+0x6c2>
81002eab:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002eae:	8b 40 04             	mov    0x4(%eax),%eax
81002eb1:	83 e0 fc             	and    $0xfffffffc,%eax
81002eb4:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002eb7:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002eba:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002ebd:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002ec0:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002ec4:	0f 8e 9e 00 00 00    	jle    81002f68 <_malloc_r+0x65d>
81002eca:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002ecd:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002ed0:	01 d0                	add    %edx,%eax
81002ed2:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002ed5:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002ed8:	83 c8 01             	or     $0x1,%eax
81002edb:	89 c2                	mov    %eax,%edx
81002edd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ee0:	89 50 04             	mov    %edx,0x4(%eax)
81002ee3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ee6:	8b 40 0c             	mov    0xc(%eax),%eax
81002ee9:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002eec:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002eef:	8b 40 08             	mov    0x8(%eax),%eax
81002ef2:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002ef5:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002ef8:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002efb:	89 50 0c             	mov    %edx,0xc(%eax)
81002efe:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002f01:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002f04:	89 50 08             	mov    %edx,0x8(%eax)
81002f07:	b8 48 73 00 81       	mov    $0x81007348,%eax
81002f0c:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81002f0f:	89 50 0c             	mov    %edx,0xc(%eax)
81002f12:	ba 48 73 00 81       	mov    $0x81007348,%edx
81002f17:	8b 40 0c             	mov    0xc(%eax),%eax
81002f1a:	89 42 08             	mov    %eax,0x8(%edx)
81002f1d:	ba 48 73 00 81       	mov    $0x81007348,%edx
81002f22:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002f25:	89 50 0c             	mov    %edx,0xc(%eax)
81002f28:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002f2b:	8b 50 0c             	mov    0xc(%eax),%edx
81002f2e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002f31:	89 50 08             	mov    %edx,0x8(%eax)
81002f34:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002f37:	83 c8 01             	or     $0x1,%eax
81002f3a:	89 c2                	mov    %eax,%edx
81002f3c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002f3f:	89 50 04             	mov    %edx,0x4(%eax)
81002f42:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002f45:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002f48:	01 c2                	add    %eax,%edx
81002f4a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002f4d:	89 02                	mov    %eax,(%edx)
81002f4f:	83 ec 0c             	sub    $0xc,%esp
81002f52:	ff 75 08             	pushl  0x8(%ebp)
81002f55:	e8 94 03 00 00       	call   810032ee <__malloc_unlock>
81002f5a:	83 c4 10             	add    $0x10,%esp
81002f5d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f60:	83 c0 08             	add    $0x8,%eax
81002f63:	e9 c0 01 00 00       	jmp    81003128 <_malloc_r+0x81d>
81002f68:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002f6c:	78 56                	js     81002fc4 <_malloc_r+0x6b9>
81002f6e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002f71:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002f74:	01 d0                	add    %edx,%eax
81002f76:	8b 50 04             	mov    0x4(%eax),%edx
81002f79:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002f7c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002f7f:	01 c8                	add    %ecx,%eax
81002f81:	83 ca 01             	or     $0x1,%edx
81002f84:	89 50 04             	mov    %edx,0x4(%eax)
81002f87:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f8a:	8b 40 0c             	mov    0xc(%eax),%eax
81002f8d:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002f90:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f93:	8b 40 08             	mov    0x8(%eax),%eax
81002f96:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002f99:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f9c:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002f9f:	89 50 0c             	mov    %edx,0xc(%eax)
81002fa2:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002fa5:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002fa8:	89 50 08             	mov    %edx,0x8(%eax)
81002fab:	83 ec 0c             	sub    $0xc,%esp
81002fae:	ff 75 08             	pushl  0x8(%ebp)
81002fb1:	e8 38 03 00 00       	call   810032ee <__malloc_unlock>
81002fb6:	83 c4 10             	add    $0x10,%esp
81002fb9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fbc:	83 c0 08             	add    $0x8,%eax
81002fbf:	e9 64 01 00 00       	jmp    81003128 <_malloc_r+0x81d>
81002fc4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fc7:	8b 40 0c             	mov    0xc(%eax),%eax
81002fca:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002fcd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fd0:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002fd3:	0f 85 d2 fe ff ff    	jne    81002eab <_malloc_r+0x5a0>
81002fd9:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81002fdd:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002fe1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fe4:	83 e0 03             	and    $0x3,%eax
81002fe7:	85 c0                	test   %eax,%eax
81002fe9:	0f 85 ae fe ff ff    	jne    81002e9d <_malloc_r+0x592>
81002fef:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002ff2:	83 e0 03             	and    $0x3,%eax
81002ff5:	85 c0                	test   %eax,%eax
81002ff7:	75 19                	jne    81003012 <_malloc_r+0x707>
81002ff9:	b8 40 73 00 81       	mov    $0x81007340,%eax
81002ffe:	8b 48 04             	mov    0x4(%eax),%ecx
81003001:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003004:	f7 d0                	not    %eax
81003006:	ba 40 73 00 81       	mov    $0x81007340,%edx
8100300b:	21 c8                	and    %ecx,%eax
8100300d:	89 42 04             	mov    %eax,0x4(%edx)
81003010:	eb 13                	jmp    81003025 <_malloc_r+0x71a>
81003012:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
81003016:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
8100301a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100301d:	8b 40 08             	mov    0x8(%eax),%eax
81003020:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81003023:	74 ca                	je     81002fef <_malloc_r+0x6e4>
81003025:	d1 65 e4             	shll   -0x1c(%ebp)
81003028:	b8 40 73 00 81       	mov    $0x81007340,%eax
8100302d:	8b 40 04             	mov    0x4(%eax),%eax
81003030:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003033:	77 23                	ja     81003058 <_malloc_r+0x74d>
81003035:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003039:	74 1d                	je     81003058 <_malloc_r+0x74d>
8100303b:	eb 07                	jmp    81003044 <_malloc_r+0x739>
8100303d:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81003041:	d1 65 e4             	shll   -0x1c(%ebp)
81003044:	b8 40 73 00 81       	mov    $0x81007340,%eax
81003049:	8b 40 04             	mov    0x4(%eax),%eax
8100304c:	23 45 e4             	and    -0x1c(%ebp),%eax
8100304f:	85 c0                	test   %eax,%eax
81003051:	74 ea                	je     8100303d <_malloc_r+0x732>
81003053:	e9 23 fe ff ff       	jmp    81002e7b <_malloc_r+0x570>
81003058:	b8 40 73 00 81       	mov    $0x81007340,%eax
8100305d:	8b 40 08             	mov    0x8(%eax),%eax
81003060:	8b 40 04             	mov    0x4(%eax),%eax
81003063:	83 e0 fc             	and    $0xfffffffc,%eax
81003066:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003069:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100306c:	b8 40 73 00 81       	mov    $0x81007340,%eax
81003071:	8b 40 08             	mov    0x8(%eax),%eax
81003074:	8b 40 04             	mov    0x4(%eax),%eax
81003077:	83 e0 fc             	and    $0xfffffffc,%eax
8100307a:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100307d:	77 06                	ja     81003085 <_malloc_r+0x77a>
8100307f:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003083:	7f 53                	jg     810030d8 <_malloc_r+0x7cd>
81003085:	83 ec 08             	sub    $0x8,%esp
81003088:	ff 75 d0             	pushl  -0x30(%ebp)
8100308b:	ff 75 08             	pushl  0x8(%ebp)
8100308e:	e8 e5 f5 ff ff       	call   81002678 <malloc_extend_top>
81003093:	83 c4 10             	add    $0x10,%esp
81003096:	b8 40 73 00 81       	mov    $0x81007340,%eax
8100309b:	8b 40 08             	mov    0x8(%eax),%eax
8100309e:	8b 40 04             	mov    0x4(%eax),%eax
810030a1:	83 e0 fc             	and    $0xfffffffc,%eax
810030a4:	2b 45 d0             	sub    -0x30(%ebp),%eax
810030a7:	89 45 e8             	mov    %eax,-0x18(%ebp)
810030aa:	b8 40 73 00 81       	mov    $0x81007340,%eax
810030af:	8b 40 08             	mov    0x8(%eax),%eax
810030b2:	8b 40 04             	mov    0x4(%eax),%eax
810030b5:	83 e0 fc             	and    $0xfffffffc,%eax
810030b8:	39 45 d0             	cmp    %eax,-0x30(%ebp)
810030bb:	77 06                	ja     810030c3 <_malloc_r+0x7b8>
810030bd:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810030c1:	7f 15                	jg     810030d8 <_malloc_r+0x7cd>
810030c3:	83 ec 0c             	sub    $0xc,%esp
810030c6:	ff 75 08             	pushl  0x8(%ebp)
810030c9:	e8 20 02 00 00       	call   810032ee <__malloc_unlock>
810030ce:	83 c4 10             	add    $0x10,%esp
810030d1:	b8 00 00 00 00       	mov    $0x0,%eax
810030d6:	eb 50                	jmp    81003128 <_malloc_r+0x81d>
810030d8:	b8 40 73 00 81       	mov    $0x81007340,%eax
810030dd:	8b 40 08             	mov    0x8(%eax),%eax
810030e0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810030e3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810030e6:	83 c8 01             	or     $0x1,%eax
810030e9:	89 c2                	mov    %eax,%edx
810030eb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030ee:	89 50 04             	mov    %edx,0x4(%eax)
810030f1:	ba 40 73 00 81       	mov    $0x81007340,%edx
810030f6:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810030f9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810030fc:	01 c8                	add    %ecx,%eax
810030fe:	89 42 08             	mov    %eax,0x8(%edx)
81003101:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003104:	83 c8 01             	or     $0x1,%eax
81003107:	89 c2                	mov    %eax,%edx
81003109:	b8 40 73 00 81       	mov    $0x81007340,%eax
8100310e:	8b 40 08             	mov    0x8(%eax),%eax
81003111:	89 50 04             	mov    %edx,0x4(%eax)
81003114:	83 ec 0c             	sub    $0xc,%esp
81003117:	ff 75 08             	pushl  0x8(%ebp)
8100311a:	e8 cf 01 00 00       	call   810032ee <__malloc_unlock>
8100311f:	83 c4 10             	add    $0x10,%esp
81003122:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003125:	83 c0 08             	add    $0x8,%eax
81003128:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100312b:	c9                   	leave  
8100312c:	c3                   	ret    
8100312d:	66 90                	xchg   %ax,%ax
8100312f:	90                   	nop

81003130 <memchr>:
81003130:	55                   	push   %ebp
81003131:	89 e5                	mov    %esp,%ebp
81003133:	57                   	push   %edi
81003134:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81003138:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100313b:	8b 7d 08             	mov    0x8(%ebp),%edi
8100313e:	31 d2                	xor    %edx,%edx
81003140:	85 c9                	test   %ecx,%ecx
81003142:	74 79                	je     810031bd <L20>
81003144:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100314a:	74 28                	je     81003174 <L5>
8100314c:	3a 07                	cmp    (%edi),%al
8100314e:	74 6a                	je     810031ba <L15>
81003150:	47                   	inc    %edi
81003151:	49                   	dec    %ecx
81003152:	74 69                	je     810031bd <L20>
81003154:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100315a:	74 18                	je     81003174 <L5>
8100315c:	3a 07                	cmp    (%edi),%al
8100315e:	74 5a                	je     810031ba <L15>
81003160:	47                   	inc    %edi
81003161:	49                   	dec    %ecx
81003162:	74 59                	je     810031bd <L20>
81003164:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100316a:	74 08                	je     81003174 <L5>
8100316c:	3a 07                	cmp    (%edi),%al
8100316e:	74 4a                	je     810031ba <L15>
81003170:	47                   	inc    %edi
81003171:	49                   	dec    %ecx
81003172:	74 49                	je     810031bd <L20>

81003174 <L5>:
81003174:	88 c4                	mov    %al,%ah
81003176:	89 c2                	mov    %eax,%edx
81003178:	c1 e2 10             	shl    $0x10,%edx
8100317b:	09 d0                	or     %edx,%eax
8100317d:	53                   	push   %ebx
8100317e:	66 90                	xchg   %ax,%ax

81003180 <L8>:
81003180:	83 e9 04             	sub    $0x4,%ecx
81003183:	72 1c                	jb     810031a1 <L9>
81003185:	8b 17                	mov    (%edi),%edx
81003187:	83 c7 04             	add    $0x4,%edi
8100318a:	31 c2                	xor    %eax,%edx
8100318c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81003192:	f7 d2                	not    %edx
81003194:	21 d3                	and    %edx,%ebx
81003196:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8100319c:	74 e2                	je     81003180 <L8>
8100319e:	83 ef 04             	sub    $0x4,%edi

810031a1 <L9>:
810031a1:	5b                   	pop    %ebx
810031a2:	31 d2                	xor    %edx,%edx
810031a4:	83 c1 04             	add    $0x4,%ecx
810031a7:	74 14                	je     810031bd <L20>
810031a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

810031b0 <L10>:
810031b0:	3a 07                	cmp    (%edi),%al
810031b2:	74 06                	je     810031ba <L15>
810031b4:	47                   	inc    %edi
810031b5:	49                   	dec    %ecx
810031b6:	75 f8                	jne    810031b0 <L10>
810031b8:	31 ff                	xor    %edi,%edi

810031ba <L15>:
810031ba:	4a                   	dec    %edx
810031bb:	21 fa                	and    %edi,%edx

810031bd <L20>:
810031bd:	89 d0                	mov    %edx,%eax
810031bf:	8d 65 fc             	lea    -0x4(%ebp),%esp
810031c2:	5f                   	pop    %edi
810031c3:	c9                   	leave  
810031c4:	c3                   	ret    

810031c5 <memcmp>:
810031c5:	55                   	push   %ebp
810031c6:	89 e5                	mov    %esp,%ebp
810031c8:	83 ec 10             	sub    $0x10,%esp
810031cb:	53                   	push   %ebx
810031cc:	57                   	push   %edi
810031cd:	56                   	push   %esi
810031ce:	8b 7d 08             	mov    0x8(%ebp),%edi
810031d1:	8b 75 0c             	mov    0xc(%ebp),%esi
810031d4:	8b 4d 10             	mov    0x10(%ebp),%ecx
810031d7:	fc                   	cld    
810031d8:	31 c0                	xor    %eax,%eax
810031da:	85 c9                	test   %ecx,%ecx
810031dc:	74 31                	je     8100320f <L4>
810031de:	89 f8                	mov    %edi,%eax
810031e0:	09 f0                	or     %esi,%eax
810031e2:	a8 03                	test   $0x3,%al
810031e4:	75 1b                	jne    81003201 <BYTECMP>
810031e6:	89 cb                	mov    %ecx,%ebx
810031e8:	c1 e9 02             	shr    $0x2,%ecx
810031eb:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
810031ed:	74 0d                	je     810031fc <L5>
810031ef:	83 ee 04             	sub    $0x4,%esi
810031f2:	83 ef 04             	sub    $0x4,%edi
810031f5:	b9 04 00 00 00       	mov    $0x4,%ecx
810031fa:	eb 05                	jmp    81003201 <BYTECMP>

810031fc <L5>:
810031fc:	83 e3 03             	and    $0x3,%ebx
810031ff:	89 d9                	mov    %ebx,%ecx

81003201 <BYTECMP>:
81003201:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

81003203 <L3>:
81003203:	31 d2                	xor    %edx,%edx
81003205:	8a 56 ff             	mov    -0x1(%esi),%dl
81003208:	31 c0                	xor    %eax,%eax
8100320a:	8a 47 ff             	mov    -0x1(%edi),%al
8100320d:	29 d0                	sub    %edx,%eax

8100320f <L4>:
8100320f:	8d 65 e4             	lea    -0x1c(%ebp),%esp
81003212:	5e                   	pop    %esi
81003213:	5f                   	pop    %edi
81003214:	5b                   	pop    %ebx
81003215:	c9                   	leave  
81003216:	c3                   	ret    
81003217:	90                   	nop

81003218 <memcpy>:
81003218:	55                   	push   %ebp
81003219:	89 e5                	mov    %esp,%ebp
8100321b:	56                   	push   %esi
8100321c:	57                   	push   %edi
8100321d:	53                   	push   %ebx
8100321e:	8b 7d 08             	mov    0x8(%ebp),%edi
81003221:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003224:	8b 75 0c             	mov    0xc(%ebp),%esi
81003227:	fc                   	cld    
81003228:	83 f9 08             	cmp    $0x8,%ecx
8100322b:	76 26                	jbe    81003253 <memcpy+0x3b>
8100322d:	89 fa                	mov    %edi,%edx
8100322f:	89 cb                	mov    %ecx,%ebx
81003231:	83 e2 03             	and    $0x3,%edx
81003234:	74 10                	je     81003246 <memcpy+0x2e>
81003236:	b9 04 00 00 00       	mov    $0x4,%ecx
8100323b:	29 d1                	sub    %edx,%ecx
8100323d:	83 e1 03             	and    $0x3,%ecx
81003240:	29 cb                	sub    %ecx,%ebx
81003242:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003244:	89 d9                	mov    %ebx,%ecx
81003246:	c1 e9 02             	shr    $0x2,%ecx
81003249:	8d 76 00             	lea    0x0(%esi),%esi
8100324c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8100324e:	89 d9                	mov    %ebx,%ecx
81003250:	83 e1 03             	and    $0x3,%ecx
81003253:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003255:	8b 45 08             	mov    0x8(%ebp),%eax
81003258:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100325b:	5b                   	pop    %ebx
8100325c:	5f                   	pop    %edi
8100325d:	5e                   	pop    %esi
8100325e:	c9                   	leave  
8100325f:	c3                   	ret    

81003260 <memset>:
81003260:	55                   	push   %ebp
81003261:	89 e5                	mov    %esp,%ebp
81003263:	57                   	push   %edi
81003264:	8b 7d 08             	mov    0x8(%ebp),%edi
81003267:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
8100326b:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100326e:	fc                   	cld    
8100326f:	83 f9 10             	cmp    $0x10,%ecx
81003272:	76 69                	jbe    810032dd <memset+0x7d>
81003274:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100327a:	74 4c                	je     810032c8 <memset+0x68>
8100327c:	88 07                	mov    %al,(%edi)
8100327e:	47                   	inc    %edi
8100327f:	49                   	dec    %ecx
81003280:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003286:	74 40                	je     810032c8 <memset+0x68>
81003288:	88 07                	mov    %al,(%edi)
8100328a:	47                   	inc    %edi
8100328b:	49                   	dec    %ecx
8100328c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003292:	74 34                	je     810032c8 <memset+0x68>
81003294:	88 07                	mov    %al,(%edi)
81003296:	47                   	inc    %edi
81003297:	49                   	dec    %ecx
81003298:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100329e:	74 28                	je     810032c8 <memset+0x68>
810032a0:	88 07                	mov    %al,(%edi)
810032a2:	47                   	inc    %edi
810032a3:	49                   	dec    %ecx
810032a4:	f7 c7 07 00 00 00    	test   $0x7,%edi
810032aa:	74 1c                	je     810032c8 <memset+0x68>
810032ac:	88 07                	mov    %al,(%edi)
810032ae:	47                   	inc    %edi
810032af:	49                   	dec    %ecx
810032b0:	f7 c7 07 00 00 00    	test   $0x7,%edi
810032b6:	74 10                	je     810032c8 <memset+0x68>
810032b8:	88 07                	mov    %al,(%edi)
810032ba:	47                   	inc    %edi
810032bb:	49                   	dec    %ecx
810032bc:	f7 c7 07 00 00 00    	test   $0x7,%edi
810032c2:	74 04                	je     810032c8 <memset+0x68>
810032c4:	88 07                	mov    %al,(%edi)
810032c6:	47                   	inc    %edi
810032c7:	49                   	dec    %ecx
810032c8:	88 c4                	mov    %al,%ah
810032ca:	89 c2                	mov    %eax,%edx
810032cc:	c1 e2 10             	shl    $0x10,%edx
810032cf:	09 d0                	or     %edx,%eax
810032d1:	89 ca                	mov    %ecx,%edx
810032d3:	c1 e9 02             	shr    $0x2,%ecx
810032d6:	83 e2 03             	and    $0x3,%edx
810032d9:	f3 ab                	rep stos %eax,%es:(%edi)
810032db:	89 d1                	mov    %edx,%ecx
810032dd:	f3 aa                	rep stos %al,%es:(%edi)
810032df:	8b 45 08             	mov    0x8(%ebp),%eax
810032e2:	8d 65 fc             	lea    -0x4(%ebp),%esp
810032e5:	5f                   	pop    %edi
810032e6:	c9                   	leave  
810032e7:	c3                   	ret    

810032e8 <__malloc_lock>:
810032e8:	55                   	push   %ebp
810032e9:	89 e5                	mov    %esp,%ebp
810032eb:	90                   	nop
810032ec:	5d                   	pop    %ebp
810032ed:	c3                   	ret    

810032ee <__malloc_unlock>:
810032ee:	55                   	push   %ebp
810032ef:	89 e5                	mov    %esp,%ebp
810032f1:	90                   	nop
810032f2:	5d                   	pop    %ebp
810032f3:	c3                   	ret    

810032f4 <__sprint_r>:
810032f4:	55                   	push   %ebp
810032f5:	89 e5                	mov    %esp,%ebp
810032f7:	56                   	push   %esi
810032f8:	53                   	push   %ebx
810032f9:	83 ec 10             	sub    $0x10,%esp
810032fc:	8b 5d 10             	mov    0x10(%ebp),%ebx
810032ff:	be 00 00 00 00       	mov    $0x0,%esi
81003304:	8b 43 08             	mov    0x8(%ebx),%eax
81003307:	85 c0                	test   %eax,%eax
81003309:	75 11                	jne    8100331c <__sprint_r+0x28>
8100330b:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81003312:	b8 00 00 00 00       	mov    $0x0,%eax
81003317:	e9 ad 00 00 00       	jmp    810033c9 <__sprint_r+0xd5>
8100331c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100331f:	8b 40 64             	mov    0x64(%eax),%eax
81003322:	25 00 20 00 00       	and    $0x2000,%eax
81003327:	85 c0                	test   %eax,%eax
81003329:	74 7a                	je     810033a5 <__sprint_r+0xb1>
8100332b:	8b 03                	mov    (%ebx),%eax
8100332d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003330:	eb 6a                	jmp    8100339c <__sprint_r+0xa8>
81003332:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003335:	8b 00                	mov    (%eax),%eax
81003337:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100333a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100333d:	8b 40 04             	mov    0x4(%eax),%eax
81003340:	c1 e8 02             	shr    $0x2,%eax
81003343:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003346:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100334d:	eb 33                	jmp    81003382 <__sprint_r+0x8e>
8100334f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003352:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003359:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100335c:	01 d0                	add    %edx,%eax
8100335e:	8b 00                	mov    (%eax),%eax
81003360:	83 ec 04             	sub    $0x4,%esp
81003363:	ff 75 0c             	pushl  0xc(%ebp)
81003366:	50                   	push   %eax
81003367:	ff 75 08             	pushl  0x8(%ebp)
8100336a:	e8 06 1d 00 00       	call   81005075 <_fputwc_r>
8100336f:	83 c4 10             	add    $0x10,%esp
81003372:	83 f8 ff             	cmp    $0xffffffff,%eax
81003375:	75 07                	jne    8100337e <__sprint_r+0x8a>
81003377:	be ff ff ff ff       	mov    $0xffffffff,%esi
8100337c:	eb 3b                	jmp    810033b9 <__sprint_r+0xc5>
8100337e:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003382:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003385:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81003388:	7c c5                	jl     8100334f <__sprint_r+0x5b>
8100338a:	8b 43 08             	mov    0x8(%ebx),%eax
8100338d:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003390:	c1 e2 02             	shl    $0x2,%edx
81003393:	29 d0                	sub    %edx,%eax
81003395:	89 43 08             	mov    %eax,0x8(%ebx)
81003398:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
8100339c:	8b 43 08             	mov    0x8(%ebx),%eax
8100339f:	85 c0                	test   %eax,%eax
810033a1:	75 8f                	jne    81003332 <__sprint_r+0x3e>
810033a3:	eb 14                	jmp    810033b9 <__sprint_r+0xc5>
810033a5:	83 ec 04             	sub    $0x4,%esp
810033a8:	53                   	push   %ebx
810033a9:	ff 75 0c             	pushl  0xc(%ebp)
810033ac:	ff 75 08             	pushl  0x8(%ebp)
810033af:	e8 60 1d 00 00       	call   81005114 <__sfvwrite_r>
810033b4:	83 c4 10             	add    $0x10,%esp
810033b7:	89 c6                	mov    %eax,%esi
810033b9:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810033c0:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810033c7:	89 f0                	mov    %esi,%eax
810033c9:	8d 65 f8             	lea    -0x8(%ebp),%esp
810033cc:	5b                   	pop    %ebx
810033cd:	5e                   	pop    %esi
810033ce:	5d                   	pop    %ebp
810033cf:	c3                   	ret    

810033d0 <__sfputc_r>:
810033d0:	55                   	push   %ebp
810033d1:	89 e5                	mov    %esp,%ebp
810033d3:	83 ec 08             	sub    $0x8,%esp
810033d6:	8b 45 10             	mov    0x10(%ebp),%eax
810033d9:	8b 40 08             	mov    0x8(%eax),%eax
810033dc:	8d 50 ff             	lea    -0x1(%eax),%edx
810033df:	8b 45 10             	mov    0x10(%ebp),%eax
810033e2:	89 50 08             	mov    %edx,0x8(%eax)
810033e5:	8b 45 10             	mov    0x10(%ebp),%eax
810033e8:	8b 40 08             	mov    0x8(%eax),%eax
810033eb:	85 c0                	test   %eax,%eax
810033ed:	79 17                	jns    81003406 <__sfputc_r+0x36>
810033ef:	8b 45 10             	mov    0x10(%ebp),%eax
810033f2:	8b 50 08             	mov    0x8(%eax),%edx
810033f5:	8b 45 10             	mov    0x10(%ebp),%eax
810033f8:	8b 40 18             	mov    0x18(%eax),%eax
810033fb:	39 c2                	cmp    %eax,%edx
810033fd:	7c 21                	jl     81003420 <__sfputc_r+0x50>
810033ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81003402:	3c 0a                	cmp    $0xa,%al
81003404:	74 1a                	je     81003420 <__sfputc_r+0x50>
81003406:	8b 45 10             	mov    0x10(%ebp),%eax
81003409:	8b 00                	mov    (%eax),%eax
8100340b:	8d 48 01             	lea    0x1(%eax),%ecx
8100340e:	8b 55 10             	mov    0x10(%ebp),%edx
81003411:	89 0a                	mov    %ecx,(%edx)
81003413:	8b 55 0c             	mov    0xc(%ebp),%edx
81003416:	88 10                	mov    %dl,(%eax)
81003418:	0f b6 00             	movzbl (%eax),%eax
8100341b:	0f b6 c0             	movzbl %al,%eax
8100341e:	eb 14                	jmp    81003434 <__sfputc_r+0x64>
81003420:	83 ec 04             	sub    $0x4,%esp
81003423:	ff 75 10             	pushl  0x10(%ebp)
81003426:	ff 75 0c             	pushl  0xc(%ebp)
81003429:	ff 75 08             	pushl  0x8(%ebp)
8100342c:	e8 7e 14 00 00       	call   810048af <__swbuf_r>
81003431:	83 c4 10             	add    $0x10,%esp
81003434:	c9                   	leave  
81003435:	c3                   	ret    

81003436 <__sfputs_r>:
81003436:	55                   	push   %ebp
81003437:	89 e5                	mov    %esp,%ebp
81003439:	53                   	push   %ebx
8100343a:	83 ec 14             	sub    $0x14,%esp
8100343d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003440:	8b 40 64             	mov    0x64(%eax),%eax
81003443:	25 00 20 00 00       	and    $0x2000,%eax
81003448:	85 c0                	test   %eax,%eax
8100344a:	74 4c                	je     81003498 <__sfputs_r+0x62>
8100344c:	8b 45 10             	mov    0x10(%ebp),%eax
8100344f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003452:	bb 00 00 00 00       	mov    $0x0,%ebx
81003457:	eb 31                	jmp    8100348a <__sfputs_r+0x54>
81003459:	89 d8                	mov    %ebx,%eax
8100345b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003462:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003465:	01 d0                	add    %edx,%eax
81003467:	8b 00                	mov    (%eax),%eax
81003469:	83 ec 04             	sub    $0x4,%esp
8100346c:	ff 75 0c             	pushl  0xc(%ebp)
8100346f:	50                   	push   %eax
81003470:	ff 75 08             	pushl  0x8(%ebp)
81003473:	e8 fd 1b 00 00       	call   81005075 <_fputwc_r>
81003478:	83 c4 10             	add    $0x10,%esp
8100347b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100347e:	75 07                	jne    81003487 <__sfputs_r+0x51>
81003480:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003485:	eb 52                	jmp    810034d9 <__sfputs_r+0xa3>
81003487:	83 c3 01             	add    $0x1,%ebx
8100348a:	8b 45 14             	mov    0x14(%ebp),%eax
8100348d:	c1 e8 02             	shr    $0x2,%eax
81003490:	89 da                	mov    %ebx,%edx
81003492:	39 d0                	cmp    %edx,%eax
81003494:	77 c3                	ja     81003459 <__sfputs_r+0x23>
81003496:	eb 3c                	jmp    810034d4 <__sfputs_r+0x9e>
81003498:	bb 00 00 00 00       	mov    $0x0,%ebx
8100349d:	eb 2e                	jmp    810034cd <__sfputs_r+0x97>
8100349f:	89 da                	mov    %ebx,%edx
810034a1:	8b 45 10             	mov    0x10(%ebp),%eax
810034a4:	01 d0                	add    %edx,%eax
810034a6:	0f b6 00             	movzbl (%eax),%eax
810034a9:	0f be c0             	movsbl %al,%eax
810034ac:	83 ec 04             	sub    $0x4,%esp
810034af:	ff 75 0c             	pushl  0xc(%ebp)
810034b2:	50                   	push   %eax
810034b3:	ff 75 08             	pushl  0x8(%ebp)
810034b6:	e8 15 ff ff ff       	call   810033d0 <__sfputc_r>
810034bb:	83 c4 10             	add    $0x10,%esp
810034be:	83 f8 ff             	cmp    $0xffffffff,%eax
810034c1:	75 07                	jne    810034ca <__sfputs_r+0x94>
810034c3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810034c8:	eb 0f                	jmp    810034d9 <__sfputs_r+0xa3>
810034ca:	83 c3 01             	add    $0x1,%ebx
810034cd:	89 d8                	mov    %ebx,%eax
810034cf:	39 45 14             	cmp    %eax,0x14(%ebp)
810034d2:	77 cb                	ja     8100349f <__sfputs_r+0x69>
810034d4:	b8 00 00 00 00       	mov    $0x0,%eax
810034d9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810034dc:	c9                   	leave  
810034dd:	c3                   	ret    

810034de <vfiprintf>:
810034de:	55                   	push   %ebp
810034df:	89 e5                	mov    %esp,%ebp
810034e1:	83 ec 18             	sub    $0x18,%esp
810034e4:	a1 24 73 00 81       	mov    0x81007324,%eax
810034e9:	ff 75 10             	pushl  0x10(%ebp)
810034ec:	ff 75 0c             	pushl  0xc(%ebp)
810034ef:	ff 75 08             	pushl  0x8(%ebp)
810034f2:	50                   	push   %eax
810034f3:	e8 0b 00 00 00       	call   81003503 <_vfiprintf_r>
810034f8:	83 c4 10             	add    $0x10,%esp
810034fb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810034fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003501:	c9                   	leave  
81003502:	c3                   	ret    

81003503 <_vfiprintf_r>:
81003503:	55                   	push   %ebp
81003504:	89 e5                	mov    %esp,%ebp
81003506:	57                   	push   %edi
81003507:	56                   	push   %esi
81003508:	53                   	push   %ebx
81003509:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
8100350f:	c7 45 e4 36 34 00 81 	movl   $0x81003436,-0x1c(%ebp)
81003516:	8b 45 08             	mov    0x8(%ebp),%eax
81003519:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100351c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81003520:	74 18                	je     8100353a <_vfiprintf_r+0x37>
81003522:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003525:	8b 40 38             	mov    0x38(%eax),%eax
81003528:	85 c0                	test   %eax,%eax
8100352a:	75 0e                	jne    8100353a <_vfiprintf_r+0x37>
8100352c:	83 ec 0c             	sub    $0xc,%esp
8100352f:	ff 75 e0             	pushl  -0x20(%ebp)
81003532:	e8 05 db ff ff       	call   8100103c <__sinit>
81003537:	83 c4 10             	add    $0x10,%esp
8100353a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100353d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003541:	98                   	cwtl   
81003542:	83 e0 08             	and    $0x8,%eax
81003545:	85 c0                	test   %eax,%eax
81003547:	74 0a                	je     81003553 <_vfiprintf_r+0x50>
81003549:	8b 45 0c             	mov    0xc(%ebp),%eax
8100354c:	8b 40 10             	mov    0x10(%eax),%eax
8100354f:	85 c0                	test   %eax,%eax
81003551:	75 1f                	jne    81003572 <_vfiprintf_r+0x6f>
81003553:	83 ec 08             	sub    $0x8,%esp
81003556:	ff 75 0c             	pushl  0xc(%ebp)
81003559:	ff 75 08             	pushl  0x8(%ebp)
8100355c:	e8 c7 14 00 00       	call   81004a28 <__swsetup_r>
81003561:	83 c4 10             	add    $0x10,%esp
81003564:	85 c0                	test   %eax,%eax
81003566:	74 0a                	je     81003572 <_vfiprintf_r+0x6f>
81003568:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100356d:	e9 df 02 00 00       	jmp    81003851 <_vfiprintf_r+0x34e>
81003572:	8b 5d 10             	mov    0x10(%ebp),%ebx
81003575:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
8100357c:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81003580:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81003584:	8b 45 14             	mov    0x14(%ebp),%eax
81003587:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
8100358d:	89 de                	mov    %ebx,%esi
8100358f:	eb 03                	jmp    81003594 <_vfiprintf_r+0x91>
81003591:	83 c3 01             	add    $0x1,%ebx
81003594:	0f b6 03             	movzbl (%ebx),%eax
81003597:	84 c0                	test   %al,%al
81003599:	74 07                	je     810035a2 <_vfiprintf_r+0x9f>
8100359b:	0f b6 03             	movzbl (%ebx),%eax
8100359e:	3c 25                	cmp    $0x25,%al
810035a0:	75 ef                	jne    81003591 <_vfiprintf_r+0x8e>
810035a2:	89 d8                	mov    %ebx,%eax
810035a4:	29 f0                	sub    %esi,%eax
810035a6:	85 c0                	test   %eax,%eax
810035a8:	74 2b                	je     810035d5 <_vfiprintf_r+0xd2>
810035aa:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
810035b0:	50                   	push   %eax
810035b1:	56                   	push   %esi
810035b2:	ff 75 0c             	pushl  0xc(%ebp)
810035b5:	ff 75 08             	pushl  0x8(%ebp)
810035b8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810035bb:	ff d0                	call   *%eax
810035bd:	83 c4 10             	add    $0x10,%esp
810035c0:	83 f8 ff             	cmp    $0xffffffff,%eax
810035c3:	0f 84 68 02 00 00    	je     81003831 <_vfiprintf_r+0x32e>
810035c9:	8b 45 94             	mov    -0x6c(%ebp),%eax
810035cc:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
810035d2:	89 45 94             	mov    %eax,-0x6c(%ebp)
810035d5:	0f b6 03             	movzbl (%ebx),%eax
810035d8:	84 c0                	test   %al,%al
810035da:	0f 84 54 02 00 00    	je     81003834 <_vfiprintf_r+0x331>
810035e0:	83 c3 01             	add    $0x1,%ebx
810035e3:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
810035ea:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
810035f1:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
810035f8:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
810035ff:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81003603:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8100360a:	c7 45 dc 74 6b 00 81 	movl   $0x81006b74,-0x24(%ebp)
81003611:	eb 1b                	jmp    8100362e <_vfiprintf_r+0x12b>
81003613:	8b 55 80             	mov    -0x80(%ebp),%edx
81003616:	89 f0                	mov    %esi,%eax
81003618:	2b 45 dc             	sub    -0x24(%ebp),%eax
8100361b:	be 01 00 00 00       	mov    $0x1,%esi
81003620:	89 c1                	mov    %eax,%ecx
81003622:	d3 e6                	shl    %cl,%esi
81003624:	89 f0                	mov    %esi,%eax
81003626:	09 d0                	or     %edx,%eax
81003628:	89 45 80             	mov    %eax,-0x80(%ebp)
8100362b:	83 c3 01             	add    $0x1,%ebx
8100362e:	0f b6 03             	movzbl (%ebx),%eax
81003631:	0f be c0             	movsbl %al,%eax
81003634:	83 ec 04             	sub    $0x4,%esp
81003637:	6a 05                	push   $0x5
81003639:	50                   	push   %eax
8100363a:	ff 75 dc             	pushl  -0x24(%ebp)
8100363d:	e8 ee fa ff ff       	call   81003130 <memchr>
81003642:	83 c4 10             	add    $0x10,%esp
81003645:	89 c6                	mov    %eax,%esi
81003647:	85 f6                	test   %esi,%esi
81003649:	75 c8                	jne    81003613 <_vfiprintf_r+0x110>
8100364b:	8b 45 80             	mov    -0x80(%ebp),%eax
8100364e:	83 e0 10             	and    $0x10,%eax
81003651:	85 c0                	test   %eax,%eax
81003653:	74 04                	je     81003659 <_vfiprintf_r+0x156>
81003655:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81003659:	8b 45 80             	mov    -0x80(%ebp),%eax
8100365c:	83 e0 08             	and    $0x8,%eax
8100365f:	85 c0                	test   %eax,%eax
81003661:	74 04                	je     81003667 <_vfiprintf_r+0x164>
81003663:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81003667:	0f b6 03             	movzbl (%ebx),%eax
8100366a:	3c 2a                	cmp    $0x2a,%al
8100366c:	75 50                	jne    810036be <_vfiprintf_r+0x1bb>
8100366e:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003674:	8d 50 04             	lea    0x4(%eax),%edx
81003677:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100367d:	8b 00                	mov    (%eax),%eax
8100367f:	89 45 8c             	mov    %eax,-0x74(%ebp)
81003682:	8b 45 8c             	mov    -0x74(%ebp),%eax
81003685:	85 c0                	test   %eax,%eax
81003687:	79 11                	jns    8100369a <_vfiprintf_r+0x197>
81003689:	8b 45 8c             	mov    -0x74(%ebp),%eax
8100368c:	f7 d8                	neg    %eax
8100368e:	89 45 8c             	mov    %eax,-0x74(%ebp)
81003691:	8b 45 80             	mov    -0x80(%ebp),%eax
81003694:	83 c8 02             	or     $0x2,%eax
81003697:	89 45 80             	mov    %eax,-0x80(%ebp)
8100369a:	83 c3 01             	add    $0x1,%ebx
8100369d:	eb 2d                	jmp    810036cc <_vfiprintf_r+0x1c9>
8100369f:	8b 55 8c             	mov    -0x74(%ebp),%edx
810036a2:	89 d0                	mov    %edx,%eax
810036a4:	c1 e0 02             	shl    $0x2,%eax
810036a7:	01 d0                	add    %edx,%eax
810036a9:	01 c0                	add    %eax,%eax
810036ab:	89 c2                	mov    %eax,%edx
810036ad:	0f b6 03             	movzbl (%ebx),%eax
810036b0:	0f be c0             	movsbl %al,%eax
810036b3:	83 e8 30             	sub    $0x30,%eax
810036b6:	01 d0                	add    %edx,%eax
810036b8:	89 45 8c             	mov    %eax,-0x74(%ebp)
810036bb:	83 c3 01             	add    $0x1,%ebx
810036be:	0f b6 03             	movzbl (%ebx),%eax
810036c1:	0f be c0             	movsbl %al,%eax
810036c4:	83 e8 30             	sub    $0x30,%eax
810036c7:	83 f8 09             	cmp    $0x9,%eax
810036ca:	76 d3                	jbe    8100369f <_vfiprintf_r+0x19c>
810036cc:	0f b6 03             	movzbl (%ebx),%eax
810036cf:	3c 2e                	cmp    $0x2e,%al
810036d1:	75 67                	jne    8100373a <_vfiprintf_r+0x237>
810036d3:	83 c3 01             	add    $0x1,%ebx
810036d6:	0f b6 03             	movzbl (%ebx),%eax
810036d9:	3c 2a                	cmp    $0x2a,%al
810036db:	75 27                	jne    81003704 <_vfiprintf_r+0x201>
810036dd:	83 c3 01             	add    $0x1,%ebx
810036e0:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810036e6:	8d 50 04             	lea    0x4(%eax),%edx
810036e9:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
810036ef:	8b 00                	mov    (%eax),%eax
810036f1:	89 45 84             	mov    %eax,-0x7c(%ebp)
810036f4:	8b 45 84             	mov    -0x7c(%ebp),%eax
810036f7:	85 c0                	test   %eax,%eax
810036f9:	79 3f                	jns    8100373a <_vfiprintf_r+0x237>
810036fb:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81003702:	eb 36                	jmp    8100373a <_vfiprintf_r+0x237>
81003704:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
8100370b:	eb 1f                	jmp    8100372c <_vfiprintf_r+0x229>
8100370d:	8b 55 84             	mov    -0x7c(%ebp),%edx
81003710:	89 d0                	mov    %edx,%eax
81003712:	c1 e0 02             	shl    $0x2,%eax
81003715:	01 d0                	add    %edx,%eax
81003717:	01 c0                	add    %eax,%eax
81003719:	89 c2                	mov    %eax,%edx
8100371b:	0f b6 03             	movzbl (%ebx),%eax
8100371e:	0f be c0             	movsbl %al,%eax
81003721:	83 e8 30             	sub    $0x30,%eax
81003724:	01 d0                	add    %edx,%eax
81003726:	89 45 84             	mov    %eax,-0x7c(%ebp)
81003729:	83 c3 01             	add    $0x1,%ebx
8100372c:	0f b6 03             	movzbl (%ebx),%eax
8100372f:	0f be c0             	movsbl %al,%eax
81003732:	83 e8 30             	sub    $0x30,%eax
81003735:	83 f8 09             	cmp    $0x9,%eax
81003738:	76 d3                	jbe    8100370d <_vfiprintf_r+0x20a>
8100373a:	c7 45 dc 7a 6b 00 81 	movl   $0x81006b7a,-0x24(%ebp)
81003741:	0f b6 03             	movzbl (%ebx),%eax
81003744:	0f be c0             	movsbl %al,%eax
81003747:	83 ec 04             	sub    $0x4,%esp
8100374a:	6a 03                	push   $0x3
8100374c:	50                   	push   %eax
8100374d:	ff 75 dc             	pushl  -0x24(%ebp)
81003750:	e8 db f9 ff ff       	call   81003130 <memchr>
81003755:	83 c4 10             	add    $0x10,%esp
81003758:	89 c6                	mov    %eax,%esi
8100375a:	85 f6                	test   %esi,%esi
8100375c:	74 1b                	je     81003779 <_vfiprintf_r+0x276>
8100375e:	8b 55 80             	mov    -0x80(%ebp),%edx
81003761:	89 f0                	mov    %esi,%eax
81003763:	2b 45 dc             	sub    -0x24(%ebp),%eax
81003766:	be 40 00 00 00       	mov    $0x40,%esi
8100376b:	89 c1                	mov    %eax,%ecx
8100376d:	d3 e6                	shl    %cl,%esi
8100376f:	89 f0                	mov    %esi,%eax
81003771:	09 d0                	or     %edx,%eax
81003773:	89 45 80             	mov    %eax,-0x80(%ebp)
81003776:	83 c3 01             	add    $0x1,%ebx
81003779:	89 d8                	mov    %ebx,%eax
8100377b:	8d 58 01             	lea    0x1(%eax),%ebx
8100377e:	0f b6 00             	movzbl (%eax),%eax
81003781:	88 45 98             	mov    %al,-0x68(%ebp)
81003784:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81003788:	0f be c0             	movsbl %al,%eax
8100378b:	83 ec 04             	sub    $0x4,%esp
8100378e:	6a 06                	push   $0x6
81003790:	50                   	push   %eax
81003791:	68 7e 6b 00 81       	push   $0x81006b7e
81003796:	e8 95 f9 ff ff       	call   81003130 <memchr>
8100379b:	83 c4 10             	add    $0x10,%esp
8100379e:	89 c6                	mov    %eax,%esi
810037a0:	85 f6                	test   %esi,%esi
810037a2:	74 5a                	je     810037fe <_vfiprintf_r+0x2fb>
810037a4:	b8 00 00 00 00       	mov    $0x0,%eax
810037a9:	85 c0                	test   %eax,%eax
810037ab:	75 2e                	jne    810037db <_vfiprintf_r+0x2d8>
810037ad:	8b 45 80             	mov    -0x80(%ebp),%eax
810037b0:	25 00 01 00 00       	and    $0x100,%eax
810037b5:	85 c0                	test   %eax,%eax
810037b7:	74 11                	je     810037ca <_vfiprintf_r+0x2c7>
810037b9:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810037bf:	83 c0 0c             	add    $0xc,%eax
810037c2:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810037c8:	eb 55                	jmp    8100381f <_vfiprintf_r+0x31c>
810037ca:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810037d0:	83 c0 08             	add    $0x8,%eax
810037d3:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810037d9:	eb 44                	jmp    8100381f <_vfiprintf_r+0x31c>
810037db:	83 ec 0c             	sub    $0xc,%esp
810037de:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810037e4:	50                   	push   %eax
810037e5:	ff 75 e4             	pushl  -0x1c(%ebp)
810037e8:	ff 75 0c             	pushl  0xc(%ebp)
810037eb:	8d 45 80             	lea    -0x80(%ebp),%eax
810037ee:	50                   	push   %eax
810037ef:	ff 75 08             	pushl  0x8(%ebp)
810037f2:	e8 09 c8 ff 7e       	call   0 <do_help-0x81000000>
810037f7:	83 c4 20             	add    $0x20,%esp
810037fa:	89 c7                	mov    %eax,%edi
810037fc:	eb 21                	jmp    8100381f <_vfiprintf_r+0x31c>
810037fe:	83 ec 0c             	sub    $0xc,%esp
81003801:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81003807:	50                   	push   %eax
81003808:	ff 75 e4             	pushl  -0x1c(%ebp)
8100380b:	ff 75 0c             	pushl  0xc(%ebp)
8100380e:	8d 45 80             	lea    -0x80(%ebp),%eax
81003811:	50                   	push   %eax
81003812:	ff 75 08             	pushl  0x8(%ebp)
81003815:	e8 da 01 00 00       	call   810039f4 <_printf_i>
8100381a:	83 c4 20             	add    $0x20,%esp
8100381d:	89 c7                	mov    %eax,%edi
8100381f:	83 ff ff             	cmp    $0xffffffff,%edi
81003822:	74 13                	je     81003837 <_vfiprintf_r+0x334>
81003824:	8b 45 94             	mov    -0x6c(%ebp),%eax
81003827:	01 f8                	add    %edi,%eax
81003829:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100382c:	e9 5c fd ff ff       	jmp    8100358d <_vfiprintf_r+0x8a>
81003831:	90                   	nop
81003832:	eb 04                	jmp    81003838 <_vfiprintf_r+0x335>
81003834:	90                   	nop
81003835:	eb 01                	jmp    81003838 <_vfiprintf_r+0x335>
81003837:	90                   	nop
81003838:	8b 45 0c             	mov    0xc(%ebp),%eax
8100383b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100383f:	98                   	cwtl   
81003840:	83 e0 40             	and    $0x40,%eax
81003843:	85 c0                	test   %eax,%eax
81003845:	75 05                	jne    8100384c <_vfiprintf_r+0x349>
81003847:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100384a:	eb 05                	jmp    81003851 <_vfiprintf_r+0x34e>
8100384c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003851:	8d 65 f4             	lea    -0xc(%ebp),%esp
81003854:	5b                   	pop    %ebx
81003855:	5e                   	pop    %esi
81003856:	5f                   	pop    %edi
81003857:	5d                   	pop    %ebp
81003858:	c3                   	ret    

81003859 <_printf_common>:
81003859:	55                   	push   %ebp
8100385a:	89 e5                	mov    %esp,%ebp
8100385c:	83 ec 18             	sub    $0x18,%esp
8100385f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003862:	8b 50 10             	mov    0x10(%eax),%edx
81003865:	8b 45 0c             	mov    0xc(%ebp),%eax
81003868:	8b 40 08             	mov    0x8(%eax),%eax
8100386b:	39 c2                	cmp    %eax,%edx
8100386d:	0f 4c d0             	cmovl  %eax,%edx
81003870:	8b 45 10             	mov    0x10(%ebp),%eax
81003873:	89 10                	mov    %edx,(%eax)
81003875:	8b 45 0c             	mov    0xc(%ebp),%eax
81003878:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8100387c:	84 c0                	test   %al,%al
8100387e:	74 0d                	je     8100388d <_printf_common+0x34>
81003880:	8b 45 10             	mov    0x10(%ebp),%eax
81003883:	8b 00                	mov    (%eax),%eax
81003885:	8d 50 01             	lea    0x1(%eax),%edx
81003888:	8b 45 10             	mov    0x10(%ebp),%eax
8100388b:	89 10                	mov    %edx,(%eax)
8100388d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003890:	8b 00                	mov    (%eax),%eax
81003892:	83 e0 20             	and    $0x20,%eax
81003895:	85 c0                	test   %eax,%eax
81003897:	74 0d                	je     810038a6 <_printf_common+0x4d>
81003899:	8b 45 10             	mov    0x10(%ebp),%eax
8100389c:	8b 00                	mov    (%eax),%eax
8100389e:	8d 50 02             	lea    0x2(%eax),%edx
810038a1:	8b 45 10             	mov    0x10(%ebp),%eax
810038a4:	89 10                	mov    %edx,(%eax)
810038a6:	8b 45 0c             	mov    0xc(%ebp),%eax
810038a9:	8b 00                	mov    (%eax),%eax
810038ab:	83 e0 06             	and    $0x6,%eax
810038ae:	85 c0                	test   %eax,%eax
810038b0:	75 41                	jne    810038f3 <_printf_common+0x9a>
810038b2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810038b9:	eb 24                	jmp    810038df <_printf_common+0x86>
810038bb:	8b 45 0c             	mov    0xc(%ebp),%eax
810038be:	83 c0 19             	add    $0x19,%eax
810038c1:	6a 01                	push   $0x1
810038c3:	50                   	push   %eax
810038c4:	ff 75 14             	pushl  0x14(%ebp)
810038c7:	ff 75 08             	pushl  0x8(%ebp)
810038ca:	8b 45 18             	mov    0x18(%ebp),%eax
810038cd:	ff d0                	call   *%eax
810038cf:	83 c4 10             	add    $0x10,%esp
810038d2:	83 f8 ff             	cmp    $0xffffffff,%eax
810038d5:	0f 84 0b 01 00 00    	je     810039e6 <_printf_common+0x18d>
810038db:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810038df:	8b 45 0c             	mov    0xc(%ebp),%eax
810038e2:	8b 50 0c             	mov    0xc(%eax),%edx
810038e5:	8b 45 10             	mov    0x10(%ebp),%eax
810038e8:	8b 08                	mov    (%eax),%ecx
810038ea:	89 d0                	mov    %edx,%eax
810038ec:	29 c8                	sub    %ecx,%eax
810038ee:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810038f1:	7c c8                	jl     810038bb <_printf_common+0x62>
810038f3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810038fa:	8b 45 0c             	mov    0xc(%ebp),%eax
810038fd:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81003901:	84 c0                	test   %al,%al
81003903:	74 04                	je     81003909 <_printf_common+0xb0>
81003905:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81003909:	8b 45 0c             	mov    0xc(%ebp),%eax
8100390c:	8b 00                	mov    (%eax),%eax
8100390e:	83 e0 20             	and    $0x20,%eax
81003911:	85 c0                	test   %eax,%eax
81003913:	74 28                	je     8100393d <_printf_common+0xe4>
81003915:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003918:	8d 50 01             	lea    0x1(%eax),%edx
8100391b:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100391e:	8b 55 0c             	mov    0xc(%ebp),%edx
81003921:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81003926:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003929:	8d 50 01             	lea    0x1(%eax),%edx
8100392c:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100392f:	8b 55 0c             	mov    0xc(%ebp),%edx
81003932:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81003936:	8b 55 0c             	mov    0xc(%ebp),%edx
81003939:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
8100393d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003940:	8b 55 0c             	mov    0xc(%ebp),%edx
81003943:	83 c2 43             	add    $0x43,%edx
81003946:	50                   	push   %eax
81003947:	52                   	push   %edx
81003948:	ff 75 14             	pushl  0x14(%ebp)
8100394b:	ff 75 08             	pushl  0x8(%ebp)
8100394e:	8b 45 18             	mov    0x18(%ebp),%eax
81003951:	ff d0                	call   *%eax
81003953:	83 c4 10             	add    $0x10,%esp
81003956:	83 f8 ff             	cmp    $0xffffffff,%eax
81003959:	0f 84 8a 00 00 00    	je     810039e9 <_printf_common+0x190>
8100395f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003962:	8b 50 0c             	mov    0xc(%eax),%edx
81003965:	8b 45 10             	mov    0x10(%ebp),%eax
81003968:	8b 08                	mov    (%eax),%ecx
8100396a:	89 d0                	mov    %edx,%eax
8100396c:	29 c8                	sub    %ecx,%eax
8100396e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003971:	8b 45 0c             	mov    0xc(%ebp),%eax
81003974:	8b 00                	mov    (%eax),%eax
81003976:	83 e0 06             	and    $0x6,%eax
81003979:	83 f8 04             	cmp    $0x4,%eax
8100397c:	75 06                	jne    81003984 <_printf_common+0x12b>
8100397e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003982:	79 07                	jns    8100398b <_printf_common+0x132>
81003984:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100398b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100398e:	8b 50 08             	mov    0x8(%eax),%edx
81003991:	8b 45 0c             	mov    0xc(%ebp),%eax
81003994:	8b 40 10             	mov    0x10(%eax),%eax
81003997:	39 c2                	cmp    %eax,%edx
81003999:	7e 13                	jle    810039ae <_printf_common+0x155>
8100399b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100399e:	8b 50 08             	mov    0x8(%eax),%edx
810039a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810039a4:	8b 48 10             	mov    0x10(%eax),%ecx
810039a7:	89 d0                	mov    %edx,%eax
810039a9:	29 c8                	sub    %ecx,%eax
810039ab:	01 45 f4             	add    %eax,-0xc(%ebp)
810039ae:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810039b5:	eb 20                	jmp    810039d7 <_printf_common+0x17e>
810039b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810039ba:	83 c0 1a             	add    $0x1a,%eax
810039bd:	6a 01                	push   $0x1
810039bf:	50                   	push   %eax
810039c0:	ff 75 14             	pushl  0x14(%ebp)
810039c3:	ff 75 08             	pushl  0x8(%ebp)
810039c6:	8b 45 18             	mov    0x18(%ebp),%eax
810039c9:	ff d0                	call   *%eax
810039cb:	83 c4 10             	add    $0x10,%esp
810039ce:	83 f8 ff             	cmp    $0xffffffff,%eax
810039d1:	74 19                	je     810039ec <_printf_common+0x193>
810039d3:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
810039d7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810039da:	3b 45 f4             	cmp    -0xc(%ebp),%eax
810039dd:	7c d8                	jl     810039b7 <_printf_common+0x15e>
810039df:	b8 00 00 00 00       	mov    $0x0,%eax
810039e4:	eb 0c                	jmp    810039f2 <_printf_common+0x199>
810039e6:	90                   	nop
810039e7:	eb 04                	jmp    810039ed <_printf_common+0x194>
810039e9:	90                   	nop
810039ea:	eb 01                	jmp    810039ed <_printf_common+0x194>
810039ec:	90                   	nop
810039ed:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810039f2:	c9                   	leave  
810039f3:	c3                   	ret    

810039f4 <_printf_i>:
810039f4:	55                   	push   %ebp
810039f5:	89 e5                	mov    %esp,%ebp
810039f7:	53                   	push   %ebx
810039f8:	83 ec 24             	sub    $0x24,%esp
810039fb:	8b 45 0c             	mov    0xc(%ebp),%eax
810039fe:	83 c0 1b             	add    $0x1b,%eax
81003a01:	83 c0 28             	add    $0x28,%eax
81003a04:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003a07:	c7 45 e8 88 6b 00 81 	movl   $0x81006b88,-0x18(%ebp)
81003a0e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a11:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81003a15:	0f be c0             	movsbl %al,%eax
81003a18:	85 c0                	test   %eax,%eax
81003a1a:	0f 84 00 03 00 00    	je     81003d20 <_printf_i+0x32c>
81003a20:	85 c0                	test   %eax,%eax
81003a22:	0f 88 52 03 00 00    	js     81003d7a <_printf_i+0x386>
81003a28:	83 f8 78             	cmp    $0x78,%eax
81003a2b:	0f 8f 49 03 00 00    	jg     81003d7a <_printf_i+0x386>
81003a31:	83 f8 58             	cmp    $0x58,%eax
81003a34:	0f 8c 40 03 00 00    	jl     81003d7a <_printf_i+0x386>
81003a3a:	83 e8 58             	sub    $0x58,%eax
81003a3d:	83 f8 20             	cmp    $0x20,%eax
81003a40:	0f 87 34 03 00 00    	ja     81003d7a <_printf_i+0x386>
81003a46:	8b 04 85 ac 6b 00 81 	mov    -0x7eff9454(,%eax,4),%eax
81003a4d:	ff e0                	jmp    *%eax
81003a4f:	8b 45 18             	mov    0x18(%ebp),%eax
81003a52:	8b 00                	mov    (%eax),%eax
81003a54:	8d 48 04             	lea    0x4(%eax),%ecx
81003a57:	8b 55 18             	mov    0x18(%ebp),%edx
81003a5a:	89 0a                	mov    %ecx,(%edx)
81003a5c:	8b 00                	mov    (%eax),%eax
81003a5e:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003a62:	89 c2                	mov    %eax,%edx
81003a64:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003a67:	88 10                	mov    %dl,(%eax)
81003a69:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a6c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003a73:	e9 1c 03 00 00       	jmp    81003d94 <_printf_i+0x3a0>
81003a78:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a7b:	8b 00                	mov    (%eax),%eax
81003a7d:	25 80 00 00 00       	and    $0x80,%eax
81003a82:	85 c0                	test   %eax,%eax
81003a84:	74 11                	je     81003a97 <_printf_i+0xa3>
81003a86:	8b 45 18             	mov    0x18(%ebp),%eax
81003a89:	8b 00                	mov    (%eax),%eax
81003a8b:	8d 48 04             	lea    0x4(%eax),%ecx
81003a8e:	8b 55 18             	mov    0x18(%ebp),%edx
81003a91:	89 0a                	mov    %ecx,(%edx)
81003a93:	8b 00                	mov    (%eax),%eax
81003a95:	eb 2d                	jmp    81003ac4 <_printf_i+0xd0>
81003a97:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a9a:	8b 00                	mov    (%eax),%eax
81003a9c:	83 e0 40             	and    $0x40,%eax
81003a9f:	85 c0                	test   %eax,%eax
81003aa1:	74 12                	je     81003ab5 <_printf_i+0xc1>
81003aa3:	8b 45 18             	mov    0x18(%ebp),%eax
81003aa6:	8b 00                	mov    (%eax),%eax
81003aa8:	8d 48 04             	lea    0x4(%eax),%ecx
81003aab:	8b 55 18             	mov    0x18(%ebp),%edx
81003aae:	89 0a                	mov    %ecx,(%edx)
81003ab0:	8b 00                	mov    (%eax),%eax
81003ab2:	98                   	cwtl   
81003ab3:	eb 0f                	jmp    81003ac4 <_printf_i+0xd0>
81003ab5:	8b 45 18             	mov    0x18(%ebp),%eax
81003ab8:	8b 00                	mov    (%eax),%eax
81003aba:	8d 48 04             	lea    0x4(%eax),%ecx
81003abd:	8b 55 18             	mov    0x18(%ebp),%edx
81003ac0:	89 0a                	mov    %ecx,(%edx)
81003ac2:	8b 00                	mov    (%eax),%eax
81003ac4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003ac7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003aca:	85 c0                	test   %eax,%eax
81003acc:	79 0a                	jns    81003ad8 <_printf_i+0xe4>
81003ace:	f7 5d f4             	negl   -0xc(%ebp)
81003ad1:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ad4:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81003ad8:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
81003adf:	e9 28 01 00 00       	jmp    81003c0c <_printf_i+0x218>
81003ae4:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ae7:	8b 00                	mov    (%eax),%eax
81003ae9:	25 80 00 00 00       	and    $0x80,%eax
81003aee:	85 c0                	test   %eax,%eax
81003af0:	74 11                	je     81003b03 <_printf_i+0x10f>
81003af2:	8b 45 18             	mov    0x18(%ebp),%eax
81003af5:	8b 00                	mov    (%eax),%eax
81003af7:	8d 48 04             	lea    0x4(%eax),%ecx
81003afa:	8b 55 18             	mov    0x18(%ebp),%edx
81003afd:	89 0a                	mov    %ecx,(%edx)
81003aff:	8b 00                	mov    (%eax),%eax
81003b01:	eb 2f                	jmp    81003b32 <_printf_i+0x13e>
81003b03:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b06:	8b 00                	mov    (%eax),%eax
81003b08:	83 e0 40             	and    $0x40,%eax
81003b0b:	85 c0                	test   %eax,%eax
81003b0d:	74 14                	je     81003b23 <_printf_i+0x12f>
81003b0f:	8b 45 18             	mov    0x18(%ebp),%eax
81003b12:	8b 00                	mov    (%eax),%eax
81003b14:	8d 48 04             	lea    0x4(%eax),%ecx
81003b17:	8b 55 18             	mov    0x18(%ebp),%edx
81003b1a:	89 0a                	mov    %ecx,(%edx)
81003b1c:	8b 00                	mov    (%eax),%eax
81003b1e:	0f b7 c0             	movzwl %ax,%eax
81003b21:	eb 0f                	jmp    81003b32 <_printf_i+0x13e>
81003b23:	8b 45 18             	mov    0x18(%ebp),%eax
81003b26:	8b 00                	mov    (%eax),%eax
81003b28:	8d 48 04             	lea    0x4(%eax),%ecx
81003b2b:	8b 55 18             	mov    0x18(%ebp),%edx
81003b2e:	89 0a                	mov    %ecx,(%edx)
81003b30:	8b 00                	mov    (%eax),%eax
81003b32:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003b35:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b38:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81003b3c:	3c 6f                	cmp    $0x6f,%al
81003b3e:	75 07                	jne    81003b47 <_printf_i+0x153>
81003b40:	b8 08 00 00 00       	mov    $0x8,%eax
81003b45:	eb 05                	jmp    81003b4c <_printf_i+0x158>
81003b47:	b8 0a 00 00 00       	mov    $0xa,%eax
81003b4c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003b4f:	e9 b1 00 00 00       	jmp    81003c05 <_printf_i+0x211>
81003b54:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b57:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81003b5b:	eb 1d                	jmp    81003b7a <_printf_i+0x186>
81003b5d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b60:	8b 00                	mov    (%eax),%eax
81003b62:	83 c8 20             	or     $0x20,%eax
81003b65:	89 c2                	mov    %eax,%edx
81003b67:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b6a:	89 10                	mov    %edx,(%eax)
81003b6c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b6f:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81003b73:	c7 45 e8 99 6b 00 81 	movl   $0x81006b99,-0x18(%ebp)
81003b7a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b7d:	8b 00                	mov    (%eax),%eax
81003b7f:	25 80 00 00 00       	and    $0x80,%eax
81003b84:	85 c0                	test   %eax,%eax
81003b86:	74 11                	je     81003b99 <_printf_i+0x1a5>
81003b88:	8b 45 18             	mov    0x18(%ebp),%eax
81003b8b:	8b 00                	mov    (%eax),%eax
81003b8d:	8d 48 04             	lea    0x4(%eax),%ecx
81003b90:	8b 55 18             	mov    0x18(%ebp),%edx
81003b93:	89 0a                	mov    %ecx,(%edx)
81003b95:	8b 00                	mov    (%eax),%eax
81003b97:	eb 2f                	jmp    81003bc8 <_printf_i+0x1d4>
81003b99:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b9c:	8b 00                	mov    (%eax),%eax
81003b9e:	83 e0 40             	and    $0x40,%eax
81003ba1:	85 c0                	test   %eax,%eax
81003ba3:	74 14                	je     81003bb9 <_printf_i+0x1c5>
81003ba5:	8b 45 18             	mov    0x18(%ebp),%eax
81003ba8:	8b 00                	mov    (%eax),%eax
81003baa:	8d 48 04             	lea    0x4(%eax),%ecx
81003bad:	8b 55 18             	mov    0x18(%ebp),%edx
81003bb0:	89 0a                	mov    %ecx,(%edx)
81003bb2:	8b 00                	mov    (%eax),%eax
81003bb4:	0f b7 c0             	movzwl %ax,%eax
81003bb7:	eb 0f                	jmp    81003bc8 <_printf_i+0x1d4>
81003bb9:	8b 45 18             	mov    0x18(%ebp),%eax
81003bbc:	8b 00                	mov    (%eax),%eax
81003bbe:	8d 48 04             	lea    0x4(%eax),%ecx
81003bc1:	8b 55 18             	mov    0x18(%ebp),%edx
81003bc4:	89 0a                	mov    %ecx,(%edx)
81003bc6:	8b 00                	mov    (%eax),%eax
81003bc8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003bcb:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81003bd2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bd5:	8b 00                	mov    (%eax),%eax
81003bd7:	83 e0 01             	and    $0x1,%eax
81003bda:	85 c0                	test   %eax,%eax
81003bdc:	74 0f                	je     81003bed <_printf_i+0x1f9>
81003bde:	8b 45 0c             	mov    0xc(%ebp),%eax
81003be1:	8b 00                	mov    (%eax),%eax
81003be3:	83 c8 20             	or     $0x20,%eax
81003be6:	89 c2                	mov    %eax,%edx
81003be8:	8b 45 0c             	mov    0xc(%ebp),%eax
81003beb:	89 10                	mov    %edx,(%eax)
81003bed:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003bf1:	75 11                	jne    81003c04 <_printf_i+0x210>
81003bf3:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bf6:	8b 00                	mov    (%eax),%eax
81003bf8:	83 e0 df             	and    $0xffffffdf,%eax
81003bfb:	89 c2                	mov    %eax,%edx
81003bfd:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c00:	89 10                	mov    %edx,(%eax)
81003c02:	eb 01                	jmp    81003c05 <_printf_i+0x211>
81003c04:	90                   	nop
81003c05:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c08:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81003c0c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c0f:	8b 50 04             	mov    0x4(%eax),%edx
81003c12:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c15:	89 50 08             	mov    %edx,0x8(%eax)
81003c18:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c1b:	8b 40 08             	mov    0x8(%eax),%eax
81003c1e:	85 c0                	test   %eax,%eax
81003c20:	78 0f                	js     81003c31 <_printf_i+0x23d>
81003c22:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c25:	8b 00                	mov    (%eax),%eax
81003c27:	83 e0 fb             	and    $0xfffffffb,%eax
81003c2a:	89 c2                	mov    %eax,%edx
81003c2c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c2f:	89 10                	mov    %edx,(%eax)
81003c31:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003c35:	75 0a                	jne    81003c41 <_printf_i+0x24d>
81003c37:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c3a:	8b 40 04             	mov    0x4(%eax),%eax
81003c3d:	85 c0                	test   %eax,%eax
81003c3f:	74 34                	je     81003c75 <_printf_i+0x281>
81003c41:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81003c44:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c47:	ba 00 00 00 00       	mov    $0x0,%edx
81003c4c:	f7 f1                	div    %ecx
81003c4e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003c51:	01 d0                	add    %edx,%eax
81003c53:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003c57:	0f b6 10             	movzbl (%eax),%edx
81003c5a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c5d:	88 10                	mov    %dl,(%eax)
81003c5f:	8b 5d f0             	mov    -0x10(%ebp),%ebx
81003c62:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c65:	ba 00 00 00 00       	mov    $0x0,%edx
81003c6a:	f7 f3                	div    %ebx
81003c6c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c6f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003c73:	75 cc                	jne    81003c41 <_printf_i+0x24d>
81003c75:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81003c79:	75 26                	jne    81003ca1 <_printf_i+0x2ad>
81003c7b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c7e:	8b 00                	mov    (%eax),%eax
81003c80:	83 e0 01             	and    $0x1,%eax
81003c83:	85 c0                	test   %eax,%eax
81003c85:	74 1a                	je     81003ca1 <_printf_i+0x2ad>
81003c87:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c8a:	8b 50 04             	mov    0x4(%eax),%edx
81003c8d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c90:	8b 40 10             	mov    0x10(%eax),%eax
81003c93:	39 c2                	cmp    %eax,%edx
81003c95:	7f 0a                	jg     81003ca1 <_printf_i+0x2ad>
81003c97:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003c9b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c9e:	c6 00 30             	movb   $0x30,(%eax)
81003ca1:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ca4:	83 c0 1b             	add    $0x1b,%eax
81003ca7:	83 c0 28             	add    $0x28,%eax
81003caa:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003cad:	89 c2                	mov    %eax,%edx
81003caf:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cb2:	89 50 10             	mov    %edx,0x10(%eax)
81003cb5:	e9 e2 00 00 00       	jmp    81003d9c <_printf_i+0x3a8>
81003cba:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cbd:	8b 00                	mov    (%eax),%eax
81003cbf:	25 80 00 00 00       	and    $0x80,%eax
81003cc4:	85 c0                	test   %eax,%eax
81003cc6:	74 19                	je     81003ce1 <_printf_i+0x2ed>
81003cc8:	8b 45 18             	mov    0x18(%ebp),%eax
81003ccb:	8b 00                	mov    (%eax),%eax
81003ccd:	8d 48 04             	lea    0x4(%eax),%ecx
81003cd0:	8b 55 18             	mov    0x18(%ebp),%edx
81003cd3:	89 0a                	mov    %ecx,(%edx)
81003cd5:	8b 00                	mov    (%eax),%eax
81003cd7:	8b 55 0c             	mov    0xc(%ebp),%edx
81003cda:	8b 52 14             	mov    0x14(%edx),%edx
81003cdd:	89 10                	mov    %edx,(%eax)
81003cdf:	eb 3f                	jmp    81003d20 <_printf_i+0x32c>
81003ce1:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ce4:	8b 00                	mov    (%eax),%eax
81003ce6:	83 e0 40             	and    $0x40,%eax
81003ce9:	85 c0                	test   %eax,%eax
81003ceb:	74 1c                	je     81003d09 <_printf_i+0x315>
81003ced:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cf0:	8b 58 14             	mov    0x14(%eax),%ebx
81003cf3:	8b 45 18             	mov    0x18(%ebp),%eax
81003cf6:	8b 00                	mov    (%eax),%eax
81003cf8:	8d 48 04             	lea    0x4(%eax),%ecx
81003cfb:	8b 55 18             	mov    0x18(%ebp),%edx
81003cfe:	89 0a                	mov    %ecx,(%edx)
81003d00:	8b 00                	mov    (%eax),%eax
81003d02:	89 da                	mov    %ebx,%edx
81003d04:	66 89 10             	mov    %dx,(%eax)
81003d07:	eb 17                	jmp    81003d20 <_printf_i+0x32c>
81003d09:	8b 45 18             	mov    0x18(%ebp),%eax
81003d0c:	8b 00                	mov    (%eax),%eax
81003d0e:	8d 48 04             	lea    0x4(%eax),%ecx
81003d11:	8b 55 18             	mov    0x18(%ebp),%edx
81003d14:	89 0a                	mov    %ecx,(%edx)
81003d16:	8b 00                	mov    (%eax),%eax
81003d18:	8b 55 0c             	mov    0xc(%ebp),%edx
81003d1b:	8b 52 14             	mov    0x14(%edx),%edx
81003d1e:	89 10                	mov    %edx,(%eax)
81003d20:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d23:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81003d2a:	eb 70                	jmp    81003d9c <_printf_i+0x3a8>
81003d2c:	8b 45 18             	mov    0x18(%ebp),%eax
81003d2f:	8b 00                	mov    (%eax),%eax
81003d31:	8d 48 04             	lea    0x4(%eax),%ecx
81003d34:	8b 55 18             	mov    0x18(%ebp),%edx
81003d37:	89 0a                	mov    %ecx,(%edx)
81003d39:	8b 00                	mov    (%eax),%eax
81003d3b:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003d3e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d41:	8b 40 04             	mov    0x4(%eax),%eax
81003d44:	83 ec 04             	sub    $0x4,%esp
81003d47:	50                   	push   %eax
81003d48:	6a 00                	push   $0x0
81003d4a:	ff 75 ec             	pushl  -0x14(%ebp)
81003d4d:	e8 de f3 ff ff       	call   81003130 <memchr>
81003d52:	83 c4 10             	add    $0x10,%esp
81003d55:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003d58:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81003d5c:	74 0e                	je     81003d6c <_printf_i+0x378>
81003d5e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003d61:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003d64:	89 c2                	mov    %eax,%edx
81003d66:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d69:	89 50 04             	mov    %edx,0x4(%eax)
81003d6c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d6f:	8b 50 04             	mov    0x4(%eax),%edx
81003d72:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d75:	89 50 10             	mov    %edx,0x10(%eax)
81003d78:	eb 1a                	jmp    81003d94 <_printf_i+0x3a0>
81003d7a:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003d7e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d81:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81003d85:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003d88:	88 10                	mov    %dl,(%eax)
81003d8a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d8d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003d94:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d97:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81003d9b:	90                   	nop
81003d9c:	83 ec 0c             	sub    $0xc,%esp
81003d9f:	ff 75 14             	pushl  0x14(%ebp)
81003da2:	ff 75 10             	pushl  0x10(%ebp)
81003da5:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003da8:	50                   	push   %eax
81003da9:	ff 75 0c             	pushl  0xc(%ebp)
81003dac:	ff 75 08             	pushl  0x8(%ebp)
81003daf:	e8 a5 fa ff ff       	call   81003859 <_printf_common>
81003db4:	83 c4 20             	add    $0x20,%esp
81003db7:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003dba:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
81003dbe:	74 72                	je     81003e32 <_printf_i+0x43e>
81003dc0:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dc3:	8b 40 10             	mov    0x10(%eax),%eax
81003dc6:	50                   	push   %eax
81003dc7:	ff 75 ec             	pushl  -0x14(%ebp)
81003dca:	ff 75 10             	pushl  0x10(%ebp)
81003dcd:	ff 75 08             	pushl  0x8(%ebp)
81003dd0:	8b 45 14             	mov    0x14(%ebp),%eax
81003dd3:	ff d0                	call   *%eax
81003dd5:	83 c4 10             	add    $0x10,%esp
81003dd8:	83 f8 ff             	cmp    $0xffffffff,%eax
81003ddb:	74 58                	je     81003e35 <_printf_i+0x441>
81003ddd:	8b 45 0c             	mov    0xc(%ebp),%eax
81003de0:	8b 00                	mov    (%eax),%eax
81003de2:	83 e0 02             	and    $0x2,%eax
81003de5:	85 c0                	test   %eax,%eax
81003de7:	74 39                	je     81003e22 <_printf_i+0x42e>
81003de9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003df0:	eb 20                	jmp    81003e12 <_printf_i+0x41e>
81003df2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003df5:	83 c0 19             	add    $0x19,%eax
81003df8:	6a 01                	push   $0x1
81003dfa:	50                   	push   %eax
81003dfb:	ff 75 10             	pushl  0x10(%ebp)
81003dfe:	ff 75 08             	pushl  0x8(%ebp)
81003e01:	8b 45 14             	mov    0x14(%ebp),%eax
81003e04:	ff d0                	call   *%eax
81003e06:	83 c4 10             	add    $0x10,%esp
81003e09:	83 f8 ff             	cmp    $0xffffffff,%eax
81003e0c:	74 2a                	je     81003e38 <_printf_i+0x444>
81003e0e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81003e12:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e15:	8b 40 0c             	mov    0xc(%eax),%eax
81003e18:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003e1b:	29 d0                	sub    %edx,%eax
81003e1d:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003e20:	7c d0                	jl     81003df2 <_printf_i+0x3fe>
81003e22:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e25:	8b 50 0c             	mov    0xc(%eax),%edx
81003e28:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003e2b:	39 c2                	cmp    %eax,%edx
81003e2d:	0f 4d c2             	cmovge %edx,%eax
81003e30:	eb 0c                	jmp    81003e3e <_printf_i+0x44a>
81003e32:	90                   	nop
81003e33:	eb 04                	jmp    81003e39 <_printf_i+0x445>
81003e35:	90                   	nop
81003e36:	eb 01                	jmp    81003e39 <_printf_i+0x445>
81003e38:	90                   	nop
81003e39:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003e3e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003e41:	c9                   	leave  
81003e42:	c3                   	ret    

81003e43 <_iprintf_r>:
81003e43:	55                   	push   %ebp
81003e44:	89 e5                	mov    %esp,%ebp
81003e46:	83 ec 18             	sub    $0x18,%esp
81003e49:	8d 45 10             	lea    0x10(%ebp),%eax
81003e4c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003e4f:	8b 55 f0             	mov    -0x10(%ebp),%edx
81003e52:	8b 45 08             	mov    0x8(%ebp),%eax
81003e55:	8b 40 08             	mov    0x8(%eax),%eax
81003e58:	52                   	push   %edx
81003e59:	ff 75 0c             	pushl  0xc(%ebp)
81003e5c:	50                   	push   %eax
81003e5d:	ff 75 08             	pushl  0x8(%ebp)
81003e60:	e8 9e f6 ff ff       	call   81003503 <_vfiprintf_r>
81003e65:	83 c4 10             	add    $0x10,%esp
81003e68:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003e6b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e6e:	c9                   	leave  
81003e6f:	c3                   	ret    

81003e70 <iprintf>:
81003e70:	55                   	push   %ebp
81003e71:	89 e5                	mov    %esp,%ebp
81003e73:	83 ec 18             	sub    $0x18,%esp
81003e76:	a1 24 73 00 81       	mov    0x81007324,%eax
81003e7b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003e7e:	8d 45 0c             	lea    0xc(%ebp),%eax
81003e81:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003e84:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003e87:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e8a:	8b 40 08             	mov    0x8(%eax),%eax
81003e8d:	52                   	push   %edx
81003e8e:	ff 75 08             	pushl  0x8(%ebp)
81003e91:	50                   	push   %eax
81003e92:	ff 75 f4             	pushl  -0xc(%ebp)
81003e95:	e8 69 f6 ff ff       	call   81003503 <_vfiprintf_r>
81003e9a:	83 c4 10             	add    $0x10,%esp
81003e9d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003ea0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ea3:	c9                   	leave  
81003ea4:	c3                   	ret    

81003ea5 <_puts_r>:
81003ea5:	55                   	push   %ebp
81003ea6:	89 e5                	mov    %esp,%ebp
81003ea8:	83 ec 38             	sub    $0x38,%esp
81003eab:	83 ec 0c             	sub    $0xc,%esp
81003eae:	ff 75 0c             	pushl  0xc(%ebp)
81003eb1:	e8 1a 06 00 00       	call   810044d0 <strlen>
81003eb6:	83 c4 10             	add    $0x10,%esp
81003eb9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003ebc:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ebf:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003ec2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ec5:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003ec8:	c7 45 d4 30 6c 00 81 	movl   $0x81006c30,-0x2c(%ebp)
81003ecf:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81003ed6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ed9:	83 c0 01             	add    $0x1,%eax
81003edc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003edf:	8d 45 cc             	lea    -0x34(%ebp),%eax
81003ee2:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003ee5:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
81003eec:	8b 45 08             	mov    0x8(%ebp),%eax
81003eef:	8b 40 08             	mov    0x8(%eax),%eax
81003ef2:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003ef5:	8b 45 08             	mov    0x8(%ebp),%eax
81003ef8:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003efb:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81003eff:	74 18                	je     81003f19 <_puts_r+0x74>
81003f01:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003f04:	8b 40 38             	mov    0x38(%eax),%eax
81003f07:	85 c0                	test   %eax,%eax
81003f09:	75 0e                	jne    81003f19 <_puts_r+0x74>
81003f0b:	83 ec 0c             	sub    $0xc,%esp
81003f0e:	ff 75 ec             	pushl  -0x14(%ebp)
81003f11:	e8 26 d1 ff ff       	call   8100103c <__sinit>
81003f16:	83 c4 10             	add    $0x10,%esp
81003f19:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f1c:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003f20:	98                   	cwtl   
81003f21:	25 00 20 00 00       	and    $0x2000,%eax
81003f26:	85 c0                	test   %eax,%eax
81003f28:	75 24                	jne    81003f4e <_puts_r+0xa9>
81003f2a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f2d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003f31:	80 cc 20             	or     $0x20,%ah
81003f34:	89 c2                	mov    %eax,%edx
81003f36:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f39:	66 89 50 0c          	mov    %dx,0xc(%eax)
81003f3d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f40:	8b 40 64             	mov    0x64(%eax),%eax
81003f43:	80 e4 df             	and    $0xdf,%ah
81003f46:	89 c2                	mov    %eax,%edx
81003f48:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f4b:	89 50 64             	mov    %edx,0x64(%eax)
81003f4e:	83 ec 04             	sub    $0x4,%esp
81003f51:	8d 45 dc             	lea    -0x24(%ebp),%eax
81003f54:	50                   	push   %eax
81003f55:	ff 75 f0             	pushl  -0x10(%ebp)
81003f58:	ff 75 08             	pushl  0x8(%ebp)
81003f5b:	e8 b4 11 00 00       	call   81005114 <__sfvwrite_r>
81003f60:	83 c4 10             	add    $0x10,%esp
81003f63:	85 c0                	test   %eax,%eax
81003f65:	74 07                	je     81003f6e <_puts_r+0xc9>
81003f67:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003f6c:	eb 05                	jmp    81003f73 <_puts_r+0xce>
81003f6e:	b8 0a 00 00 00       	mov    $0xa,%eax
81003f73:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003f76:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f79:	c9                   	leave  
81003f7a:	c3                   	ret    

81003f7b <puts>:
81003f7b:	55                   	push   %ebp
81003f7c:	89 e5                	mov    %esp,%ebp
81003f7e:	83 ec 08             	sub    $0x8,%esp
81003f81:	a1 24 73 00 81       	mov    0x81007324,%eax
81003f86:	83 ec 08             	sub    $0x8,%esp
81003f89:	ff 75 08             	pushl  0x8(%ebp)
81003f8c:	50                   	push   %eax
81003f8d:	e8 13 ff ff ff       	call   81003ea5 <_puts_r>
81003f92:	83 c4 10             	add    $0x10,%esp
81003f95:	c9                   	leave  
81003f96:	c3                   	ret    

81003f97 <lflush>:
81003f97:	55                   	push   %ebp
81003f98:	89 e5                	mov    %esp,%ebp
81003f9a:	83 ec 08             	sub    $0x8,%esp
81003f9d:	8b 45 08             	mov    0x8(%ebp),%eax
81003fa0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003fa4:	98                   	cwtl   
81003fa5:	83 e0 09             	and    $0x9,%eax
81003fa8:	83 f8 09             	cmp    $0x9,%eax
81003fab:	75 10                	jne    81003fbd <lflush+0x26>
81003fad:	83 ec 0c             	sub    $0xc,%esp
81003fb0:	ff 75 08             	pushl  0x8(%ebp)
81003fb3:	e8 d9 cb ff ff       	call   81000b91 <fflush>
81003fb8:	83 c4 10             	add    $0x10,%esp
81003fbb:	eb 05                	jmp    81003fc2 <lflush+0x2b>
81003fbd:	b8 00 00 00 00       	mov    $0x0,%eax
81003fc2:	c9                   	leave  
81003fc3:	c3                   	ret    

81003fc4 <__srefill_r>:
81003fc4:	55                   	push   %ebp
81003fc5:	89 e5                	mov    %esp,%ebp
81003fc7:	56                   	push   %esi
81003fc8:	53                   	push   %ebx
81003fc9:	83 ec 10             	sub    $0x10,%esp
81003fcc:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003fcf:	8b 45 08             	mov    0x8(%ebp),%eax
81003fd2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003fd5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003fd9:	74 18                	je     81003ff3 <__srefill_r+0x2f>
81003fdb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003fde:	8b 40 38             	mov    0x38(%eax),%eax
81003fe1:	85 c0                	test   %eax,%eax
81003fe3:	75 0e                	jne    81003ff3 <__srefill_r+0x2f>
81003fe5:	83 ec 0c             	sub    $0xc,%esp
81003fe8:	ff 75 f4             	pushl  -0xc(%ebp)
81003feb:	e8 4c d0 ff ff       	call   8100103c <__sinit>
81003ff0:	83 c4 10             	add    $0x10,%esp
81003ff3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003ff7:	98                   	cwtl   
81003ff8:	25 00 20 00 00       	and    $0x2000,%eax
81003ffd:	85 c0                	test   %eax,%eax
81003fff:	75 14                	jne    81004015 <__srefill_r+0x51>
81004001:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004005:	80 cc 20             	or     $0x20,%ah
81004008:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100400c:	8b 43 64             	mov    0x64(%ebx),%eax
8100400f:	80 e4 df             	and    $0xdf,%ah
81004012:	89 43 64             	mov    %eax,0x64(%ebx)
81004015:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100401c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004020:	98                   	cwtl   
81004021:	83 e0 20             	and    $0x20,%eax
81004024:	85 c0                	test   %eax,%eax
81004026:	74 0a                	je     81004032 <__srefill_r+0x6e>
81004028:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100402d:	e9 8c 01 00 00       	jmp    810041be <__srefill_r+0x1fa>
81004032:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004036:	98                   	cwtl   
81004037:	83 e0 04             	and    $0x4,%eax
8100403a:	85 c0                	test   %eax,%eax
8100403c:	75 79                	jne    810040b7 <__srefill_r+0xf3>
8100403e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004042:	98                   	cwtl   
81004043:	83 e0 10             	and    $0x10,%eax
81004046:	85 c0                	test   %eax,%eax
81004048:	75 1e                	jne    81004068 <__srefill_r+0xa4>
8100404a:	8b 45 08             	mov    0x8(%ebp),%eax
8100404d:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81004053:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004057:	83 c8 40             	or     $0x40,%eax
8100405a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100405e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004063:	e9 56 01 00 00       	jmp    810041be <__srefill_r+0x1fa>
81004068:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100406c:	98                   	cwtl   
8100406d:	83 e0 08             	and    $0x8,%eax
81004070:	85 c0                	test   %eax,%eax
81004072:	74 36                	je     810040aa <__srefill_r+0xe6>
81004074:	83 ec 08             	sub    $0x8,%esp
81004077:	53                   	push   %ebx
81004078:	ff 75 08             	pushl  0x8(%ebp)
8100407b:	e8 b9 ca ff ff       	call   81000b39 <_fflush_r>
81004080:	83 c4 10             	add    $0x10,%esp
81004083:	85 c0                	test   %eax,%eax
81004085:	74 0a                	je     81004091 <__srefill_r+0xcd>
81004087:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100408c:	e9 2d 01 00 00       	jmp    810041be <__srefill_r+0x1fa>
81004091:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004095:	83 e0 f7             	and    $0xfffffff7,%eax
81004098:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100409c:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810040a3:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
810040aa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040ae:	83 c8 04             	or     $0x4,%eax
810040b1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810040b5:	eb 46                	jmp    810040fd <__srefill_r+0x139>
810040b7:	8b 43 30             	mov    0x30(%ebx),%eax
810040ba:	85 c0                	test   %eax,%eax
810040bc:	74 3f                	je     810040fd <__srefill_r+0x139>
810040be:	8b 53 30             	mov    0x30(%ebx),%edx
810040c1:	8d 43 40             	lea    0x40(%ebx),%eax
810040c4:	39 c2                	cmp    %eax,%edx
810040c6:	74 12                	je     810040da <__srefill_r+0x116>
810040c8:	8b 43 30             	mov    0x30(%ebx),%eax
810040cb:	83 ec 08             	sub    $0x8,%esp
810040ce:	50                   	push   %eax
810040cf:	ff 75 08             	pushl  0x8(%ebp)
810040d2:	e8 c7 d0 ff ff       	call   8100119e <_free_r>
810040d7:	83 c4 10             	add    $0x10,%esp
810040da:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810040e1:	8b 43 3c             	mov    0x3c(%ebx),%eax
810040e4:	89 43 04             	mov    %eax,0x4(%ebx)
810040e7:	8b 43 04             	mov    0x4(%ebx),%eax
810040ea:	85 c0                	test   %eax,%eax
810040ec:	74 0f                	je     810040fd <__srefill_r+0x139>
810040ee:	8b 43 38             	mov    0x38(%ebx),%eax
810040f1:	89 03                	mov    %eax,(%ebx)
810040f3:	b8 00 00 00 00       	mov    $0x0,%eax
810040f8:	e9 c1 00 00 00       	jmp    810041be <__srefill_r+0x1fa>
810040fd:	8b 43 10             	mov    0x10(%ebx),%eax
81004100:	85 c0                	test   %eax,%eax
81004102:	75 0f                	jne    81004113 <__srefill_r+0x14f>
81004104:	83 ec 08             	sub    $0x8,%esp
81004107:	53                   	push   %ebx
81004108:	ff 75 08             	pushl  0x8(%ebp)
8100410b:	e8 d8 16 00 00       	call   810057e8 <__smakebuf_r>
81004110:	83 c4 10             	add    $0x10,%esp
81004113:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004117:	98                   	cwtl   
81004118:	83 e0 03             	and    $0x3,%eax
8100411b:	85 c0                	test   %eax,%eax
8100411d:	74 48                	je     81004167 <__srefill_r+0x1a3>
8100411f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004123:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
81004127:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
8100412d:	a1 70 6b 00 81       	mov    0x81006b70,%eax
81004132:	83 ec 08             	sub    $0x8,%esp
81004135:	68 97 3f 00 81       	push   $0x81003f97
8100413a:	50                   	push   %eax
8100413b:	e8 9a d5 ff ff       	call   810016da <_fwalk>
81004140:	83 c4 10             	add    $0x10,%esp
81004143:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
81004147:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100414b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100414f:	98                   	cwtl   
81004150:	83 e0 09             	and    $0x9,%eax
81004153:	83 f8 09             	cmp    $0x9,%eax
81004156:	75 0f                	jne    81004167 <__srefill_r+0x1a3>
81004158:	83 ec 08             	sub    $0x8,%esp
8100415b:	53                   	push   %ebx
8100415c:	ff 75 08             	pushl  0x8(%ebp)
8100415f:	e8 af c7 ff ff       	call   81000913 <__sflush_r>
81004164:	83 c4 10             	add    $0x10,%esp
81004167:	8b 43 10             	mov    0x10(%ebx),%eax
8100416a:	89 03                	mov    %eax,(%ebx)
8100416c:	8b 43 20             	mov    0x20(%ebx),%eax
8100416f:	8b 73 14             	mov    0x14(%ebx),%esi
81004172:	8b 0b                	mov    (%ebx),%ecx
81004174:	8b 53 1c             	mov    0x1c(%ebx),%edx
81004177:	56                   	push   %esi
81004178:	51                   	push   %ecx
81004179:	52                   	push   %edx
8100417a:	ff 75 08             	pushl  0x8(%ebp)
8100417d:	ff d0                	call   *%eax
8100417f:	83 c4 10             	add    $0x10,%esp
81004182:	89 43 04             	mov    %eax,0x4(%ebx)
81004185:	8b 43 04             	mov    0x4(%ebx),%eax
81004188:	85 c0                	test   %eax,%eax
8100418a:	7f 2d                	jg     810041b9 <__srefill_r+0x1f5>
8100418c:	8b 43 04             	mov    0x4(%ebx),%eax
8100418f:	85 c0                	test   %eax,%eax
81004191:	75 0d                	jne    810041a0 <__srefill_r+0x1dc>
81004193:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004197:	83 c8 20             	or     $0x20,%eax
8100419a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100419e:	eb 12                	jmp    810041b2 <__srefill_r+0x1ee>
810041a0:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810041a7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041ab:	83 c8 40             	or     $0x40,%eax
810041ae:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810041b2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810041b7:	eb 05                	jmp    810041be <__srefill_r+0x1fa>
810041b9:	b8 00 00 00 00       	mov    $0x0,%eax
810041be:	8d 65 f8             	lea    -0x8(%ebp),%esp
810041c1:	5b                   	pop    %ebx
810041c2:	5e                   	pop    %esi
810041c3:	5d                   	pop    %ebp
810041c4:	c3                   	ret    

810041c5 <_sbrk_r>:
810041c5:	55                   	push   %ebp
810041c6:	89 e5                	mov    %esp,%ebp
810041c8:	83 ec 18             	sub    $0x18,%esp
810041cb:	c7 05 74 7d 00 81 00 	movl   $0x0,0x81007d74
810041d2:	00 00 00 
810041d5:	83 ec 0c             	sub    $0xc,%esp
810041d8:	ff 75 0c             	pushl  0xc(%ebp)
810041db:	e8 36 c6 ff ff       	call   81000816 <sbrk>
810041e0:	83 c4 10             	add    $0x10,%esp
810041e3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810041e6:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810041ea:	75 14                	jne    81004200 <_sbrk_r+0x3b>
810041ec:	a1 74 7d 00 81       	mov    0x81007d74,%eax
810041f1:	85 c0                	test   %eax,%eax
810041f3:	74 0b                	je     81004200 <_sbrk_r+0x3b>
810041f5:	8b 15 74 7d 00 81    	mov    0x81007d74,%edx
810041fb:	8b 45 08             	mov    0x8(%ebp),%eax
810041fe:	89 10                	mov    %edx,(%eax)
81004200:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004203:	c9                   	leave  
81004204:	c3                   	ret    

81004205 <__sread>:
81004205:	55                   	push   %ebp
81004206:	89 e5                	mov    %esp,%ebp
81004208:	56                   	push   %esi
81004209:	53                   	push   %ebx
8100420a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100420d:	8b 55 14             	mov    0x14(%ebp),%edx
81004210:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81004214:	98                   	cwtl   
81004215:	52                   	push   %edx
81004216:	ff 75 10             	pushl  0x10(%ebp)
81004219:	50                   	push   %eax
8100421a:	ff 75 08             	pushl  0x8(%ebp)
8100421d:	e8 6f 19 00 00       	call   81005b91 <_read_r>
81004222:	83 c4 10             	add    $0x10,%esp
81004225:	89 c6                	mov    %eax,%esi
81004227:	85 f6                	test   %esi,%esi
81004229:	78 0a                	js     81004235 <__sread+0x30>
8100422b:	8b 43 50             	mov    0x50(%ebx),%eax
8100422e:	01 f0                	add    %esi,%eax
81004230:	89 43 50             	mov    %eax,0x50(%ebx)
81004233:	eb 0b                	jmp    81004240 <__sread+0x3b>
81004235:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004239:	80 e4 ef             	and    $0xef,%ah
8100423c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004240:	89 f0                	mov    %esi,%eax
81004242:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004245:	5b                   	pop    %ebx
81004246:	5e                   	pop    %esi
81004247:	5d                   	pop    %ebp
81004248:	c3                   	ret    

81004249 <__seofread>:
81004249:	55                   	push   %ebp
8100424a:	89 e5                	mov    %esp,%ebp
8100424c:	b8 00 00 00 00       	mov    $0x0,%eax
81004251:	5d                   	pop    %ebp
81004252:	c3                   	ret    

81004253 <__swrite>:
81004253:	55                   	push   %ebp
81004254:	89 e5                	mov    %esp,%ebp
81004256:	53                   	push   %ebx
81004257:	83 ec 14             	sub    $0x14,%esp
8100425a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100425d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004261:	98                   	cwtl   
81004262:	25 00 01 00 00       	and    $0x100,%eax
81004267:	85 c0                	test   %eax,%eax
81004269:	74 15                	je     81004280 <__swrite+0x2d>
8100426b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100426f:	98                   	cwtl   
81004270:	6a 02                	push   $0x2
81004272:	6a 00                	push   $0x0
81004274:	50                   	push   %eax
81004275:	ff 75 08             	pushl  0x8(%ebp)
81004278:	e8 25 15 00 00       	call   810057a2 <_lseek_r>
8100427d:	83 c4 10             	add    $0x10,%esp
81004280:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004284:	80 e4 ef             	and    $0xef,%ah
81004287:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100428b:	8b 55 14             	mov    0x14(%ebp),%edx
8100428e:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81004292:	98                   	cwtl   
81004293:	52                   	push   %edx
81004294:	ff 75 10             	pushl  0x10(%ebp)
81004297:	50                   	push   %eax
81004298:	ff 75 08             	pushl  0x8(%ebp)
8100429b:	e8 42 07 00 00       	call   810049e2 <_write_r>
810042a0:	83 c4 10             	add    $0x10,%esp
810042a3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810042a6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042a9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810042ac:	c9                   	leave  
810042ad:	c3                   	ret    

810042ae <__sseek>:
810042ae:	55                   	push   %ebp
810042af:	89 e5                	mov    %esp,%ebp
810042b1:	56                   	push   %esi
810042b2:	53                   	push   %ebx
810042b3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810042b6:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810042ba:	98                   	cwtl   
810042bb:	ff 75 14             	pushl  0x14(%ebp)
810042be:	ff 75 10             	pushl  0x10(%ebp)
810042c1:	50                   	push   %eax
810042c2:	ff 75 08             	pushl  0x8(%ebp)
810042c5:	e8 d8 14 00 00       	call   810057a2 <_lseek_r>
810042ca:	83 c4 10             	add    $0x10,%esp
810042cd:	89 c6                	mov    %eax,%esi
810042cf:	83 fe ff             	cmp    $0xffffffff,%esi
810042d2:	75 0d                	jne    810042e1 <__sseek+0x33>
810042d4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810042d8:	80 e4 ef             	and    $0xef,%ah
810042db:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810042df:	eb 0e                	jmp    810042ef <__sseek+0x41>
810042e1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810042e5:	80 cc 10             	or     $0x10,%ah
810042e8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810042ec:	89 73 50             	mov    %esi,0x50(%ebx)
810042ef:	89 f0                	mov    %esi,%eax
810042f1:	8d 65 f8             	lea    -0x8(%ebp),%esp
810042f4:	5b                   	pop    %ebx
810042f5:	5e                   	pop    %esi
810042f6:	5d                   	pop    %ebp
810042f7:	c3                   	ret    

810042f8 <__sclose>:
810042f8:	55                   	push   %ebp
810042f9:	89 e5                	mov    %esp,%ebp
810042fb:	83 ec 18             	sub    $0x18,%esp
810042fe:	8b 45 0c             	mov    0xc(%ebp),%eax
81004301:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004304:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004307:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100430b:	98                   	cwtl   
8100430c:	83 ec 08             	sub    $0x8,%esp
8100430f:	50                   	push   %eax
81004310:	ff 75 08             	pushl  0x8(%ebp)
81004313:	e8 80 09 00 00       	call   81004c98 <_close_r>
81004318:	83 c4 10             	add    $0x10,%esp
8100431b:	c9                   	leave  
8100431c:	c3                   	ret    
8100431d:	66 90                	xchg   %ax,%ax
8100431f:	90                   	nop

81004320 <strchr>:
81004320:	55                   	push   %ebp
81004321:	89 e5                	mov    %esp,%ebp
81004323:	57                   	push   %edi
81004324:	53                   	push   %ebx
81004325:	31 db                	xor    %ebx,%ebx
81004327:	8b 7d 08             	mov    0x8(%ebp),%edi
8100432a:	02 5d 0c             	add    0xc(%ebp),%bl
8100432d:	0f 84 98 00 00 00    	je     810043cb <L25>
81004333:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004339:	74 37                	je     81004372 <L5>
8100433b:	89 f8                	mov    %edi,%eax
8100433d:	8a 08                	mov    (%eax),%cl
8100433f:	84 c9                	test   %cl,%cl
81004341:	74 7b                	je     810043be <L14>
81004343:	38 d9                	cmp    %bl,%cl
81004345:	74 7d                	je     810043c4 <L19>
81004347:	47                   	inc    %edi
81004348:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100434e:	74 22                	je     81004372 <L5>
81004350:	89 f8                	mov    %edi,%eax
81004352:	8a 08                	mov    (%eax),%cl
81004354:	84 c9                	test   %cl,%cl
81004356:	74 66                	je     810043be <L14>
81004358:	38 d9                	cmp    %bl,%cl
8100435a:	74 68                	je     810043c4 <L19>
8100435c:	47                   	inc    %edi
8100435d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004363:	74 0d                	je     81004372 <L5>
81004365:	89 f8                	mov    %edi,%eax
81004367:	8a 08                	mov    (%eax),%cl
81004369:	84 c9                	test   %cl,%cl
8100436b:	74 51                	je     810043be <L14>
8100436d:	38 d9                	cmp    %bl,%cl
8100436f:	74 53                	je     810043c4 <L19>
81004371:	47                   	inc    %edi

81004372 <L5>:
81004372:	89 d9                	mov    %ebx,%ecx
81004374:	c1 e3 08             	shl    $0x8,%ebx
81004377:	83 ef 04             	sub    $0x4,%edi
8100437a:	09 cb                	or     %ecx,%ebx
8100437c:	89 da                	mov    %ebx,%edx
8100437e:	c1 e3 10             	shl    $0x10,%ebx
81004381:	09 d3                	or     %edx,%ebx

81004383 <L10>:
81004383:	83 c7 04             	add    $0x4,%edi
81004386:	8b 0f                	mov    (%edi),%ecx
81004388:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100438e:	89 c8                	mov    %ecx,%eax
81004390:	f7 d0                	not    %eax
81004392:	21 c2                	and    %eax,%edx
81004394:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
8100439a:	75 14                	jne    810043b0 <L9>
8100439c:	31 d9                	xor    %ebx,%ecx
8100439e:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810043a4:	f7 d1                	not    %ecx
810043a6:	21 ca                	and    %ecx,%edx
810043a8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810043ae:	74 d3                	je     81004383 <L10>

810043b0 <L9>:
810043b0:	8d 47 ff             	lea    -0x1(%edi),%eax

810043b3 <L15>:
810043b3:	40                   	inc    %eax
810043b4:	8a 10                	mov    (%eax),%dl
810043b6:	84 d2                	test   %dl,%dl
810043b8:	74 04                	je     810043be <L14>
810043ba:	38 da                	cmp    %bl,%dl
810043bc:	75 f5                	jne    810043b3 <L15>

810043be <L14>:
810043be:	38 18                	cmp    %bl,(%eax)
810043c0:	74 02                	je     810043c4 <L19>
810043c2:	31 c0                	xor    %eax,%eax

810043c4 <L19>:
810043c4:	8d 65 f8             	lea    -0x8(%ebp),%esp
810043c7:	5b                   	pop    %ebx
810043c8:	5f                   	pop    %edi
810043c9:	c9                   	leave  
810043ca:	c3                   	ret    

810043cb <L25>:
810043cb:	f7 c7 03 00 00 00    	test   $0x3,%edi
810043d1:	74 2b                	je     810043fe <L26>
810043d3:	89 f8                	mov    %edi,%eax
810043d5:	8a 08                	mov    (%eax),%cl
810043d7:	84 c9                	test   %cl,%cl
810043d9:	74 e9                	je     810043c4 <L19>
810043db:	47                   	inc    %edi
810043dc:	f7 c7 03 00 00 00    	test   $0x3,%edi
810043e2:	74 1a                	je     810043fe <L26>
810043e4:	89 f8                	mov    %edi,%eax
810043e6:	8a 08                	mov    (%eax),%cl
810043e8:	84 c9                	test   %cl,%cl
810043ea:	74 d8                	je     810043c4 <L19>
810043ec:	47                   	inc    %edi
810043ed:	f7 c7 03 00 00 00    	test   $0x3,%edi
810043f3:	74 09                	je     810043fe <L26>
810043f5:	89 f8                	mov    %edi,%eax
810043f7:	8a 08                	mov    (%eax),%cl
810043f9:	84 c9                	test   %cl,%cl
810043fb:	74 c7                	je     810043c4 <L19>
810043fd:	47                   	inc    %edi

810043fe <L26>:
810043fe:	83 ef 04             	sub    $0x4,%edi

81004401 <L27>:
81004401:	83 c7 04             	add    $0x4,%edi
81004404:	8b 0f                	mov    (%edi),%ecx
81004406:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100440c:	89 c8                	mov    %ecx,%eax
8100440e:	f7 d0                	not    %eax
81004410:	21 c2                	and    %eax,%edx
81004412:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81004418:	74 e7                	je     81004401 <L27>
8100441a:	eb 94                	jmp    810043b0 <L9>

8100441c <strcmp>:
8100441c:	55                   	push   %ebp
8100441d:	89 e5                	mov    %esp,%ebp
8100441f:	83 ec 10             	sub    $0x10,%esp
81004422:	8b 55 08             	mov    0x8(%ebp),%edx
81004425:	8b 45 0c             	mov    0xc(%ebp),%eax
81004428:	09 d0                	or     %edx,%eax
8100442a:	83 e0 03             	and    $0x3,%eax
8100442d:	85 c0                	test   %eax,%eax
8100442f:	75 5e                	jne    8100448f <strcmp+0x73>
81004431:	8b 45 08             	mov    0x8(%ebp),%eax
81004434:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004437:	8b 45 0c             	mov    0xc(%ebp),%eax
8100443a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100443d:	eb 2c                	jmp    8100446b <strcmp+0x4f>
8100443f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004442:	8b 00                	mov    (%eax),%eax
81004444:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100444a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100444d:	8b 00                	mov    (%eax),%eax
8100444f:	f7 d0                	not    %eax
81004451:	21 d0                	and    %edx,%eax
81004453:	25 80 80 80 80       	and    $0x80808080,%eax
81004458:	85 c0                	test   %eax,%eax
8100445a:	74 07                	je     81004463 <strcmp+0x47>
8100445c:	b8 00 00 00 00       	mov    $0x0,%eax
81004461:	eb 5c                	jmp    810044bf <strcmp+0xa3>
81004463:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81004467:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
8100446b:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100446e:	8b 10                	mov    (%eax),%edx
81004470:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004473:	8b 00                	mov    (%eax),%eax
81004475:	39 c2                	cmp    %eax,%edx
81004477:	74 c6                	je     8100443f <strcmp+0x23>
81004479:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100447c:	89 45 08             	mov    %eax,0x8(%ebp)
8100447f:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004482:	89 45 0c             	mov    %eax,0xc(%ebp)
81004485:	eb 08                	jmp    8100448f <strcmp+0x73>
81004487:	83 45 08 01          	addl   $0x1,0x8(%ebp)
8100448b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
8100448f:	8b 45 08             	mov    0x8(%ebp),%eax
81004492:	0f b6 00             	movzbl (%eax),%eax
81004495:	84 c0                	test   %al,%al
81004497:	74 10                	je     810044a9 <strcmp+0x8d>
81004499:	8b 45 08             	mov    0x8(%ebp),%eax
8100449c:	0f b6 10             	movzbl (%eax),%edx
8100449f:	8b 45 0c             	mov    0xc(%ebp),%eax
810044a2:	0f b6 00             	movzbl (%eax),%eax
810044a5:	38 c2                	cmp    %al,%dl
810044a7:	74 de                	je     81004487 <strcmp+0x6b>
810044a9:	8b 45 08             	mov    0x8(%ebp),%eax
810044ac:	0f b6 00             	movzbl (%eax),%eax
810044af:	0f b6 d0             	movzbl %al,%edx
810044b2:	8b 45 0c             	mov    0xc(%ebp),%eax
810044b5:	0f b6 00             	movzbl (%eax),%eax
810044b8:	0f b6 c8             	movzbl %al,%ecx
810044bb:	89 d0                	mov    %edx,%eax
810044bd:	29 c8                	sub    %ecx,%eax
810044bf:	c9                   	leave  
810044c0:	c3                   	ret    
810044c1:	66 90                	xchg   %ax,%ax
810044c3:	66 90                	xchg   %ax,%ax
810044c5:	66 90                	xchg   %ax,%ax
810044c7:	66 90                	xchg   %ax,%ax
810044c9:	66 90                	xchg   %ax,%ax
810044cb:	66 90                	xchg   %ax,%ax
810044cd:	66 90                	xchg   %ax,%ax
810044cf:	90                   	nop

810044d0 <strlen>:
810044d0:	55                   	push   %ebp
810044d1:	89 e5                	mov    %esp,%ebp
810044d3:	57                   	push   %edi
810044d4:	8b 55 08             	mov    0x8(%ebp),%edx
810044d7:	89 d7                	mov    %edx,%edi
810044d9:	f7 c7 03 00 00 00    	test   $0x3,%edi
810044df:	74 25                	je     81004506 <L5>
810044e1:	8a 0f                	mov    (%edi),%cl
810044e3:	47                   	inc    %edi
810044e4:	84 c9                	test   %cl,%cl
810044e6:	74 56                	je     8100453e <L15>
810044e8:	f7 c7 03 00 00 00    	test   $0x3,%edi
810044ee:	74 16                	je     81004506 <L5>
810044f0:	8a 0f                	mov    (%edi),%cl
810044f2:	47                   	inc    %edi
810044f3:	84 c9                	test   %cl,%cl
810044f5:	74 47                	je     8100453e <L15>
810044f7:	f7 c7 03 00 00 00    	test   $0x3,%edi
810044fd:	74 07                	je     81004506 <L5>
810044ff:	8a 0f                	mov    (%edi),%cl
81004501:	47                   	inc    %edi
81004502:	84 c9                	test   %cl,%cl
81004504:	74 38                	je     8100453e <L15>

81004506 <L5>:
81004506:	83 ef 04             	sub    $0x4,%edi
81004509:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81004510 <L10>:
81004510:	83 c7 04             	add    $0x4,%edi
81004513:	8b 0f                	mov    (%edi),%ecx
81004515:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100451b:	f7 d1                	not    %ecx
8100451d:	21 c8                	and    %ecx,%eax
8100451f:	a9 80 80 80 80       	test   $0x80808080,%eax
81004524:	74 ea                	je     81004510 <L10>
81004526:	f7 d1                	not    %ecx
81004528:	47                   	inc    %edi
81004529:	84 c9                	test   %cl,%cl
8100452b:	74 11                	je     8100453e <L15>
8100452d:	47                   	inc    %edi
8100452e:	c1 e9 08             	shr    $0x8,%ecx
81004531:	84 c9                	test   %cl,%cl
81004533:	74 09                	je     8100453e <L15>
81004535:	47                   	inc    %edi
81004536:	c1 e9 08             	shr    $0x8,%ecx
81004539:	84 c9                	test   %cl,%cl
8100453b:	74 01                	je     8100453e <L15>
8100453d:	47                   	inc    %edi

8100453e <L15>:
8100453e:	29 d7                	sub    %edx,%edi
81004540:	8d 47 ff             	lea    -0x1(%edi),%eax
81004543:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004546:	5f                   	pop    %edi
81004547:	c9                   	leave  
81004548:	c3                   	ret    

81004549 <strtok>:
81004549:	55                   	push   %ebp
8100454a:	89 e5                	mov    %esp,%ebp
8100454c:	83 ec 18             	sub    $0x18,%esp
8100454f:	8b 55 08             	mov    0x8(%ebp),%edx
81004552:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81004555:	a1 24 73 00 81       	mov    0x81007324,%eax
8100455a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100455d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004560:	83 c0 5c             	add    $0x5c,%eax
81004563:	6a 01                	push   $0x1
81004565:	50                   	push   %eax
81004566:	51                   	push   %ecx
81004567:	52                   	push   %edx
81004568:	e8 05 00 00 00       	call   81004572 <__strtok_r>
8100456d:	83 c4 10             	add    $0x10,%esp
81004570:	c9                   	leave  
81004571:	c3                   	ret    

81004572 <__strtok_r>:
81004572:	55                   	push   %ebp
81004573:	89 e5                	mov    %esp,%ebp
81004575:	57                   	push   %edi
81004576:	56                   	push   %esi
81004577:	53                   	push   %ebx
81004578:	83 ec 10             	sub    $0x10,%esp
8100457b:	8b 45 08             	mov    0x8(%ebp),%eax
8100457e:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81004581:	85 c0                	test   %eax,%eax
81004583:	75 13                	jne    81004598 <__strtok_r+0x26>
81004585:	8b 45 10             	mov    0x10(%ebp),%eax
81004588:	8b 00                	mov    (%eax),%eax
8100458a:	85 c0                	test   %eax,%eax
8100458c:	75 0a                	jne    81004598 <__strtok_r+0x26>
8100458e:	b8 00 00 00 00       	mov    $0x0,%eax
81004593:	e9 92 00 00 00       	jmp    8100462a <__strtok_r+0xb8>
81004598:	90                   	nop
81004599:	89 c2                	mov    %eax,%edx
8100459b:	8d 42 01             	lea    0x1(%edx),%eax
8100459e:	0f b6 12             	movzbl (%edx),%edx
810045a1:	0f be f2             	movsbl %dl,%esi
810045a4:	89 cf                	mov    %ecx,%edi
810045a6:	eb 1c                	jmp    810045c4 <__strtok_r+0x52>
810045a8:	39 de                	cmp    %ebx,%esi
810045aa:	75 18                	jne    810045c4 <__strtok_r+0x52>
810045ac:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810045b0:	74 02                	je     810045b4 <__strtok_r+0x42>
810045b2:	eb e5                	jmp    81004599 <__strtok_r+0x27>
810045b4:	8b 55 10             	mov    0x10(%ebp),%edx
810045b7:	89 02                	mov    %eax,(%edx)
810045b9:	8d 50 ff             	lea    -0x1(%eax),%edx
810045bc:	c6 02 00             	movb   $0x0,(%edx)
810045bf:	83 e8 01             	sub    $0x1,%eax
810045c2:	eb 66                	jmp    8100462a <__strtok_r+0xb8>
810045c4:	89 fa                	mov    %edi,%edx
810045c6:	8d 7a 01             	lea    0x1(%edx),%edi
810045c9:	0f b6 12             	movzbl (%edx),%edx
810045cc:	0f be da             	movsbl %dl,%ebx
810045cf:	85 db                	test   %ebx,%ebx
810045d1:	75 d5                	jne    810045a8 <__strtok_r+0x36>
810045d3:	85 f6                	test   %esi,%esi
810045d5:	75 10                	jne    810045e7 <__strtok_r+0x75>
810045d7:	8b 45 10             	mov    0x10(%ebp),%eax
810045da:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810045e0:	b8 00 00 00 00       	mov    $0x0,%eax
810045e5:	eb 43                	jmp    8100462a <__strtok_r+0xb8>
810045e7:	8d 50 ff             	lea    -0x1(%eax),%edx
810045ea:	89 55 f0             	mov    %edx,-0x10(%ebp)
810045ed:	89 c2                	mov    %eax,%edx
810045ef:	8d 42 01             	lea    0x1(%edx),%eax
810045f2:	0f b6 12             	movzbl (%edx),%edx
810045f5:	0f be f2             	movsbl %dl,%esi
810045f8:	89 cf                	mov    %ecx,%edi
810045fa:	89 fa                	mov    %edi,%edx
810045fc:	8d 7a 01             	lea    0x1(%edx),%edi
810045ff:	0f b6 12             	movzbl (%edx),%edx
81004602:	0f be da             	movsbl %dl,%ebx
81004605:	39 f3                	cmp    %esi,%ebx
81004607:	75 1b                	jne    81004624 <__strtok_r+0xb2>
81004609:	85 f6                	test   %esi,%esi
8100460b:	75 07                	jne    81004614 <__strtok_r+0xa2>
8100460d:	b8 00 00 00 00       	mov    $0x0,%eax
81004612:	eb 06                	jmp    8100461a <__strtok_r+0xa8>
81004614:	8d 50 ff             	lea    -0x1(%eax),%edx
81004617:	c6 02 00             	movb   $0x0,(%edx)
8100461a:	8b 55 10             	mov    0x10(%ebp),%edx
8100461d:	89 02                	mov    %eax,(%edx)
8100461f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004622:	eb 06                	jmp    8100462a <__strtok_r+0xb8>
81004624:	85 db                	test   %ebx,%ebx
81004626:	75 d2                	jne    810045fa <__strtok_r+0x88>
81004628:	eb c3                	jmp    810045ed <__strtok_r+0x7b>
8100462a:	83 c4 10             	add    $0x10,%esp
8100462d:	5b                   	pop    %ebx
8100462e:	5e                   	pop    %esi
8100462f:	5f                   	pop    %edi
81004630:	5d                   	pop    %ebp
81004631:	c3                   	ret    

81004632 <strtok_r>:
81004632:	55                   	push   %ebp
81004633:	89 e5                	mov    %esp,%ebp
81004635:	8b 45 08             	mov    0x8(%ebp),%eax
81004638:	8b 55 0c             	mov    0xc(%ebp),%edx
8100463b:	6a 01                	push   $0x1
8100463d:	ff 75 10             	pushl  0x10(%ebp)
81004640:	52                   	push   %edx
81004641:	50                   	push   %eax
81004642:	e8 2b ff ff ff       	call   81004572 <__strtok_r>
81004647:	83 c4 10             	add    $0x10,%esp
8100464a:	c9                   	leave  
8100464b:	c3                   	ret    

8100464c <__locale_ctype_ptr_l>:
8100464c:	55                   	push   %ebp
8100464d:	89 e5                	mov    %esp,%ebp
8100464f:	b8 c0 6d 00 81       	mov    $0x81006dc0,%eax
81004654:	5d                   	pop    %ebp
81004655:	c3                   	ret    

81004656 <__get_global_locale>:
81004656:	55                   	push   %ebp
81004657:	89 e5                	mov    %esp,%ebp
81004659:	b8 60 77 00 81       	mov    $0x81007760,%eax
8100465e:	5d                   	pop    %ebp
8100465f:	c3                   	ret    

81004660 <__get_current_locale>:
81004660:	55                   	push   %ebp
81004661:	89 e5                	mov    %esp,%ebp
81004663:	e8 ee ff ff ff       	call   81004656 <__get_global_locale>
81004668:	5d                   	pop    %ebp
81004669:	c3                   	ret    

8100466a <_strtol_l>:
8100466a:	55                   	push   %ebp
8100466b:	89 e5                	mov    %esp,%ebp
8100466d:	57                   	push   %edi
8100466e:	56                   	push   %esi
8100466f:	53                   	push   %ebx
81004670:	83 ec 1c             	sub    $0x1c,%esp
81004673:	8b 75 0c             	mov    0xc(%ebp),%esi
81004676:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100467d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004681:	78 0c                	js     8100468f <_strtol_l+0x25>
81004683:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81004687:	74 06                	je     8100468f <_strtol_l+0x25>
81004689:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
8100468d:	7e 15                	jle    810046a4 <_strtol_l+0x3a>
8100468f:	e8 44 06 00 00       	call   81004cd8 <__errno>
81004694:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
8100469a:	b8 00 00 00 00       	mov    $0x0,%eax
8100469f:	e9 90 01 00 00       	jmp    81004834 <_strtol_l+0x1ca>
810046a4:	89 f0                	mov    %esi,%eax
810046a6:	8d 70 01             	lea    0x1(%eax),%esi
810046a9:	0f b6 00             	movzbl (%eax),%eax
810046ac:	0f b6 d8             	movzbl %al,%ebx
810046af:	83 ec 0c             	sub    $0xc,%esp
810046b2:	ff 75 18             	pushl  0x18(%ebp)
810046b5:	e8 92 ff ff ff       	call   8100464c <__locale_ctype_ptr_l>
810046ba:	83 c4 10             	add    $0x10,%esp
810046bd:	89 da                	mov    %ebx,%edx
810046bf:	83 c2 01             	add    $0x1,%edx
810046c2:	01 d0                	add    %edx,%eax
810046c4:	0f b6 00             	movzbl (%eax),%eax
810046c7:	0f be c0             	movsbl %al,%eax
810046ca:	83 e0 08             	and    $0x8,%eax
810046cd:	85 c0                	test   %eax,%eax
810046cf:	75 d3                	jne    810046a4 <_strtol_l+0x3a>
810046d1:	83 fb 2d             	cmp    $0x2d,%ebx
810046d4:	75 14                	jne    810046ea <_strtol_l+0x80>
810046d6:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810046dd:	89 f0                	mov    %esi,%eax
810046df:	8d 70 01             	lea    0x1(%eax),%esi
810046e2:	0f b6 00             	movzbl (%eax),%eax
810046e5:	0f b6 d8             	movzbl %al,%ebx
810046e8:	eb 10                	jmp    810046fa <_strtol_l+0x90>
810046ea:	83 fb 2b             	cmp    $0x2b,%ebx
810046ed:	75 0b                	jne    810046fa <_strtol_l+0x90>
810046ef:	89 f0                	mov    %esi,%eax
810046f1:	8d 70 01             	lea    0x1(%eax),%esi
810046f4:	0f b6 00             	movzbl (%eax),%eax
810046f7:	0f b6 d8             	movzbl %al,%ebx
810046fa:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810046fe:	74 06                	je     81004706 <_strtol_l+0x9c>
81004700:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81004704:	75 26                	jne    8100472c <_strtol_l+0xc2>
81004706:	83 fb 30             	cmp    $0x30,%ebx
81004709:	75 21                	jne    8100472c <_strtol_l+0xc2>
8100470b:	0f b6 06             	movzbl (%esi),%eax
8100470e:	3c 78                	cmp    $0x78,%al
81004710:	74 07                	je     81004719 <_strtol_l+0xaf>
81004712:	0f b6 06             	movzbl (%esi),%eax
81004715:	3c 58                	cmp    $0x58,%al
81004717:	75 13                	jne    8100472c <_strtol_l+0xc2>
81004719:	8d 46 01             	lea    0x1(%esi),%eax
8100471c:	0f b6 00             	movzbl (%eax),%eax
8100471f:	0f b6 d8             	movzbl %al,%ebx
81004722:	83 c6 02             	add    $0x2,%esi
81004725:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
8100472c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004730:	75 14                	jne    81004746 <_strtol_l+0xdc>
81004732:	83 fb 30             	cmp    $0x30,%ebx
81004735:	75 07                	jne    8100473e <_strtol_l+0xd4>
81004737:	b8 08 00 00 00       	mov    $0x8,%eax
8100473c:	eb 05                	jmp    81004743 <_strtol_l+0xd9>
8100473e:	b8 0a 00 00 00       	mov    $0xa,%eax
81004743:	89 45 14             	mov    %eax,0x14(%ebp)
81004746:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100474a:	74 07                	je     81004753 <_strtol_l+0xe9>
8100474c:	b8 00 00 00 80       	mov    $0x80000000,%eax
81004751:	eb 05                	jmp    81004758 <_strtol_l+0xee>
81004753:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81004758:	89 c7                	mov    %eax,%edi
8100475a:	8b 4d 14             	mov    0x14(%ebp),%ecx
8100475d:	89 f8                	mov    %edi,%eax
8100475f:	ba 00 00 00 00       	mov    $0x0,%edx
81004764:	f7 f1                	div    %ecx
81004766:	89 d0                	mov    %edx,%eax
81004768:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100476b:	8b 4d 14             	mov    0x14(%ebp),%ecx
8100476e:	89 f8                	mov    %edi,%eax
81004770:	ba 00 00 00 00       	mov    $0x0,%edx
81004775:	f7 f1                	div    %ecx
81004777:	89 c2                	mov    %eax,%edx
81004779:	bf 00 00 00 00       	mov    $0x0,%edi
8100477e:	b9 00 00 00 00       	mov    $0x0,%ecx
81004783:	83 fb 2f             	cmp    $0x2f,%ebx
81004786:	7e 0a                	jle    81004792 <_strtol_l+0x128>
81004788:	83 fb 39             	cmp    $0x39,%ebx
8100478b:	7f 05                	jg     81004792 <_strtol_l+0x128>
8100478d:	83 eb 30             	sub    $0x30,%ebx
81004790:	eb 1c                	jmp    810047ae <_strtol_l+0x144>
81004792:	83 fb 40             	cmp    $0x40,%ebx
81004795:	7e 0a                	jle    810047a1 <_strtol_l+0x137>
81004797:	83 fb 5a             	cmp    $0x5a,%ebx
8100479a:	7f 05                	jg     810047a1 <_strtol_l+0x137>
8100479c:	83 eb 37             	sub    $0x37,%ebx
8100479f:	eb 0d                	jmp    810047ae <_strtol_l+0x144>
810047a1:	83 fb 60             	cmp    $0x60,%ebx
810047a4:	7e 46                	jle    810047ec <_strtol_l+0x182>
810047a6:	83 fb 7a             	cmp    $0x7a,%ebx
810047a9:	7f 41                	jg     810047ec <_strtol_l+0x182>
810047ab:	83 eb 57             	sub    $0x57,%ebx
810047ae:	3b 5d 14             	cmp    0x14(%ebp),%ebx
810047b1:	7d 38                	jge    810047eb <_strtol_l+0x181>
810047b3:	89 c8                	mov    %ecx,%eax
810047b5:	85 c0                	test   %eax,%eax
810047b7:	78 0f                	js     810047c8 <_strtol_l+0x15e>
810047b9:	89 d0                	mov    %edx,%eax
810047bb:	39 c7                	cmp    %eax,%edi
810047bd:	77 09                	ja     810047c8 <_strtol_l+0x15e>
810047bf:	39 c7                	cmp    %eax,%edi
810047c1:	75 0c                	jne    810047cf <_strtol_l+0x165>
810047c3:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
810047c6:	7e 07                	jle    810047cf <_strtol_l+0x165>
810047c8:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
810047cd:	eb 0f                	jmp    810047de <_strtol_l+0x174>
810047cf:	b9 01 00 00 00       	mov    $0x1,%ecx
810047d4:	8b 45 14             	mov    0x14(%ebp),%eax
810047d7:	0f af f8             	imul   %eax,%edi
810047da:	89 d8                	mov    %ebx,%eax
810047dc:	01 c7                	add    %eax,%edi
810047de:	89 f0                	mov    %esi,%eax
810047e0:	8d 70 01             	lea    0x1(%eax),%esi
810047e3:	0f b6 00             	movzbl (%eax),%eax
810047e6:	0f b6 d8             	movzbl %al,%ebx
810047e9:	eb 98                	jmp    81004783 <_strtol_l+0x119>
810047eb:	90                   	nop
810047ec:	89 c8                	mov    %ecx,%eax
810047ee:	85 c0                	test   %eax,%eax
810047f0:	79 1f                	jns    81004811 <_strtol_l+0x1a7>
810047f2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810047f6:	74 07                	je     810047ff <_strtol_l+0x195>
810047f8:	b8 00 00 00 80       	mov    $0x80000000,%eax
810047fd:	eb 05                	jmp    81004804 <_strtol_l+0x19a>
810047ff:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81004804:	89 c7                	mov    %eax,%edi
81004806:	8b 45 08             	mov    0x8(%ebp),%eax
81004809:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
8100480f:	eb 08                	jmp    81004819 <_strtol_l+0x1af>
81004811:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004815:	74 02                	je     81004819 <_strtol_l+0x1af>
81004817:	f7 df                	neg    %edi
81004819:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100481d:	74 13                	je     81004832 <_strtol_l+0x1c8>
8100481f:	89 c8                	mov    %ecx,%eax
81004821:	85 c0                	test   %eax,%eax
81004823:	74 05                	je     8100482a <_strtol_l+0x1c0>
81004825:	8d 46 ff             	lea    -0x1(%esi),%eax
81004828:	eb 03                	jmp    8100482d <_strtol_l+0x1c3>
8100482a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100482d:	8b 55 10             	mov    0x10(%ebp),%edx
81004830:	89 02                	mov    %eax,(%edx)
81004832:	89 f8                	mov    %edi,%eax
81004834:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004837:	5b                   	pop    %ebx
81004838:	5e                   	pop    %esi
81004839:	5f                   	pop    %edi
8100483a:	5d                   	pop    %ebp
8100483b:	c3                   	ret    

8100483c <_strtol_r>:
8100483c:	55                   	push   %ebp
8100483d:	89 e5                	mov    %esp,%ebp
8100483f:	83 ec 08             	sub    $0x8,%esp
81004842:	e8 19 fe ff ff       	call   81004660 <__get_current_locale>
81004847:	83 ec 0c             	sub    $0xc,%esp
8100484a:	50                   	push   %eax
8100484b:	ff 75 14             	pushl  0x14(%ebp)
8100484e:	ff 75 10             	pushl  0x10(%ebp)
81004851:	ff 75 0c             	pushl  0xc(%ebp)
81004854:	ff 75 08             	pushl  0x8(%ebp)
81004857:	e8 0e fe ff ff       	call   8100466a <_strtol_l>
8100485c:	83 c4 20             	add    $0x20,%esp
8100485f:	c9                   	leave  
81004860:	c3                   	ret    

81004861 <strtol_l>:
81004861:	55                   	push   %ebp
81004862:	89 e5                	mov    %esp,%ebp
81004864:	83 ec 08             	sub    $0x8,%esp
81004867:	a1 24 73 00 81       	mov    0x81007324,%eax
8100486c:	83 ec 0c             	sub    $0xc,%esp
8100486f:	ff 75 14             	pushl  0x14(%ebp)
81004872:	ff 75 10             	pushl  0x10(%ebp)
81004875:	ff 75 0c             	pushl  0xc(%ebp)
81004878:	ff 75 08             	pushl  0x8(%ebp)
8100487b:	50                   	push   %eax
8100487c:	e8 e9 fd ff ff       	call   8100466a <_strtol_l>
81004881:	83 c4 20             	add    $0x20,%esp
81004884:	c9                   	leave  
81004885:	c3                   	ret    

81004886 <strtol>:
81004886:	55                   	push   %ebp
81004887:	89 e5                	mov    %esp,%ebp
81004889:	83 ec 08             	sub    $0x8,%esp
8100488c:	e8 cf fd ff ff       	call   81004660 <__get_current_locale>
81004891:	8b 15 24 73 00 81    	mov    0x81007324,%edx
81004897:	83 ec 0c             	sub    $0xc,%esp
8100489a:	50                   	push   %eax
8100489b:	ff 75 10             	pushl  0x10(%ebp)
8100489e:	ff 75 0c             	pushl  0xc(%ebp)
810048a1:	ff 75 08             	pushl  0x8(%ebp)
810048a4:	52                   	push   %edx
810048a5:	e8 c0 fd ff ff       	call   8100466a <_strtol_l>
810048aa:	83 c4 20             	add    $0x20,%esp
810048ad:	c9                   	leave  
810048ae:	c3                   	ret    

810048af <__swbuf_r>:
810048af:	55                   	push   %ebp
810048b0:	89 e5                	mov    %esp,%ebp
810048b2:	57                   	push   %edi
810048b3:	56                   	push   %esi
810048b4:	53                   	push   %ebx
810048b5:	83 ec 1c             	sub    $0x1c,%esp
810048b8:	8b 7d 0c             	mov    0xc(%ebp),%edi
810048bb:	8b 5d 10             	mov    0x10(%ebp),%ebx
810048be:	8b 45 08             	mov    0x8(%ebp),%eax
810048c1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810048c4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810048c8:	74 18                	je     810048e2 <__swbuf_r+0x33>
810048ca:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810048cd:	8b 40 38             	mov    0x38(%eax),%eax
810048d0:	85 c0                	test   %eax,%eax
810048d2:	75 0e                	jne    810048e2 <__swbuf_r+0x33>
810048d4:	83 ec 0c             	sub    $0xc,%esp
810048d7:	ff 75 e4             	pushl  -0x1c(%ebp)
810048da:	e8 5d c7 ff ff       	call   8100103c <__sinit>
810048df:	83 c4 10             	add    $0x10,%esp
810048e2:	8b 43 18             	mov    0x18(%ebx),%eax
810048e5:	89 43 08             	mov    %eax,0x8(%ebx)
810048e8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810048ec:	98                   	cwtl   
810048ed:	83 e0 08             	and    $0x8,%eax
810048f0:	85 c0                	test   %eax,%eax
810048f2:	74 07                	je     810048fb <__swbuf_r+0x4c>
810048f4:	8b 43 10             	mov    0x10(%ebx),%eax
810048f7:	85 c0                	test   %eax,%eax
810048f9:	75 1d                	jne    81004918 <__swbuf_r+0x69>
810048fb:	83 ec 08             	sub    $0x8,%esp
810048fe:	53                   	push   %ebx
810048ff:	ff 75 08             	pushl  0x8(%ebp)
81004902:	e8 21 01 00 00       	call   81004a28 <__swsetup_r>
81004907:	83 c4 10             	add    $0x10,%esp
8100490a:	85 c0                	test   %eax,%eax
8100490c:	74 0a                	je     81004918 <__swbuf_r+0x69>
8100490e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004913:	e9 a1 00 00 00       	jmp    810049b9 <__swbuf_r+0x10a>
81004918:	89 f8                	mov    %edi,%eax
8100491a:	0f b6 f8             	movzbl %al,%edi
8100491d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004921:	98                   	cwtl   
81004922:	25 00 20 00 00       	and    $0x2000,%eax
81004927:	85 c0                	test   %eax,%eax
81004929:	75 14                	jne    8100493f <__swbuf_r+0x90>
8100492b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100492f:	80 cc 20             	or     $0x20,%ah
81004932:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004936:	8b 43 64             	mov    0x64(%ebx),%eax
81004939:	80 e4 df             	and    $0xdf,%ah
8100493c:	89 43 64             	mov    %eax,0x64(%ebx)
8100493f:	8b 03                	mov    (%ebx),%eax
81004941:	8b 53 10             	mov    0x10(%ebx),%edx
81004944:	29 d0                	sub    %edx,%eax
81004946:	89 c6                	mov    %eax,%esi
81004948:	8b 43 14             	mov    0x14(%ebx),%eax
8100494b:	39 c6                	cmp    %eax,%esi
8100494d:	7c 1f                	jl     8100496e <__swbuf_r+0xbf>
8100494f:	83 ec 08             	sub    $0x8,%esp
81004952:	53                   	push   %ebx
81004953:	ff 75 08             	pushl  0x8(%ebp)
81004956:	e8 de c1 ff ff       	call   81000b39 <_fflush_r>
8100495b:	83 c4 10             	add    $0x10,%esp
8100495e:	85 c0                	test   %eax,%eax
81004960:	74 07                	je     81004969 <__swbuf_r+0xba>
81004962:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004967:	eb 50                	jmp    810049b9 <__swbuf_r+0x10a>
81004969:	be 00 00 00 00       	mov    $0x0,%esi
8100496e:	8b 43 08             	mov    0x8(%ebx),%eax
81004971:	83 e8 01             	sub    $0x1,%eax
81004974:	89 43 08             	mov    %eax,0x8(%ebx)
81004977:	8b 03                	mov    (%ebx),%eax
81004979:	8d 50 01             	lea    0x1(%eax),%edx
8100497c:	89 13                	mov    %edx,(%ebx)
8100497e:	89 fa                	mov    %edi,%edx
81004980:	88 10                	mov    %dl,(%eax)
81004982:	83 c6 01             	add    $0x1,%esi
81004985:	8b 43 14             	mov    0x14(%ebx),%eax
81004988:	39 c6                	cmp    %eax,%esi
8100498a:	74 11                	je     8100499d <__swbuf_r+0xee>
8100498c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004990:	98                   	cwtl   
81004991:	83 e0 01             	and    $0x1,%eax
81004994:	85 c0                	test   %eax,%eax
81004996:	74 1f                	je     810049b7 <__swbuf_r+0x108>
81004998:	83 ff 0a             	cmp    $0xa,%edi
8100499b:	75 1a                	jne    810049b7 <__swbuf_r+0x108>
8100499d:	83 ec 08             	sub    $0x8,%esp
810049a0:	53                   	push   %ebx
810049a1:	ff 75 08             	pushl  0x8(%ebp)
810049a4:	e8 90 c1 ff ff       	call   81000b39 <_fflush_r>
810049a9:	83 c4 10             	add    $0x10,%esp
810049ac:	85 c0                	test   %eax,%eax
810049ae:	74 07                	je     810049b7 <__swbuf_r+0x108>
810049b0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810049b5:	eb 02                	jmp    810049b9 <__swbuf_r+0x10a>
810049b7:	89 f8                	mov    %edi,%eax
810049b9:	8d 65 f4             	lea    -0xc(%ebp),%esp
810049bc:	5b                   	pop    %ebx
810049bd:	5e                   	pop    %esi
810049be:	5f                   	pop    %edi
810049bf:	5d                   	pop    %ebp
810049c0:	c3                   	ret    

810049c1 <__swbuf>:
810049c1:	55                   	push   %ebp
810049c2:	89 e5                	mov    %esp,%ebp
810049c4:	83 ec 08             	sub    $0x8,%esp
810049c7:	8b 55 08             	mov    0x8(%ebp),%edx
810049ca:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810049cd:	a1 24 73 00 81       	mov    0x81007324,%eax
810049d2:	83 ec 04             	sub    $0x4,%esp
810049d5:	51                   	push   %ecx
810049d6:	52                   	push   %edx
810049d7:	50                   	push   %eax
810049d8:	e8 d2 fe ff ff       	call   810048af <__swbuf_r>
810049dd:	83 c4 10             	add    $0x10,%esp
810049e0:	c9                   	leave  
810049e1:	c3                   	ret    

810049e2 <_write_r>:
810049e2:	55                   	push   %ebp
810049e3:	89 e5                	mov    %esp,%ebp
810049e5:	83 ec 18             	sub    $0x18,%esp
810049e8:	c7 05 74 7d 00 81 00 	movl   $0x0,0x81007d74
810049ef:	00 00 00 
810049f2:	83 ec 04             	sub    $0x4,%esp
810049f5:	ff 75 14             	pushl  0x14(%ebp)
810049f8:	ff 75 10             	pushl  0x10(%ebp)
810049fb:	ff 75 0c             	pushl  0xc(%ebp)
810049fe:	e8 50 bd ff ff       	call   81000753 <write>
81004a03:	83 c4 10             	add    $0x10,%esp
81004a06:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004a09:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004a0d:	75 14                	jne    81004a23 <_write_r+0x41>
81004a0f:	a1 74 7d 00 81       	mov    0x81007d74,%eax
81004a14:	85 c0                	test   %eax,%eax
81004a16:	74 0b                	je     81004a23 <_write_r+0x41>
81004a18:	8b 15 74 7d 00 81    	mov    0x81007d74,%edx
81004a1e:	8b 45 08             	mov    0x8(%ebp),%eax
81004a21:	89 10                	mov    %edx,(%eax)
81004a23:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004a26:	c9                   	leave  
81004a27:	c3                   	ret    

81004a28 <__swsetup_r>:
81004a28:	55                   	push   %ebp
81004a29:	89 e5                	mov    %esp,%ebp
81004a2b:	53                   	push   %ebx
81004a2c:	83 ec 14             	sub    $0x14,%esp
81004a2f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004a32:	a1 24 73 00 81       	mov    0x81007324,%eax
81004a37:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004a3a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004a3e:	74 18                	je     81004a58 <__swsetup_r+0x30>
81004a40:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004a43:	8b 40 38             	mov    0x38(%eax),%eax
81004a46:	85 c0                	test   %eax,%eax
81004a48:	75 0e                	jne    81004a58 <__swsetup_r+0x30>
81004a4a:	83 ec 0c             	sub    $0xc,%esp
81004a4d:	ff 75 f4             	pushl  -0xc(%ebp)
81004a50:	e8 e7 c5 ff ff       	call   8100103c <__sinit>
81004a55:	83 c4 10             	add    $0x10,%esp
81004a58:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a5c:	98                   	cwtl   
81004a5d:	83 e0 08             	and    $0x8,%eax
81004a60:	85 c0                	test   %eax,%eax
81004a62:	0f 85 82 00 00 00    	jne    81004aea <__swsetup_r+0xc2>
81004a68:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a6c:	98                   	cwtl   
81004a6d:	83 e0 10             	and    $0x10,%eax
81004a70:	85 c0                	test   %eax,%eax
81004a72:	75 1e                	jne    81004a92 <__swsetup_r+0x6a>
81004a74:	8b 45 08             	mov    0x8(%ebp),%eax
81004a77:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81004a7d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a81:	83 c8 40             	or     $0x40,%eax
81004a84:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004a88:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004a8d:	e9 ec 00 00 00       	jmp    81004b7e <__swsetup_r+0x156>
81004a92:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a96:	98                   	cwtl   
81004a97:	83 e0 04             	and    $0x4,%eax
81004a9a:	85 c0                	test   %eax,%eax
81004a9c:	74 41                	je     81004adf <__swsetup_r+0xb7>
81004a9e:	8b 43 30             	mov    0x30(%ebx),%eax
81004aa1:	85 c0                	test   %eax,%eax
81004aa3:	74 23                	je     81004ac8 <__swsetup_r+0xa0>
81004aa5:	8b 53 30             	mov    0x30(%ebx),%edx
81004aa8:	8d 43 40             	lea    0x40(%ebx),%eax
81004aab:	39 c2                	cmp    %eax,%edx
81004aad:	74 12                	je     81004ac1 <__swsetup_r+0x99>
81004aaf:	8b 43 30             	mov    0x30(%ebx),%eax
81004ab2:	83 ec 08             	sub    $0x8,%esp
81004ab5:	50                   	push   %eax
81004ab6:	ff 75 08             	pushl  0x8(%ebp)
81004ab9:	e8 e0 c6 ff ff       	call   8100119e <_free_r>
81004abe:	83 c4 10             	add    $0x10,%esp
81004ac1:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004ac8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004acc:	83 e0 db             	and    $0xffffffdb,%eax
81004acf:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004ad3:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004ada:	8b 43 10             	mov    0x10(%ebx),%eax
81004add:	89 03                	mov    %eax,(%ebx)
81004adf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004ae3:	83 c8 08             	or     $0x8,%eax
81004ae6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004aea:	8b 43 10             	mov    0x10(%ebx),%eax
81004aed:	85 c0                	test   %eax,%eax
81004aef:	75 2b                	jne    81004b1c <__swsetup_r+0xf4>
81004af1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004af5:	98                   	cwtl   
81004af6:	25 00 02 00 00       	and    $0x200,%eax
81004afb:	85 c0                	test   %eax,%eax
81004afd:	74 0e                	je     81004b0d <__swsetup_r+0xe5>
81004aff:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004b03:	98                   	cwtl   
81004b04:	25 80 00 00 00       	and    $0x80,%eax
81004b09:	85 c0                	test   %eax,%eax
81004b0b:	74 0f                	je     81004b1c <__swsetup_r+0xf4>
81004b0d:	83 ec 08             	sub    $0x8,%esp
81004b10:	53                   	push   %ebx
81004b11:	ff 75 08             	pushl  0x8(%ebp)
81004b14:	e8 cf 0c 00 00       	call   810057e8 <__smakebuf_r>
81004b19:	83 c4 10             	add    $0x10,%esp
81004b1c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004b20:	98                   	cwtl   
81004b21:	83 e0 01             	and    $0x1,%eax
81004b24:	85 c0                	test   %eax,%eax
81004b26:	74 11                	je     81004b39 <__swsetup_r+0x111>
81004b28:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004b2f:	8b 43 14             	mov    0x14(%ebx),%eax
81004b32:	f7 d8                	neg    %eax
81004b34:	89 43 18             	mov    %eax,0x18(%ebx)
81004b37:	eb 19                	jmp    81004b52 <__swsetup_r+0x12a>
81004b39:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004b3d:	98                   	cwtl   
81004b3e:	83 e0 02             	and    $0x2,%eax
81004b41:	85 c0                	test   %eax,%eax
81004b43:	75 05                	jne    81004b4a <__swsetup_r+0x122>
81004b45:	8b 43 14             	mov    0x14(%ebx),%eax
81004b48:	eb 05                	jmp    81004b4f <__swsetup_r+0x127>
81004b4a:	b8 00 00 00 00       	mov    $0x0,%eax
81004b4f:	89 43 08             	mov    %eax,0x8(%ebx)
81004b52:	8b 43 10             	mov    0x10(%ebx),%eax
81004b55:	85 c0                	test   %eax,%eax
81004b57:	75 20                	jne    81004b79 <__swsetup_r+0x151>
81004b59:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004b5d:	98                   	cwtl   
81004b5e:	25 80 00 00 00       	and    $0x80,%eax
81004b63:	85 c0                	test   %eax,%eax
81004b65:	74 12                	je     81004b79 <__swsetup_r+0x151>
81004b67:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004b6b:	83 c8 40             	or     $0x40,%eax
81004b6e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004b72:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004b77:	eb 05                	jmp    81004b7e <__swsetup_r+0x156>
81004b79:	b8 00 00 00 00       	mov    $0x0,%eax
81004b7e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004b81:	c9                   	leave  
81004b82:	c3                   	ret    

81004b83 <__call_exitprocs>:
81004b83:	55                   	push   %ebp
81004b84:	89 e5                	mov    %esp,%ebp
81004b86:	57                   	push   %edi
81004b87:	56                   	push   %esi
81004b88:	53                   	push   %ebx
81004b89:	83 ec 1c             	sub    $0x1c,%esp
81004b8c:	a1 70 6b 00 81       	mov    0x81006b70,%eax
81004b91:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
81004b97:	a1 70 6b 00 81       	mov    0x81006b70,%eax
81004b9c:	05 48 01 00 00       	add    $0x148,%eax
81004ba1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004ba4:	90                   	nop
81004ba5:	85 db                	test   %ebx,%ebx
81004ba7:	0f 84 e1 00 00 00    	je     81004c8e <__call_exitprocs+0x10b>
81004bad:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
81004bb3:	8b 43 04             	mov    0x4(%ebx),%eax
81004bb6:	8d 70 ff             	lea    -0x1(%eax),%esi
81004bb9:	e9 c6 00 00 00       	jmp    81004c84 <__call_exitprocs+0x101>
81004bbe:	b8 01 00 00 00       	mov    $0x1,%eax
81004bc3:	89 f1                	mov    %esi,%ecx
81004bc5:	d3 e0                	shl    %cl,%eax
81004bc7:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004bca:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004bce:	74 17                	je     81004be7 <__call_exitprocs+0x64>
81004bd0:	85 ff                	test   %edi,%edi
81004bd2:	0f 84 a5 00 00 00    	je     81004c7d <__call_exitprocs+0xfa>
81004bd8:	8d 46 20             	lea    0x20(%esi),%eax
81004bdb:	8b 04 87             	mov    (%edi,%eax,4),%eax
81004bde:	39 45 0c             	cmp    %eax,0xc(%ebp)
81004be1:	0f 85 96 00 00 00    	jne    81004c7d <__call_exitprocs+0xfa>
81004be7:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
81004beb:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004bee:	8b 43 04             	mov    0x4(%ebx),%eax
81004bf1:	83 e8 01             	sub    $0x1,%eax
81004bf4:	39 c6                	cmp    %eax,%esi
81004bf6:	75 0b                	jne    81004c03 <__call_exitprocs+0x80>
81004bf8:	8b 43 04             	mov    0x4(%ebx),%eax
81004bfb:	83 e8 01             	sub    $0x1,%eax
81004bfe:	89 43 04             	mov    %eax,0x4(%ebx)
81004c01:	eb 08                	jmp    81004c0b <__call_exitprocs+0x88>
81004c03:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
81004c0a:	00 
81004c0b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81004c0f:	74 6f                	je     81004c80 <__call_exitprocs+0xfd>
81004c11:	8b 43 04             	mov    0x4(%ebx),%eax
81004c14:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004c17:	85 ff                	test   %edi,%edi
81004c19:	74 0f                	je     81004c2a <__call_exitprocs+0xa7>
81004c1b:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81004c21:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004c24:	21 d0                	and    %edx,%eax
81004c26:	85 c0                	test   %eax,%eax
81004c28:	75 07                	jne    81004c31 <__call_exitprocs+0xae>
81004c2a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004c2d:	ff d0                	call   *%eax
81004c2f:	eb 32                	jmp    81004c63 <__call_exitprocs+0xe0>
81004c31:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
81004c37:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004c3a:	21 d0                	and    %edx,%eax
81004c3c:	85 c0                	test   %eax,%eax
81004c3e:	75 14                	jne    81004c54 <__call_exitprocs+0xd1>
81004c40:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81004c43:	83 ec 08             	sub    $0x8,%esp
81004c46:	50                   	push   %eax
81004c47:	ff 75 08             	pushl  0x8(%ebp)
81004c4a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004c4d:	ff d0                	call   *%eax
81004c4f:	83 c4 10             	add    $0x10,%esp
81004c52:	eb 0f                	jmp    81004c63 <__call_exitprocs+0xe0>
81004c54:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81004c57:	83 ec 0c             	sub    $0xc,%esp
81004c5a:	50                   	push   %eax
81004c5b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004c5e:	ff d0                	call   *%eax
81004c60:	83 c4 10             	add    $0x10,%esp
81004c63:	8b 43 04             	mov    0x4(%ebx),%eax
81004c66:	39 45 d8             	cmp    %eax,-0x28(%ebp)
81004c69:	0f 85 1d ff ff ff    	jne    81004b8c <__call_exitprocs+0x9>
81004c6f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004c72:	8b 00                	mov    (%eax),%eax
81004c74:	39 c3                	cmp    %eax,%ebx
81004c76:	74 09                	je     81004c81 <__call_exitprocs+0xfe>
81004c78:	e9 0f ff ff ff       	jmp    81004b8c <__call_exitprocs+0x9>
81004c7d:	90                   	nop
81004c7e:	eb 01                	jmp    81004c81 <__call_exitprocs+0xfe>
81004c80:	90                   	nop
81004c81:	83 ee 01             	sub    $0x1,%esi
81004c84:	85 f6                	test   %esi,%esi
81004c86:	0f 89 32 ff ff ff    	jns    81004bbe <__call_exitprocs+0x3b>
81004c8c:	eb 01                	jmp    81004c8f <__call_exitprocs+0x10c>
81004c8e:	90                   	nop
81004c8f:	90                   	nop
81004c90:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004c93:	5b                   	pop    %ebx
81004c94:	5e                   	pop    %esi
81004c95:	5f                   	pop    %edi
81004c96:	5d                   	pop    %ebp
81004c97:	c3                   	ret    

81004c98 <_close_r>:
81004c98:	55                   	push   %ebp
81004c99:	89 e5                	mov    %esp,%ebp
81004c9b:	83 ec 18             	sub    $0x18,%esp
81004c9e:	c7 05 74 7d 00 81 00 	movl   $0x0,0x81007d74
81004ca5:	00 00 00 
81004ca8:	83 ec 0c             	sub    $0xc,%esp
81004cab:	ff 75 0c             	pushl  0xc(%ebp)
81004cae:	e8 cd ba ff ff       	call   81000780 <close>
81004cb3:	83 c4 10             	add    $0x10,%esp
81004cb6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004cb9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004cbd:	75 14                	jne    81004cd3 <_close_r+0x3b>
81004cbf:	a1 74 7d 00 81       	mov    0x81007d74,%eax
81004cc4:	85 c0                	test   %eax,%eax
81004cc6:	74 0b                	je     81004cd3 <_close_r+0x3b>
81004cc8:	8b 15 74 7d 00 81    	mov    0x81007d74,%edx
81004cce:	8b 45 08             	mov    0x8(%ebp),%eax
81004cd1:	89 10                	mov    %edx,(%eax)
81004cd3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004cd6:	c9                   	leave  
81004cd7:	c3                   	ret    

81004cd8 <__errno>:
81004cd8:	55                   	push   %ebp
81004cd9:	89 e5                	mov    %esp,%ebp
81004cdb:	a1 24 73 00 81       	mov    0x81007324,%eax
81004ce0:	5d                   	pop    %ebp
81004ce1:	c3                   	ret    

81004ce2 <_fclose_r>:
81004ce2:	55                   	push   %ebp
81004ce3:	89 e5                	mov    %esp,%ebp
81004ce5:	53                   	push   %ebx
81004ce6:	83 ec 14             	sub    $0x14,%esp
81004ce9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004cec:	85 db                	test   %ebx,%ebx
81004cee:	75 0a                	jne    81004cfa <_fclose_r+0x18>
81004cf0:	b8 00 00 00 00       	mov    $0x0,%eax
81004cf5:	e9 ea 00 00 00       	jmp    81004de4 <_fclose_r+0x102>
81004cfa:	8b 45 08             	mov    0x8(%ebp),%eax
81004cfd:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004d00:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004d04:	74 18                	je     81004d1e <_fclose_r+0x3c>
81004d06:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004d09:	8b 40 38             	mov    0x38(%eax),%eax
81004d0c:	85 c0                	test   %eax,%eax
81004d0e:	75 0e                	jne    81004d1e <_fclose_r+0x3c>
81004d10:	83 ec 0c             	sub    $0xc,%esp
81004d13:	ff 75 f0             	pushl  -0x10(%ebp)
81004d16:	e8 21 c3 ff ff       	call   8100103c <__sinit>
81004d1b:	83 c4 10             	add    $0x10,%esp
81004d1e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004d22:	66 85 c0             	test   %ax,%ax
81004d25:	75 0a                	jne    81004d31 <_fclose_r+0x4f>
81004d27:	b8 00 00 00 00       	mov    $0x0,%eax
81004d2c:	e9 b3 00 00 00       	jmp    81004de4 <_fclose_r+0x102>
81004d31:	83 ec 08             	sub    $0x8,%esp
81004d34:	53                   	push   %ebx
81004d35:	ff 75 08             	pushl  0x8(%ebp)
81004d38:	e8 d6 bb ff ff       	call   81000913 <__sflush_r>
81004d3d:	83 c4 10             	add    $0x10,%esp
81004d40:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d43:	8b 43 2c             	mov    0x2c(%ebx),%eax
81004d46:	85 c0                	test   %eax,%eax
81004d48:	74 1d                	je     81004d67 <_fclose_r+0x85>
81004d4a:	8b 43 2c             	mov    0x2c(%ebx),%eax
81004d4d:	8b 53 1c             	mov    0x1c(%ebx),%edx
81004d50:	83 ec 08             	sub    $0x8,%esp
81004d53:	52                   	push   %edx
81004d54:	ff 75 08             	pushl  0x8(%ebp)
81004d57:	ff d0                	call   *%eax
81004d59:	83 c4 10             	add    $0x10,%esp
81004d5c:	85 c0                	test   %eax,%eax
81004d5e:	79 07                	jns    81004d67 <_fclose_r+0x85>
81004d60:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81004d67:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004d6b:	98                   	cwtl   
81004d6c:	25 80 00 00 00       	and    $0x80,%eax
81004d71:	85 c0                	test   %eax,%eax
81004d73:	74 12                	je     81004d87 <_fclose_r+0xa5>
81004d75:	8b 43 10             	mov    0x10(%ebx),%eax
81004d78:	83 ec 08             	sub    $0x8,%esp
81004d7b:	50                   	push   %eax
81004d7c:	ff 75 08             	pushl  0x8(%ebp)
81004d7f:	e8 1a c4 ff ff       	call   8100119e <_free_r>
81004d84:	83 c4 10             	add    $0x10,%esp
81004d87:	8b 43 30             	mov    0x30(%ebx),%eax
81004d8a:	85 c0                	test   %eax,%eax
81004d8c:	74 23                	je     81004db1 <_fclose_r+0xcf>
81004d8e:	8b 53 30             	mov    0x30(%ebx),%edx
81004d91:	8d 43 40             	lea    0x40(%ebx),%eax
81004d94:	39 c2                	cmp    %eax,%edx
81004d96:	74 12                	je     81004daa <_fclose_r+0xc8>
81004d98:	8b 43 30             	mov    0x30(%ebx),%eax
81004d9b:	83 ec 08             	sub    $0x8,%esp
81004d9e:	50                   	push   %eax
81004d9f:	ff 75 08             	pushl  0x8(%ebp)
81004da2:	e8 f7 c3 ff ff       	call   8100119e <_free_r>
81004da7:	83 c4 10             	add    $0x10,%esp
81004daa:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004db1:	8b 43 44             	mov    0x44(%ebx),%eax
81004db4:	85 c0                	test   %eax,%eax
81004db6:	74 19                	je     81004dd1 <_fclose_r+0xef>
81004db8:	8b 43 44             	mov    0x44(%ebx),%eax
81004dbb:	83 ec 08             	sub    $0x8,%esp
81004dbe:	50                   	push   %eax
81004dbf:	ff 75 08             	pushl  0x8(%ebp)
81004dc2:	e8 d7 c3 ff ff       	call   8100119e <_free_r>
81004dc7:	83 c4 10             	add    $0x10,%esp
81004dca:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81004dd1:	e8 ff c2 ff ff       	call   810010d5 <__sfp_lock_acquire>
81004dd6:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81004ddc:	e8 fa c2 ff ff       	call   810010db <__sfp_lock_release>
81004de1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004de4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004de7:	c9                   	leave  
81004de8:	c3                   	ret    

81004de9 <fclose>:
81004de9:	55                   	push   %ebp
81004dea:	89 e5                	mov    %esp,%ebp
81004dec:	83 ec 08             	sub    $0x8,%esp
81004def:	8b 55 08             	mov    0x8(%ebp),%edx
81004df2:	a1 24 73 00 81       	mov    0x81007324,%eax
81004df7:	83 ec 08             	sub    $0x8,%esp
81004dfa:	52                   	push   %edx
81004dfb:	50                   	push   %eax
81004dfc:	e8 e1 fe ff ff       	call   81004ce2 <_fclose_r>
81004e01:	83 c4 10             	add    $0x10,%esp
81004e04:	c9                   	leave  
81004e05:	c3                   	ret    

81004e06 <_fputc_r>:
81004e06:	55                   	push   %ebp
81004e07:	89 e5                	mov    %esp,%ebp
81004e09:	83 ec 18             	sub    $0x18,%esp
81004e0c:	8b 45 08             	mov    0x8(%ebp),%eax
81004e0f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e12:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004e16:	74 18                	je     81004e30 <_fputc_r+0x2a>
81004e18:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e1b:	8b 40 38             	mov    0x38(%eax),%eax
81004e1e:	85 c0                	test   %eax,%eax
81004e20:	75 0e                	jne    81004e30 <_fputc_r+0x2a>
81004e22:	83 ec 0c             	sub    $0xc,%esp
81004e25:	ff 75 f4             	pushl  -0xc(%ebp)
81004e28:	e8 0f c2 ff ff       	call   8100103c <__sinit>
81004e2d:	83 c4 10             	add    $0x10,%esp
81004e30:	83 ec 04             	sub    $0x4,%esp
81004e33:	ff 75 10             	pushl  0x10(%ebp)
81004e36:	ff 75 0c             	pushl  0xc(%ebp)
81004e39:	ff 75 08             	pushl  0x8(%ebp)
81004e3c:	e8 b2 0c 00 00       	call   81005af3 <_putc_r>
81004e41:	83 c4 10             	add    $0x10,%esp
81004e44:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004e47:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004e4a:	c9                   	leave  
81004e4b:	c3                   	ret    

81004e4c <fputc>:
81004e4c:	55                   	push   %ebp
81004e4d:	89 e5                	mov    %esp,%ebp
81004e4f:	83 ec 18             	sub    $0x18,%esp
81004e52:	a1 24 73 00 81       	mov    0x81007324,%eax
81004e57:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e5a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e5d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004e60:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004e64:	74 18                	je     81004e7e <fputc+0x32>
81004e66:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004e69:	8b 40 38             	mov    0x38(%eax),%eax
81004e6c:	85 c0                	test   %eax,%eax
81004e6e:	75 0e                	jne    81004e7e <fputc+0x32>
81004e70:	83 ec 0c             	sub    $0xc,%esp
81004e73:	ff 75 f0             	pushl  -0x10(%ebp)
81004e76:	e8 c1 c1 ff ff       	call   8100103c <__sinit>
81004e7b:	83 c4 10             	add    $0x10,%esp
81004e7e:	83 ec 04             	sub    $0x4,%esp
81004e81:	ff 75 0c             	pushl  0xc(%ebp)
81004e84:	ff 75 08             	pushl  0x8(%ebp)
81004e87:	ff 75 f4             	pushl  -0xc(%ebp)
81004e8a:	e8 64 0c 00 00       	call   81005af3 <_putc_r>
81004e8f:	83 c4 10             	add    $0x10,%esp
81004e92:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004e95:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004e98:	c9                   	leave  
81004e99:	c3                   	ret    

81004e9a <_fputs_r>:
81004e9a:	55                   	push   %ebp
81004e9b:	89 e5                	mov    %esp,%ebp
81004e9d:	83 ec 28             	sub    $0x28,%esp
81004ea0:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ea3:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004ea6:	83 ec 0c             	sub    $0xc,%esp
81004ea9:	ff 75 0c             	pushl  0xc(%ebp)
81004eac:	e8 1f f6 ff ff       	call   810044d0 <strlen>
81004eb1:	83 c4 10             	add    $0x10,%esp
81004eb4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004eb7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004eba:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004ebd:	8d 45 dc             	lea    -0x24(%ebp),%eax
81004ec0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004ec3:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81004eca:	8b 45 08             	mov    0x8(%ebp),%eax
81004ecd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004ed0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004ed4:	74 18                	je     81004eee <_fputs_r+0x54>
81004ed6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004ed9:	8b 40 38             	mov    0x38(%eax),%eax
81004edc:	85 c0                	test   %eax,%eax
81004ede:	75 0e                	jne    81004eee <_fputs_r+0x54>
81004ee0:	83 ec 0c             	sub    $0xc,%esp
81004ee3:	ff 75 f4             	pushl  -0xc(%ebp)
81004ee6:	e8 51 c1 ff ff       	call   8100103c <__sinit>
81004eeb:	83 c4 10             	add    $0x10,%esp
81004eee:	8b 45 10             	mov    0x10(%ebp),%eax
81004ef1:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004ef5:	98                   	cwtl   
81004ef6:	25 00 20 00 00       	and    $0x2000,%eax
81004efb:	85 c0                	test   %eax,%eax
81004efd:	75 24                	jne    81004f23 <_fputs_r+0x89>
81004eff:	8b 45 10             	mov    0x10(%ebp),%eax
81004f02:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004f06:	80 cc 20             	or     $0x20,%ah
81004f09:	89 c2                	mov    %eax,%edx
81004f0b:	8b 45 10             	mov    0x10(%ebp),%eax
81004f0e:	66 89 50 0c          	mov    %dx,0xc(%eax)
81004f12:	8b 45 10             	mov    0x10(%ebp),%eax
81004f15:	8b 40 64             	mov    0x64(%eax),%eax
81004f18:	80 e4 df             	and    $0xdf,%ah
81004f1b:	89 c2                	mov    %eax,%edx
81004f1d:	8b 45 10             	mov    0x10(%ebp),%eax
81004f20:	89 50 64             	mov    %edx,0x64(%eax)
81004f23:	83 ec 04             	sub    $0x4,%esp
81004f26:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81004f29:	50                   	push   %eax
81004f2a:	ff 75 10             	pushl  0x10(%ebp)
81004f2d:	ff 75 08             	pushl  0x8(%ebp)
81004f30:	e8 df 01 00 00       	call   81005114 <__sfvwrite_r>
81004f35:	83 c4 10             	add    $0x10,%esp
81004f38:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004f3b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004f3e:	c9                   	leave  
81004f3f:	c3                   	ret    

81004f40 <fputs>:
81004f40:	55                   	push   %ebp
81004f41:	89 e5                	mov    %esp,%ebp
81004f43:	83 ec 08             	sub    $0x8,%esp
81004f46:	a1 24 73 00 81       	mov    0x81007324,%eax
81004f4b:	83 ec 04             	sub    $0x4,%esp
81004f4e:	ff 75 0c             	pushl  0xc(%ebp)
81004f51:	ff 75 08             	pushl  0x8(%ebp)
81004f54:	50                   	push   %eax
81004f55:	e8 40 ff ff ff       	call   81004e9a <_fputs_r>
81004f5a:	83 c4 10             	add    $0x10,%esp
81004f5d:	c9                   	leave  
81004f5e:	c3                   	ret    

81004f5f <__sputc_r>:
81004f5f:	55                   	push   %ebp
81004f60:	89 e5                	mov    %esp,%ebp
81004f62:	83 ec 08             	sub    $0x8,%esp
81004f65:	8b 45 10             	mov    0x10(%ebp),%eax
81004f68:	8b 40 08             	mov    0x8(%eax),%eax
81004f6b:	8d 50 ff             	lea    -0x1(%eax),%edx
81004f6e:	8b 45 10             	mov    0x10(%ebp),%eax
81004f71:	89 50 08             	mov    %edx,0x8(%eax)
81004f74:	8b 45 10             	mov    0x10(%ebp),%eax
81004f77:	8b 40 08             	mov    0x8(%eax),%eax
81004f7a:	85 c0                	test   %eax,%eax
81004f7c:	79 17                	jns    81004f95 <__sputc_r+0x36>
81004f7e:	8b 45 10             	mov    0x10(%ebp),%eax
81004f81:	8b 50 08             	mov    0x8(%eax),%edx
81004f84:	8b 45 10             	mov    0x10(%ebp),%eax
81004f87:	8b 40 18             	mov    0x18(%eax),%eax
81004f8a:	39 c2                	cmp    %eax,%edx
81004f8c:	7c 21                	jl     81004faf <__sputc_r+0x50>
81004f8e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f91:	3c 0a                	cmp    $0xa,%al
81004f93:	74 1a                	je     81004faf <__sputc_r+0x50>
81004f95:	8b 45 10             	mov    0x10(%ebp),%eax
81004f98:	8b 00                	mov    (%eax),%eax
81004f9a:	8d 48 01             	lea    0x1(%eax),%ecx
81004f9d:	8b 55 10             	mov    0x10(%ebp),%edx
81004fa0:	89 0a                	mov    %ecx,(%edx)
81004fa2:	8b 55 0c             	mov    0xc(%ebp),%edx
81004fa5:	88 10                	mov    %dl,(%eax)
81004fa7:	0f b6 00             	movzbl (%eax),%eax
81004faa:	0f b6 c0             	movzbl %al,%eax
81004fad:	eb 14                	jmp    81004fc3 <__sputc_r+0x64>
81004faf:	83 ec 04             	sub    $0x4,%esp
81004fb2:	ff 75 10             	pushl  0x10(%ebp)
81004fb5:	ff 75 0c             	pushl  0xc(%ebp)
81004fb8:	ff 75 08             	pushl  0x8(%ebp)
81004fbb:	e8 ef f8 ff ff       	call   810048af <__swbuf_r>
81004fc0:	83 c4 10             	add    $0x10,%esp
81004fc3:	c9                   	leave  
81004fc4:	c3                   	ret    

81004fc5 <__fputwc>:
81004fc5:	55                   	push   %ebp
81004fc6:	89 e5                	mov    %esp,%ebp
81004fc8:	83 ec 18             	sub    $0x18,%esp
81004fcb:	e8 9f 07 00 00       	call   8100576f <__locale_mb_cur_max>
81004fd0:	83 f8 01             	cmp    $0x1,%eax
81004fd3:	75 1e                	jne    81004ff3 <__fputwc+0x2e>
81004fd5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004fd9:	7e 18                	jle    81004ff3 <__fputwc+0x2e>
81004fdb:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
81004fe2:	7f 0f                	jg     81004ff3 <__fputwc+0x2e>
81004fe4:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fe7:	88 45 ef             	mov    %al,-0x11(%ebp)
81004fea:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81004ff1:	eb 3c                	jmp    8100502f <__fputwc+0x6a>
81004ff3:	8b 45 10             	mov    0x10(%ebp),%eax
81004ff6:	83 c0 5c             	add    $0x5c,%eax
81004ff9:	50                   	push   %eax
81004ffa:	ff 75 0c             	pushl  0xc(%ebp)
81004ffd:	8d 45 ef             	lea    -0x11(%ebp),%eax
81005000:	50                   	push   %eax
81005001:	ff 75 08             	pushl  0x8(%ebp)
81005004:	e8 36 17 00 00       	call   8100673f <_wcrtomb_r>
81005009:	83 c4 10             	add    $0x10,%esp
8100500c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100500f:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81005013:	75 1a                	jne    8100502f <__fputwc+0x6a>
81005015:	8b 45 10             	mov    0x10(%ebp),%eax
81005018:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100501c:	83 c8 40             	or     $0x40,%eax
8100501f:	89 c2                	mov    %eax,%edx
81005021:	8b 45 10             	mov    0x10(%ebp),%eax
81005024:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005028:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100502d:	eb 44                	jmp    81005073 <__fputwc+0xae>
8100502f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81005036:	eb 30                	jmp    81005068 <__fputwc+0xa3>
81005038:	8d 55 ef             	lea    -0x11(%ebp),%edx
8100503b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100503e:	01 d0                	add    %edx,%eax
81005040:	0f b6 00             	movzbl (%eax),%eax
81005043:	0f b6 c0             	movzbl %al,%eax
81005046:	83 ec 04             	sub    $0x4,%esp
81005049:	ff 75 10             	pushl  0x10(%ebp)
8100504c:	50                   	push   %eax
8100504d:	ff 75 08             	pushl  0x8(%ebp)
81005050:	e8 0a ff ff ff       	call   81004f5f <__sputc_r>
81005055:	83 c4 10             	add    $0x10,%esp
81005058:	83 f8 ff             	cmp    $0xffffffff,%eax
8100505b:	75 07                	jne    81005064 <__fputwc+0x9f>
8100505d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005062:	eb 0f                	jmp    81005073 <__fputwc+0xae>
81005064:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81005068:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100506b:	3b 45 f0             	cmp    -0x10(%ebp),%eax
8100506e:	72 c8                	jb     81005038 <__fputwc+0x73>
81005070:	8b 45 0c             	mov    0xc(%ebp),%eax
81005073:	c9                   	leave  
81005074:	c3                   	ret    

81005075 <_fputwc_r>:
81005075:	55                   	push   %ebp
81005076:	89 e5                	mov    %esp,%ebp
81005078:	83 ec 18             	sub    $0x18,%esp
8100507b:	8b 45 10             	mov    0x10(%ebp),%eax
8100507e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005082:	98                   	cwtl   
81005083:	25 00 20 00 00       	and    $0x2000,%eax
81005088:	85 c0                	test   %eax,%eax
8100508a:	75 24                	jne    810050b0 <_fputwc_r+0x3b>
8100508c:	8b 45 10             	mov    0x10(%ebp),%eax
8100508f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005093:	80 cc 20             	or     $0x20,%ah
81005096:	89 c2                	mov    %eax,%edx
81005098:	8b 45 10             	mov    0x10(%ebp),%eax
8100509b:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100509f:	8b 45 10             	mov    0x10(%ebp),%eax
810050a2:	8b 40 64             	mov    0x64(%eax),%eax
810050a5:	80 cc 20             	or     $0x20,%ah
810050a8:	89 c2                	mov    %eax,%edx
810050aa:	8b 45 10             	mov    0x10(%ebp),%eax
810050ad:	89 50 64             	mov    %edx,0x64(%eax)
810050b0:	83 ec 04             	sub    $0x4,%esp
810050b3:	ff 75 10             	pushl  0x10(%ebp)
810050b6:	ff 75 0c             	pushl  0xc(%ebp)
810050b9:	ff 75 08             	pushl  0x8(%ebp)
810050bc:	e8 04 ff ff ff       	call   81004fc5 <__fputwc>
810050c1:	83 c4 10             	add    $0x10,%esp
810050c4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810050c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810050ca:	c9                   	leave  
810050cb:	c3                   	ret    

810050cc <fputwc>:
810050cc:	55                   	push   %ebp
810050cd:	89 e5                	mov    %esp,%ebp
810050cf:	83 ec 18             	sub    $0x18,%esp
810050d2:	a1 24 73 00 81       	mov    0x81007324,%eax
810050d7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810050da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810050dd:	89 45 f0             	mov    %eax,-0x10(%ebp)
810050e0:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810050e4:	74 18                	je     810050fe <fputwc+0x32>
810050e6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810050e9:	8b 40 38             	mov    0x38(%eax),%eax
810050ec:	85 c0                	test   %eax,%eax
810050ee:	75 0e                	jne    810050fe <fputwc+0x32>
810050f0:	83 ec 0c             	sub    $0xc,%esp
810050f3:	ff 75 f0             	pushl  -0x10(%ebp)
810050f6:	e8 41 bf ff ff       	call   8100103c <__sinit>
810050fb:	83 c4 10             	add    $0x10,%esp
810050fe:	83 ec 04             	sub    $0x4,%esp
81005101:	ff 75 0c             	pushl  0xc(%ebp)
81005104:	ff 75 08             	pushl  0x8(%ebp)
81005107:	ff 75 f4             	pushl  -0xc(%ebp)
8100510a:	e8 66 ff ff ff       	call   81005075 <_fputwc_r>
8100510f:	83 c4 10             	add    $0x10,%esp
81005112:	c9                   	leave  
81005113:	c3                   	ret    

81005114 <__sfvwrite_r>:
81005114:	55                   	push   %ebp
81005115:	89 e5                	mov    %esp,%ebp
81005117:	57                   	push   %edi
81005118:	56                   	push   %esi
81005119:	53                   	push   %ebx
8100511a:	83 ec 3c             	sub    $0x3c,%esp
8100511d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005120:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
81005127:	8b 45 10             	mov    0x10(%ebp),%eax
8100512a:	8b 78 08             	mov    0x8(%eax),%edi
8100512d:	85 ff                	test   %edi,%edi
8100512f:	75 0a                	jne    8100513b <__sfvwrite_r+0x27>
81005131:	b8 00 00 00 00       	mov    $0x0,%eax
81005136:	e9 6f 04 00 00       	jmp    810055aa <__sfvwrite_r+0x496>
8100513b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100513f:	98                   	cwtl   
81005140:	83 e0 08             	and    $0x8,%eax
81005143:	85 c0                	test   %eax,%eax
81005145:	74 07                	je     8100514e <__sfvwrite_r+0x3a>
81005147:	8b 43 10             	mov    0x10(%ebx),%eax
8100514a:	85 c0                	test   %eax,%eax
8100514c:	75 1d                	jne    8100516b <__sfvwrite_r+0x57>
8100514e:	83 ec 08             	sub    $0x8,%esp
81005151:	53                   	push   %ebx
81005152:	ff 75 08             	pushl  0x8(%ebp)
81005155:	e8 ce f8 ff ff       	call   81004a28 <__swsetup_r>
8100515a:	83 c4 10             	add    $0x10,%esp
8100515d:	85 c0                	test   %eax,%eax
8100515f:	74 0a                	je     8100516b <__sfvwrite_r+0x57>
81005161:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005166:	e9 3f 04 00 00       	jmp    810055aa <__sfvwrite_r+0x496>
8100516b:	8b 45 10             	mov    0x10(%ebp),%eax
8100516e:	8b 00                	mov    (%eax),%eax
81005170:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005173:	bf 00 00 00 00       	mov    $0x0,%edi
81005178:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100517c:	98                   	cwtl   
8100517d:	83 e0 02             	and    $0x2,%eax
81005180:	85 c0                	test   %eax,%eax
81005182:	74 68                	je     810051ec <__sfvwrite_r+0xd8>
81005184:	eb 11                	jmp    81005197 <__sfvwrite_r+0x83>
81005186:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005189:	8b 08                	mov    (%eax),%ecx
8100518b:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100518e:	8b 78 04             	mov    0x4(%eax),%edi
81005191:	83 c0 08             	add    $0x8,%eax
81005194:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005197:	85 ff                	test   %edi,%edi
81005199:	74 eb                	je     81005186 <__sfvwrite_r+0x72>
8100519b:	8b 4b 24             	mov    0x24(%ebx),%ecx
8100519e:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
810051a3:	39 c7                	cmp    %eax,%edi
810051a5:	0f 46 c7             	cmovbe %edi,%eax
810051a8:	89 c2                	mov    %eax,%edx
810051aa:	8b 43 1c             	mov    0x1c(%ebx),%eax
810051ad:	52                   	push   %edx
810051ae:	ff 75 c4             	pushl  -0x3c(%ebp)
810051b1:	50                   	push   %eax
810051b2:	ff 75 08             	pushl  0x8(%ebp)
810051b5:	ff d1                	call   *%ecx
810051b7:	83 c4 10             	add    $0x10,%esp
810051ba:	89 c6                	mov    %eax,%esi
810051bc:	85 f6                	test   %esi,%esi
810051be:	0f 8e cf 03 00 00    	jle    81005593 <__sfvwrite_r+0x47f>
810051c4:	89 f0                	mov    %esi,%eax
810051c6:	01 45 c4             	add    %eax,-0x3c(%ebp)
810051c9:	89 f0                	mov    %esi,%eax
810051cb:	29 c7                	sub    %eax,%edi
810051cd:	8b 45 10             	mov    0x10(%ebp),%eax
810051d0:	8b 40 08             	mov    0x8(%eax),%eax
810051d3:	89 f2                	mov    %esi,%edx
810051d5:	29 d0                	sub    %edx,%eax
810051d7:	8b 4d 10             	mov    0x10(%ebp),%ecx
810051da:	89 41 08             	mov    %eax,0x8(%ecx)
810051dd:	8b 45 10             	mov    0x10(%ebp),%eax
810051e0:	8b 40 08             	mov    0x8(%eax),%eax
810051e3:	85 c0                	test   %eax,%eax
810051e5:	75 b0                	jne    81005197 <__sfvwrite_r+0x83>
810051e7:	e9 a0 03 00 00       	jmp    8100558c <__sfvwrite_r+0x478>
810051ec:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810051f0:	98                   	cwtl   
810051f1:	83 e0 01             	and    $0x1,%eax
810051f4:	85 c0                	test   %eax,%eax
810051f6:	0f 85 44 02 00 00    	jne    81005440 <__sfvwrite_r+0x32c>
810051fc:	eb 11                	jmp    8100520f <__sfvwrite_r+0xfb>
810051fe:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005201:	8b 08                	mov    (%eax),%ecx
81005203:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81005206:	8b 78 04             	mov    0x4(%eax),%edi
81005209:	83 c0 08             	add    $0x8,%eax
8100520c:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100520f:	85 ff                	test   %edi,%edi
81005211:	74 eb                	je     810051fe <__sfvwrite_r+0xea>
81005213:	8b 73 08             	mov    0x8(%ebx),%esi
81005216:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100521a:	98                   	cwtl   
8100521b:	25 00 02 00 00       	and    $0x200,%eax
81005220:	85 c0                	test   %eax,%eax
81005222:	0f 84 4f 01 00 00    	je     81005377 <__sfvwrite_r+0x263>
81005228:	89 f0                	mov    %esi,%eax
8100522a:	39 c7                	cmp    %eax,%edi
8100522c:	0f 82 12 01 00 00    	jb     81005344 <__sfvwrite_r+0x230>
81005232:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005236:	98                   	cwtl   
81005237:	25 80 04 00 00       	and    $0x480,%eax
8100523c:	85 c0                	test   %eax,%eax
8100523e:	0f 84 00 01 00 00    	je     81005344 <__sfvwrite_r+0x230>
81005244:	8b 03                	mov    (%ebx),%eax
81005246:	8b 53 10             	mov    0x10(%ebx),%edx
81005249:	29 d0                	sub    %edx,%eax
8100524b:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100524e:	8b 53 14             	mov    0x14(%ebx),%edx
81005251:	89 d0                	mov    %edx,%eax
81005253:	01 c0                	add    %eax,%eax
81005255:	01 d0                	add    %edx,%eax
81005257:	89 c2                	mov    %eax,%edx
81005259:	c1 ea 1f             	shr    $0x1f,%edx
8100525c:	01 d0                	add    %edx,%eax
8100525e:	d1 f8                	sar    %eax
81005260:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005263:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005266:	01 f8                	add    %edi,%eax
81005268:	8d 50 01             	lea    0x1(%eax),%edx
8100526b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100526e:	39 c2                	cmp    %eax,%edx
81005270:	76 0b                	jbe    8100527d <__sfvwrite_r+0x169>
81005272:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005275:	01 f8                	add    %edi,%eax
81005277:	83 c0 01             	add    $0x1,%eax
8100527a:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100527d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005281:	98                   	cwtl   
81005282:	25 00 04 00 00       	and    $0x400,%eax
81005287:	85 c0                	test   %eax,%eax
81005289:	74 4f                	je     810052da <__sfvwrite_r+0x1c6>
8100528b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100528e:	83 ec 08             	sub    $0x8,%esp
81005291:	50                   	push   %eax
81005292:	ff 75 08             	pushl  0x8(%ebp)
81005295:	e8 71 d6 ff ff       	call   8100290b <_malloc_r>
8100529a:	83 c4 10             	add    $0x10,%esp
8100529d:	89 45 dc             	mov    %eax,-0x24(%ebp)
810052a0:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810052a4:	75 0e                	jne    810052b4 <__sfvwrite_r+0x1a0>
810052a6:	8b 45 08             	mov    0x8(%ebp),%eax
810052a9:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810052af:	e9 e6 02 00 00       	jmp    8100559a <__sfvwrite_r+0x486>
810052b4:	8b 55 d0             	mov    -0x30(%ebp),%edx
810052b7:	8b 43 10             	mov    0x10(%ebx),%eax
810052ba:	83 ec 04             	sub    $0x4,%esp
810052bd:	52                   	push   %edx
810052be:	50                   	push   %eax
810052bf:	ff 75 dc             	pushl  -0x24(%ebp)
810052c2:	e8 51 df ff ff       	call   81003218 <memcpy>
810052c7:	83 c4 10             	add    $0x10,%esp
810052ca:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810052ce:	66 25 7f fb          	and    $0xfb7f,%ax
810052d2:	0c 80                	or     $0x80,%al
810052d4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810052d8:	eb 49                	jmp    81005323 <__sfvwrite_r+0x20f>
810052da:	8b 55 d8             	mov    -0x28(%ebp),%edx
810052dd:	8b 43 10             	mov    0x10(%ebx),%eax
810052e0:	83 ec 04             	sub    $0x4,%esp
810052e3:	52                   	push   %edx
810052e4:	50                   	push   %eax
810052e5:	ff 75 08             	pushl  0x8(%ebp)
810052e8:	e8 ea 08 00 00       	call   81005bd7 <_realloc_r>
810052ed:	83 c4 10             	add    $0x10,%esp
810052f0:	89 45 dc             	mov    %eax,-0x24(%ebp)
810052f3:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810052f7:	75 2a                	jne    81005323 <__sfvwrite_r+0x20f>
810052f9:	8b 43 10             	mov    0x10(%ebx),%eax
810052fc:	83 ec 08             	sub    $0x8,%esp
810052ff:	50                   	push   %eax
81005300:	ff 75 08             	pushl  0x8(%ebp)
81005303:	e8 96 be ff ff       	call   8100119e <_free_r>
81005308:	83 c4 10             	add    $0x10,%esp
8100530b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100530f:	24 7f                	and    $0x7f,%al
81005311:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005315:	8b 45 08             	mov    0x8(%ebp),%eax
81005318:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100531e:	e9 77 02 00 00       	jmp    8100559a <__sfvwrite_r+0x486>
81005323:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005326:	89 43 10             	mov    %eax,0x10(%ebx)
81005329:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100532c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100532f:	01 d0                	add    %edx,%eax
81005331:	89 03                	mov    %eax,(%ebx)
81005333:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005336:	89 43 14             	mov    %eax,0x14(%ebx)
81005339:	89 fe                	mov    %edi,%esi
8100533b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100533e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81005341:	89 43 08             	mov    %eax,0x8(%ebx)
81005344:	89 f0                	mov    %esi,%eax
81005346:	39 c7                	cmp    %eax,%edi
81005348:	73 02                	jae    8100534c <__sfvwrite_r+0x238>
8100534a:	89 fe                	mov    %edi,%esi
8100534c:	89 f2                	mov    %esi,%edx
8100534e:	8b 03                	mov    (%ebx),%eax
81005350:	83 ec 04             	sub    $0x4,%esp
81005353:	52                   	push   %edx
81005354:	ff 75 c4             	pushl  -0x3c(%ebp)
81005357:	50                   	push   %eax
81005358:	e8 a3 06 00 00       	call   81005a00 <memmove>
8100535d:	83 c4 10             	add    $0x10,%esp
81005360:	8b 43 08             	mov    0x8(%ebx),%eax
81005363:	29 f0                	sub    %esi,%eax
81005365:	89 43 08             	mov    %eax,0x8(%ebx)
81005368:	8b 03                	mov    (%ebx),%eax
8100536a:	89 f2                	mov    %esi,%edx
8100536c:	01 d0                	add    %edx,%eax
8100536e:	89 03                	mov    %eax,(%ebx)
81005370:	89 fe                	mov    %edi,%esi
81005372:	e9 9d 00 00 00       	jmp    81005414 <__sfvwrite_r+0x300>
81005377:	8b 13                	mov    (%ebx),%edx
81005379:	8b 43 10             	mov    0x10(%ebx),%eax
8100537c:	39 c2                	cmp    %eax,%edx
8100537e:	77 07                	ja     81005387 <__sfvwrite_r+0x273>
81005380:	8b 43 14             	mov    0x14(%ebx),%eax
81005383:	39 c7                	cmp    %eax,%edi
81005385:	73 4c                	jae    810053d3 <__sfvwrite_r+0x2bf>
81005387:	89 f0                	mov    %esi,%eax
81005389:	39 c7                	cmp    %eax,%edi
8100538b:	0f 46 c7             	cmovbe %edi,%eax
8100538e:	89 c6                	mov    %eax,%esi
81005390:	89 f2                	mov    %esi,%edx
81005392:	8b 03                	mov    (%ebx),%eax
81005394:	83 ec 04             	sub    $0x4,%esp
81005397:	52                   	push   %edx
81005398:	ff 75 c4             	pushl  -0x3c(%ebp)
8100539b:	50                   	push   %eax
8100539c:	e8 5f 06 00 00       	call   81005a00 <memmove>
810053a1:	83 c4 10             	add    $0x10,%esp
810053a4:	8b 43 08             	mov    0x8(%ebx),%eax
810053a7:	29 f0                	sub    %esi,%eax
810053a9:	89 43 08             	mov    %eax,0x8(%ebx)
810053ac:	8b 03                	mov    (%ebx),%eax
810053ae:	89 f2                	mov    %esi,%edx
810053b0:	01 d0                	add    %edx,%eax
810053b2:	89 03                	mov    %eax,(%ebx)
810053b4:	8b 43 08             	mov    0x8(%ebx),%eax
810053b7:	85 c0                	test   %eax,%eax
810053b9:	75 58                	jne    81005413 <__sfvwrite_r+0x2ff>
810053bb:	83 ec 08             	sub    $0x8,%esp
810053be:	53                   	push   %ebx
810053bf:	ff 75 08             	pushl  0x8(%ebp)
810053c2:	e8 72 b7 ff ff       	call   81000b39 <_fflush_r>
810053c7:	83 c4 10             	add    $0x10,%esp
810053ca:	85 c0                	test   %eax,%eax
810053cc:	74 45                	je     81005413 <__sfvwrite_r+0x2ff>
810053ce:	e9 c7 01 00 00       	jmp    8100559a <__sfvwrite_r+0x486>
810053d3:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
810053d9:	77 04                	ja     810053df <__sfvwrite_r+0x2cb>
810053db:	89 f8                	mov    %edi,%eax
810053dd:	eb 05                	jmp    810053e4 <__sfvwrite_r+0x2d0>
810053df:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
810053e4:	8b 4b 14             	mov    0x14(%ebx),%ecx
810053e7:	99                   	cltd   
810053e8:	f7 f9                	idiv   %ecx
810053ea:	89 c2                	mov    %eax,%edx
810053ec:	8b 43 14             	mov    0x14(%ebx),%eax
810053ef:	89 d6                	mov    %edx,%esi
810053f1:	0f af f0             	imul   %eax,%esi
810053f4:	8b 53 24             	mov    0x24(%ebx),%edx
810053f7:	8b 43 1c             	mov    0x1c(%ebx),%eax
810053fa:	56                   	push   %esi
810053fb:	ff 75 c4             	pushl  -0x3c(%ebp)
810053fe:	50                   	push   %eax
810053ff:	ff 75 08             	pushl  0x8(%ebp)
81005402:	ff d2                	call   *%edx
81005404:	83 c4 10             	add    $0x10,%esp
81005407:	89 c6                	mov    %eax,%esi
81005409:	85 f6                	test   %esi,%esi
8100540b:	0f 8e 85 01 00 00    	jle    81005596 <__sfvwrite_r+0x482>
81005411:	eb 01                	jmp    81005414 <__sfvwrite_r+0x300>
81005413:	90                   	nop
81005414:	89 f0                	mov    %esi,%eax
81005416:	01 45 c4             	add    %eax,-0x3c(%ebp)
81005419:	89 f0                	mov    %esi,%eax
8100541b:	29 c7                	sub    %eax,%edi
8100541d:	8b 45 10             	mov    0x10(%ebp),%eax
81005420:	8b 40 08             	mov    0x8(%eax),%eax
81005423:	89 f2                	mov    %esi,%edx
81005425:	29 d0                	sub    %edx,%eax
81005427:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100542a:	89 41 08             	mov    %eax,0x8(%ecx)
8100542d:	8b 45 10             	mov    0x10(%ebp),%eax
81005430:	8b 40 08             	mov    0x8(%eax),%eax
81005433:	85 c0                	test   %eax,%eax
81005435:	0f 85 d4 fd ff ff    	jne    8100520f <__sfvwrite_r+0xfb>
8100543b:	e9 4c 01 00 00       	jmp    8100558c <__sfvwrite_r+0x478>
81005440:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005447:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
8100544e:	eb 18                	jmp    81005468 <__sfvwrite_r+0x354>
81005450:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005457:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100545a:	8b 08                	mov    (%eax),%ecx
8100545c:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100545f:	8b 78 04             	mov    0x4(%eax),%edi
81005462:	83 c0 08             	add    $0x8,%eax
81005465:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005468:	85 ff                	test   %edi,%edi
8100546a:	74 e4                	je     81005450 <__sfvwrite_r+0x33c>
8100546c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005470:	75 32                	jne    810054a4 <__sfvwrite_r+0x390>
81005472:	83 ec 04             	sub    $0x4,%esp
81005475:	57                   	push   %edi
81005476:	6a 0a                	push   $0xa
81005478:	8b 75 c4             	mov    -0x3c(%ebp),%esi
8100547b:	56                   	push   %esi
8100547c:	e8 af dc ff ff       	call   81003130 <memchr>
81005481:	83 c4 10             	add    $0x10,%esp
81005484:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005487:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
8100548b:	74 0a                	je     81005497 <__sfvwrite_r+0x383>
8100548d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81005490:	83 c0 01             	add    $0x1,%eax
81005493:	29 f0                	sub    %esi,%eax
81005495:	eb 03                	jmp    8100549a <__sfvwrite_r+0x386>
81005497:	8d 47 01             	lea    0x1(%edi),%eax
8100549a:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100549d:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810054a4:	8b 45 e0             	mov    -0x20(%ebp),%eax
810054a7:	39 c7                	cmp    %eax,%edi
810054a9:	0f 46 c7             	cmovbe %edi,%eax
810054ac:	89 c1                	mov    %eax,%ecx
810054ae:	8b 53 08             	mov    0x8(%ebx),%edx
810054b1:	8b 43 14             	mov    0x14(%ebx),%eax
810054b4:	8d 34 02             	lea    (%edx,%eax,1),%esi
810054b7:	8b 13                	mov    (%ebx),%edx
810054b9:	8b 43 10             	mov    0x10(%ebx),%eax
810054bc:	39 c2                	cmp    %eax,%edx
810054be:	76 38                	jbe    810054f8 <__sfvwrite_r+0x3e4>
810054c0:	39 f1                	cmp    %esi,%ecx
810054c2:	7e 34                	jle    810054f8 <__sfvwrite_r+0x3e4>
810054c4:	89 f2                	mov    %esi,%edx
810054c6:	8b 03                	mov    (%ebx),%eax
810054c8:	83 ec 04             	sub    $0x4,%esp
810054cb:	52                   	push   %edx
810054cc:	ff 75 c4             	pushl  -0x3c(%ebp)
810054cf:	50                   	push   %eax
810054d0:	e8 2b 05 00 00       	call   81005a00 <memmove>
810054d5:	83 c4 10             	add    $0x10,%esp
810054d8:	8b 03                	mov    (%ebx),%eax
810054da:	89 f2                	mov    %esi,%edx
810054dc:	01 d0                	add    %edx,%eax
810054de:	89 03                	mov    %eax,(%ebx)
810054e0:	83 ec 08             	sub    $0x8,%esp
810054e3:	53                   	push   %ebx
810054e4:	ff 75 08             	pushl  0x8(%ebp)
810054e7:	e8 4d b6 ff ff       	call   81000b39 <_fflush_r>
810054ec:	83 c4 10             	add    $0x10,%esp
810054ef:	85 c0                	test   %eax,%eax
810054f1:	74 4f                	je     81005542 <__sfvwrite_r+0x42e>
810054f3:	e9 a2 00 00 00       	jmp    8100559a <__sfvwrite_r+0x486>
810054f8:	8b 73 14             	mov    0x14(%ebx),%esi
810054fb:	89 c8                	mov    %ecx,%eax
810054fd:	39 c6                	cmp    %eax,%esi
810054ff:	7f 1b                	jg     8100551c <__sfvwrite_r+0x408>
81005501:	8b 53 24             	mov    0x24(%ebx),%edx
81005504:	8b 43 1c             	mov    0x1c(%ebx),%eax
81005507:	56                   	push   %esi
81005508:	ff 75 c4             	pushl  -0x3c(%ebp)
8100550b:	50                   	push   %eax
8100550c:	ff 75 08             	pushl  0x8(%ebp)
8100550f:	ff d2                	call   *%edx
81005511:	83 c4 10             	add    $0x10,%esp
81005514:	89 c6                	mov    %eax,%esi
81005516:	85 f6                	test   %esi,%esi
81005518:	7f 28                	jg     81005542 <__sfvwrite_r+0x42e>
8100551a:	eb 7e                	jmp    8100559a <__sfvwrite_r+0x486>
8100551c:	89 ce                	mov    %ecx,%esi
8100551e:	89 f2                	mov    %esi,%edx
81005520:	8b 03                	mov    (%ebx),%eax
81005522:	83 ec 04             	sub    $0x4,%esp
81005525:	52                   	push   %edx
81005526:	ff 75 c4             	pushl  -0x3c(%ebp)
81005529:	50                   	push   %eax
8100552a:	e8 d1 04 00 00       	call   81005a00 <memmove>
8100552f:	83 c4 10             	add    $0x10,%esp
81005532:	8b 43 08             	mov    0x8(%ebx),%eax
81005535:	29 f0                	sub    %esi,%eax
81005537:	89 43 08             	mov    %eax,0x8(%ebx)
8100553a:	8b 03                	mov    (%ebx),%eax
8100553c:	89 f2                	mov    %esi,%edx
8100553e:	01 d0                	add    %edx,%eax
81005540:	89 03                	mov    %eax,(%ebx)
81005542:	29 75 e0             	sub    %esi,-0x20(%ebp)
81005545:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81005549:	75 1a                	jne    81005565 <__sfvwrite_r+0x451>
8100554b:	83 ec 08             	sub    $0x8,%esp
8100554e:	53                   	push   %ebx
8100554f:	ff 75 08             	pushl  0x8(%ebp)
81005552:	e8 e2 b5 ff ff       	call   81000b39 <_fflush_r>
81005557:	83 c4 10             	add    $0x10,%esp
8100555a:	85 c0                	test   %eax,%eax
8100555c:	75 3b                	jne    81005599 <__sfvwrite_r+0x485>
8100555e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005565:	89 f0                	mov    %esi,%eax
81005567:	01 45 c4             	add    %eax,-0x3c(%ebp)
8100556a:	89 f0                	mov    %esi,%eax
8100556c:	29 c7                	sub    %eax,%edi
8100556e:	8b 45 10             	mov    0x10(%ebp),%eax
81005571:	8b 40 08             	mov    0x8(%eax),%eax
81005574:	89 f2                	mov    %esi,%edx
81005576:	29 d0                	sub    %edx,%eax
81005578:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100557b:	89 41 08             	mov    %eax,0x8(%ecx)
8100557e:	8b 45 10             	mov    0x10(%ebp),%eax
81005581:	8b 40 08             	mov    0x8(%eax),%eax
81005584:	85 c0                	test   %eax,%eax
81005586:	0f 85 dc fe ff ff    	jne    81005468 <__sfvwrite_r+0x354>
8100558c:	b8 00 00 00 00       	mov    $0x0,%eax
81005591:	eb 17                	jmp    810055aa <__sfvwrite_r+0x496>
81005593:	90                   	nop
81005594:	eb 04                	jmp    8100559a <__sfvwrite_r+0x486>
81005596:	90                   	nop
81005597:	eb 01                	jmp    8100559a <__sfvwrite_r+0x486>
81005599:	90                   	nop
8100559a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100559e:	83 c8 40             	or     $0x40,%eax
810055a1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810055a5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810055aa:	8d 65 f4             	lea    -0xc(%ebp),%esp
810055ad:	5b                   	pop    %ebx
810055ae:	5e                   	pop    %esi
810055af:	5f                   	pop    %edi
810055b0:	5d                   	pop    %ebp
810055b1:	c3                   	ret    

810055b2 <_findenv>:
810055b2:	55                   	push   %ebp
810055b3:	89 e5                	mov    %esp,%ebp
810055b5:	83 ec 08             	sub    $0x8,%esp
810055b8:	8b 55 08             	mov    0x8(%ebp),%edx
810055bb:	a1 24 73 00 81       	mov    0x81007324,%eax
810055c0:	83 ec 04             	sub    $0x4,%esp
810055c3:	ff 75 0c             	pushl  0xc(%ebp)
810055c6:	52                   	push   %edx
810055c7:	50                   	push   %eax
810055c8:	e8 25 00 00 00       	call   810055f2 <_findenv_r>
810055cd:	83 c4 10             	add    $0x10,%esp
810055d0:	c9                   	leave  
810055d1:	c3                   	ret    

810055d2 <getenv>:
810055d2:	55                   	push   %ebp
810055d3:	89 e5                	mov    %esp,%ebp
810055d5:	83 ec 18             	sub    $0x18,%esp
810055d8:	a1 24 73 00 81       	mov    0x81007324,%eax
810055dd:	83 ec 04             	sub    $0x4,%esp
810055e0:	8d 55 f4             	lea    -0xc(%ebp),%edx
810055e3:	52                   	push   %edx
810055e4:	ff 75 08             	pushl  0x8(%ebp)
810055e7:	50                   	push   %eax
810055e8:	e8 05 00 00 00       	call   810055f2 <_findenv_r>
810055ed:	83 c4 10             	add    $0x10,%esp
810055f0:	c9                   	leave  
810055f1:	c3                   	ret    

810055f2 <_findenv_r>:
810055f2:	55                   	push   %ebp
810055f3:	89 e5                	mov    %esp,%ebp
810055f5:	57                   	push   %edi
810055f6:	56                   	push   %esi
810055f7:	53                   	push   %ebx
810055f8:	83 ec 1c             	sub    $0x1c,%esp
810055fb:	8b 7d 0c             	mov    0xc(%ebp),%edi
810055fe:	83 ec 0c             	sub    $0xc,%esp
81005601:	ff 75 08             	pushl  0x8(%ebp)
81005604:	e8 a7 12 00 00       	call   810068b0 <__env_lock>
81005609:	83 c4 10             	add    $0x10,%esp
8100560c:	a1 50 77 00 81       	mov    0x81007750,%eax
81005611:	8b 00                	mov    (%eax),%eax
81005613:	85 c0                	test   %eax,%eax
81005615:	75 18                	jne    8100562f <_findenv_r+0x3d>
81005617:	83 ec 0c             	sub    $0xc,%esp
8100561a:	ff 75 08             	pushl  0x8(%ebp)
8100561d:	e8 94 12 00 00       	call   810068b6 <__env_unlock>
81005622:	83 c4 10             	add    $0x10,%esp
81005625:	b8 00 00 00 00       	mov    $0x0,%eax
8100562a:	e9 a8 00 00 00       	jmp    810056d7 <_findenv_r+0xe5>
8100562f:	89 7d e4             	mov    %edi,-0x1c(%ebp)
81005632:	eb 04                	jmp    81005638 <_findenv_r+0x46>
81005634:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81005638:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100563b:	0f b6 00             	movzbl (%eax),%eax
8100563e:	84 c0                	test   %al,%al
81005640:	74 0a                	je     8100564c <_findenv_r+0x5a>
81005642:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005645:	0f b6 00             	movzbl (%eax),%eax
81005648:	3c 3d                	cmp    $0x3d,%al
8100564a:	75 e8                	jne    81005634 <_findenv_r+0x42>
8100564c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100564f:	0f b6 00             	movzbl (%eax),%eax
81005652:	3c 3d                	cmp    $0x3d,%al
81005654:	74 6e                	je     810056c4 <_findenv_r+0xd2>
81005656:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005659:	29 f8                	sub    %edi,%eax
8100565b:	89 c6                	mov    %eax,%esi
8100565d:	a1 50 77 00 81       	mov    0x81007750,%eax
81005662:	8b 18                	mov    (%eax),%ebx
81005664:	eb 58                	jmp    810056be <_findenv_r+0xcc>
81005666:	89 f2                	mov    %esi,%edx
81005668:	8b 03                	mov    (%ebx),%eax
8100566a:	83 ec 04             	sub    $0x4,%esp
8100566d:	52                   	push   %edx
8100566e:	57                   	push   %edi
8100566f:	50                   	push   %eax
81005670:	e8 d3 0f 00 00       	call   81006648 <strncmp>
81005675:	83 c4 10             	add    $0x10,%esp
81005678:	85 c0                	test   %eax,%eax
8100567a:	75 3f                	jne    810056bb <_findenv_r+0xc9>
8100567c:	8b 03                	mov    (%ebx),%eax
8100567e:	89 f2                	mov    %esi,%edx
81005680:	01 d0                	add    %edx,%eax
81005682:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005685:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005688:	0f b6 00             	movzbl (%eax),%eax
8100568b:	3c 3d                	cmp    $0x3d,%al
8100568d:	75 2c                	jne    810056bb <_findenv_r+0xc9>
8100568f:	a1 50 77 00 81       	mov    0x81007750,%eax
81005694:	8b 10                	mov    (%eax),%edx
81005696:	89 d8                	mov    %ebx,%eax
81005698:	29 d0                	sub    %edx,%eax
8100569a:	c1 f8 02             	sar    $0x2,%eax
8100569d:	89 c2                	mov    %eax,%edx
8100569f:	8b 45 10             	mov    0x10(%ebp),%eax
810056a2:	89 10                	mov    %edx,(%eax)
810056a4:	83 ec 0c             	sub    $0xc,%esp
810056a7:	ff 75 08             	pushl  0x8(%ebp)
810056aa:	e8 07 12 00 00       	call   810068b6 <__env_unlock>
810056af:	83 c4 10             	add    $0x10,%esp
810056b2:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810056b6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810056b9:	eb 1c                	jmp    810056d7 <_findenv_r+0xe5>
810056bb:	83 c3 04             	add    $0x4,%ebx
810056be:	8b 03                	mov    (%ebx),%eax
810056c0:	85 c0                	test   %eax,%eax
810056c2:	75 a2                	jne    81005666 <_findenv_r+0x74>
810056c4:	83 ec 0c             	sub    $0xc,%esp
810056c7:	ff 75 08             	pushl  0x8(%ebp)
810056ca:	e8 e7 11 00 00       	call   810068b6 <__env_unlock>
810056cf:	83 c4 10             	add    $0x10,%esp
810056d2:	b8 00 00 00 00       	mov    $0x0,%eax
810056d7:	8d 65 f4             	lea    -0xc(%ebp),%esp
810056da:	5b                   	pop    %ebx
810056db:	5e                   	pop    %esi
810056dc:	5f                   	pop    %edi
810056dd:	5d                   	pop    %ebp
810056de:	c3                   	ret    

810056df <_getenv_r>:
810056df:	55                   	push   %ebp
810056e0:	89 e5                	mov    %esp,%ebp
810056e2:	83 ec 18             	sub    $0x18,%esp
810056e5:	83 ec 04             	sub    $0x4,%esp
810056e8:	8d 45 f4             	lea    -0xc(%ebp),%eax
810056eb:	50                   	push   %eax
810056ec:	ff 75 0c             	pushl  0xc(%ebp)
810056ef:	ff 75 08             	pushl  0x8(%ebp)
810056f2:	e8 fb fe ff ff       	call   810055f2 <_findenv_r>
810056f7:	83 c4 10             	add    $0x10,%esp
810056fa:	c9                   	leave  
810056fb:	c3                   	ret    

810056fc <__get_global_locale>:
810056fc:	55                   	push   %ebp
810056fd:	89 e5                	mov    %esp,%ebp
810056ff:	b8 60 77 00 81       	mov    $0x81007760,%eax
81005704:	5d                   	pop    %ebp
81005705:	c3                   	ret    

81005706 <__get_current_locale>:
81005706:	55                   	push   %ebp
81005707:	89 e5                	mov    %esp,%ebp
81005709:	e8 ee ff ff ff       	call   810056fc <__get_global_locale>
8100570e:	5d                   	pop    %ebp
8100570f:	c3                   	ret    

81005710 <_setlocale_r>:
81005710:	55                   	push   %ebp
81005711:	89 e5                	mov    %esp,%ebp
81005713:	83 ec 08             	sub    $0x8,%esp
81005716:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100571a:	74 4c                	je     81005768 <_setlocale_r+0x58>
8100571c:	83 ec 08             	sub    $0x8,%esp
8100571f:	68 c4 6e 00 81       	push   $0x81006ec4
81005724:	ff 75 10             	pushl  0x10(%ebp)
81005727:	e8 f0 ec ff ff       	call   8100441c <strcmp>
8100572c:	83 c4 10             	add    $0x10,%esp
8100572f:	85 c0                	test   %eax,%eax
81005731:	74 35                	je     81005768 <_setlocale_r+0x58>
81005733:	83 ec 08             	sub    $0x8,%esp
81005736:	68 ca 6e 00 81       	push   $0x81006eca
8100573b:	ff 75 10             	pushl  0x10(%ebp)
8100573e:	e8 d9 ec ff ff       	call   8100441c <strcmp>
81005743:	83 c4 10             	add    $0x10,%esp
81005746:	85 c0                	test   %eax,%eax
81005748:	74 1e                	je     81005768 <_setlocale_r+0x58>
8100574a:	83 ec 08             	sub    $0x8,%esp
8100574d:	68 c3 6e 00 81       	push   $0x81006ec3
81005752:	ff 75 10             	pushl  0x10(%ebp)
81005755:	e8 c2 ec ff ff       	call   8100441c <strcmp>
8100575a:	83 c4 10             	add    $0x10,%esp
8100575d:	85 c0                	test   %eax,%eax
8100575f:	74 07                	je     81005768 <_setlocale_r+0x58>
81005761:	b8 00 00 00 00       	mov    $0x0,%eax
81005766:	eb 05                	jmp    8100576d <_setlocale_r+0x5d>
81005768:	b8 ca 6e 00 81       	mov    $0x81006eca,%eax
8100576d:	c9                   	leave  
8100576e:	c3                   	ret    

8100576f <__locale_mb_cur_max>:
8100576f:	55                   	push   %ebp
81005770:	89 e5                	mov    %esp,%ebp
81005772:	e8 8f ff ff ff       	call   81005706 <__get_current_locale>
81005777:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
8100577e:	0f be c0             	movsbl %al,%eax
81005781:	5d                   	pop    %ebp
81005782:	c3                   	ret    

81005783 <setlocale>:
81005783:	55                   	push   %ebp
81005784:	89 e5                	mov    %esp,%ebp
81005786:	83 ec 08             	sub    $0x8,%esp
81005789:	a1 24 73 00 81       	mov    0x81007324,%eax
8100578e:	83 ec 04             	sub    $0x4,%esp
81005791:	ff 75 0c             	pushl  0xc(%ebp)
81005794:	ff 75 08             	pushl  0x8(%ebp)
81005797:	50                   	push   %eax
81005798:	e8 73 ff ff ff       	call   81005710 <_setlocale_r>
8100579d:	83 c4 10             	add    $0x10,%esp
810057a0:	c9                   	leave  
810057a1:	c3                   	ret    

810057a2 <_lseek_r>:
810057a2:	55                   	push   %ebp
810057a3:	89 e5                	mov    %esp,%ebp
810057a5:	83 ec 18             	sub    $0x18,%esp
810057a8:	c7 05 74 7d 00 81 00 	movl   $0x0,0x81007d74
810057af:	00 00 00 
810057b2:	83 ec 04             	sub    $0x4,%esp
810057b5:	ff 75 14             	pushl  0x14(%ebp)
810057b8:	ff 75 10             	pushl  0x10(%ebp)
810057bb:	ff 75 0c             	pushl  0xc(%ebp)
810057be:	e8 de af ff ff       	call   810007a1 <lseek>
810057c3:	83 c4 10             	add    $0x10,%esp
810057c6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810057c9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810057cd:	75 14                	jne    810057e3 <_lseek_r+0x41>
810057cf:	a1 74 7d 00 81       	mov    0x81007d74,%eax
810057d4:	85 c0                	test   %eax,%eax
810057d6:	74 0b                	je     810057e3 <_lseek_r+0x41>
810057d8:	8b 15 74 7d 00 81    	mov    0x81007d74,%edx
810057de:	8b 45 08             	mov    0x8(%ebp),%eax
810057e1:	89 10                	mov    %edx,(%eax)
810057e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810057e6:	c9                   	leave  
810057e7:	c3                   	ret    

810057e8 <__smakebuf_r>:
810057e8:	55                   	push   %ebp
810057e9:	89 e5                	mov    %esp,%ebp
810057eb:	56                   	push   %esi
810057ec:	53                   	push   %ebx
810057ed:	83 ec 10             	sub    $0x10,%esp
810057f0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810057f3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810057f7:	98                   	cwtl   
810057f8:	83 e0 02             	and    $0x2,%eax
810057fb:	85 c0                	test   %eax,%eax
810057fd:	74 16                	je     81005815 <__smakebuf_r+0x2d>
810057ff:	8d 43 43             	lea    0x43(%ebx),%eax
81005802:	89 03                	mov    %eax,(%ebx)
81005804:	8b 03                	mov    (%ebx),%eax
81005806:	89 43 10             	mov    %eax,0x10(%ebx)
81005809:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81005810:	e9 b9 00 00 00       	jmp    810058ce <__smakebuf_r+0xe6>
81005815:	8d 45 ec             	lea    -0x14(%ebp),%eax
81005818:	50                   	push   %eax
81005819:	8d 45 f0             	lea    -0x10(%ebp),%eax
8100581c:	50                   	push   %eax
8100581d:	53                   	push   %ebx
8100581e:	ff 75 08             	pushl  0x8(%ebp)
81005821:	e8 af 00 00 00       	call   810058d5 <__swhatbuf_r>
81005826:	83 c4 10             	add    $0x10,%esp
81005829:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100582c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100582f:	83 ec 08             	sub    $0x8,%esp
81005832:	50                   	push   %eax
81005833:	ff 75 08             	pushl  0x8(%ebp)
81005836:	e8 d0 d0 ff ff       	call   8100290b <_malloc_r>
8100583b:	83 c4 10             	add    $0x10,%esp
8100583e:	89 c6                	mov    %eax,%esi
81005840:	85 f6                	test   %esi,%esi
81005842:	75 2f                	jne    81005873 <__smakebuf_r+0x8b>
81005844:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005848:	98                   	cwtl   
81005849:	25 00 02 00 00       	and    $0x200,%eax
8100584e:	85 c0                	test   %eax,%eax
81005850:	75 7c                	jne    810058ce <__smakebuf_r+0xe6>
81005852:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005856:	83 e0 fc             	and    $0xfffffffc,%eax
81005859:	83 c8 02             	or     $0x2,%eax
8100585c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005860:	8d 43 43             	lea    0x43(%ebx),%eax
81005863:	89 03                	mov    %eax,(%ebx)
81005865:	8b 03                	mov    (%ebx),%eax
81005867:	89 43 10             	mov    %eax,0x10(%ebx)
8100586a:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81005871:	eb 5b                	jmp    810058ce <__smakebuf_r+0xe6>
81005873:	8b 45 08             	mov    0x8(%ebp),%eax
81005876:	c7 40 3c 01 10 00 81 	movl   $0x81001001,0x3c(%eax)
8100587d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005881:	0c 80                	or     $0x80,%al
81005883:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005887:	89 33                	mov    %esi,(%ebx)
81005889:	8b 03                	mov    (%ebx),%eax
8100588b:	89 43 10             	mov    %eax,0x10(%ebx)
8100588e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005891:	89 43 14             	mov    %eax,0x14(%ebx)
81005894:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005897:	85 c0                	test   %eax,%eax
81005899:	74 26                	je     810058c1 <__smakebuf_r+0xd9>
8100589b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100589f:	98                   	cwtl   
810058a0:	83 ec 08             	sub    $0x8,%esp
810058a3:	50                   	push   %eax
810058a4:	ff 75 08             	pushl  0x8(%ebp)
810058a7:	e8 53 10 00 00       	call   810068ff <_isatty_r>
810058ac:	83 c4 10             	add    $0x10,%esp
810058af:	85 c0                	test   %eax,%eax
810058b1:	74 0e                	je     810058c1 <__smakebuf_r+0xd9>
810058b3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810058b7:	83 e0 fc             	and    $0xfffffffc,%eax
810058ba:	83 c8 01             	or     $0x1,%eax
810058bd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810058c1:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
810058c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810058c8:	09 d0                	or     %edx,%eax
810058ca:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810058ce:	8d 65 f8             	lea    -0x8(%ebp),%esp
810058d1:	5b                   	pop    %ebx
810058d2:	5e                   	pop    %esi
810058d3:	5d                   	pop    %ebp
810058d4:	c3                   	ret    

810058d5 <__swhatbuf_r>:
810058d5:	55                   	push   %ebp
810058d6:	89 e5                	mov    %esp,%ebp
810058d8:	83 ec 58             	sub    $0x58,%esp
810058db:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
810058e2:	8b 45 0c             	mov    0xc(%ebp),%eax
810058e5:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810058e9:	66 85 c0             	test   %ax,%ax
810058ec:	78 1f                	js     8100590d <__swhatbuf_r+0x38>
810058ee:	8b 45 0c             	mov    0xc(%ebp),%eax
810058f1:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810058f5:	98                   	cwtl   
810058f6:	83 ec 04             	sub    $0x4,%esp
810058f9:	8d 55 ac             	lea    -0x54(%ebp),%edx
810058fc:	52                   	push   %edx
810058fd:	50                   	push   %eax
810058fe:	ff 75 08             	pushl  0x8(%ebp)
81005901:	e8 b6 0f 00 00       	call   810068bc <_fstat_r>
81005906:	83 c4 10             	add    $0x10,%esp
81005909:	85 c0                	test   %eax,%eax
8100590b:	79 35                	jns    81005942 <__swhatbuf_r+0x6d>
8100590d:	8b 45 14             	mov    0x14(%ebp),%eax
81005910:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81005916:	8b 45 0c             	mov    0xc(%ebp),%eax
81005919:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100591d:	98                   	cwtl   
8100591e:	25 80 00 00 00       	and    $0x80,%eax
81005923:	85 c0                	test   %eax,%eax
81005925:	74 0b                	je     81005932 <__swhatbuf_r+0x5d>
81005927:	8b 45 10             	mov    0x10(%ebp),%eax
8100592a:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81005930:	eb 09                	jmp    8100593b <__swhatbuf_r+0x66>
81005932:	8b 45 10             	mov    0x10(%ebp),%eax
81005935:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
8100593b:	b8 00 00 00 00       	mov    $0x0,%eax
81005940:	eb 24                	jmp    81005966 <__swhatbuf_r+0x91>
81005942:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005945:	25 00 f0 00 00       	and    $0xf000,%eax
8100594a:	3d 00 20 00 00       	cmp    $0x2000,%eax
8100594f:	0f 94 c0             	sete   %al
81005952:	0f b6 d0             	movzbl %al,%edx
81005955:	8b 45 14             	mov    0x14(%ebp),%eax
81005958:	89 10                	mov    %edx,(%eax)
8100595a:	8b 45 10             	mov    0x10(%ebp),%eax
8100595d:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81005963:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005966:	c9                   	leave  
81005967:	c3                   	ret    

81005968 <__get_global_locale>:
81005968:	55                   	push   %ebp
81005969:	89 e5                	mov    %esp,%ebp
8100596b:	b8 60 77 00 81       	mov    $0x81007760,%eax
81005970:	5d                   	pop    %ebp
81005971:	c3                   	ret    

81005972 <__get_current_locale>:
81005972:	55                   	push   %ebp
81005973:	89 e5                	mov    %esp,%ebp
81005975:	e8 ee ff ff ff       	call   81005968 <__get_global_locale>
8100597a:	5d                   	pop    %ebp
8100597b:	c3                   	ret    

8100597c <_mbtowc_r>:
8100597c:	55                   	push   %ebp
8100597d:	89 e5                	mov    %esp,%ebp
8100597f:	83 ec 08             	sub    $0x8,%esp
81005982:	e8 eb ff ff ff       	call   81005972 <__get_current_locale>
81005987:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
8100598d:	83 ec 0c             	sub    $0xc,%esp
81005990:	ff 75 18             	pushl  0x18(%ebp)
81005993:	ff 75 14             	pushl  0x14(%ebp)
81005996:	ff 75 10             	pushl  0x10(%ebp)
81005999:	ff 75 0c             	pushl  0xc(%ebp)
8100599c:	ff 75 08             	pushl  0x8(%ebp)
8100599f:	ff d0                	call   *%eax
810059a1:	83 c4 20             	add    $0x20,%esp
810059a4:	c9                   	leave  
810059a5:	c3                   	ret    

810059a6 <__ascii_mbtowc>:
810059a6:	55                   	push   %ebp
810059a7:	89 e5                	mov    %esp,%ebp
810059a9:	83 ec 10             	sub    $0x10,%esp
810059ac:	8b 45 10             	mov    0x10(%ebp),%eax
810059af:	89 45 fc             	mov    %eax,-0x4(%ebp)
810059b2:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810059b6:	75 06                	jne    810059be <__ascii_mbtowc+0x18>
810059b8:	8d 45 f8             	lea    -0x8(%ebp),%eax
810059bb:	89 45 0c             	mov    %eax,0xc(%ebp)
810059be:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810059c2:	75 07                	jne    810059cb <__ascii_mbtowc+0x25>
810059c4:	b8 00 00 00 00       	mov    $0x0,%eax
810059c9:	eb 31                	jmp    810059fc <__ascii_mbtowc+0x56>
810059cb:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810059cf:	75 07                	jne    810059d8 <__ascii_mbtowc+0x32>
810059d1:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
810059d6:	eb 24                	jmp    810059fc <__ascii_mbtowc+0x56>
810059d8:	8b 45 fc             	mov    -0x4(%ebp),%eax
810059db:	0f b6 00             	movzbl (%eax),%eax
810059de:	0f b6 d0             	movzbl %al,%edx
810059e1:	8b 45 0c             	mov    0xc(%ebp),%eax
810059e4:	89 10                	mov    %edx,(%eax)
810059e6:	8b 45 fc             	mov    -0x4(%ebp),%eax
810059e9:	0f b6 00             	movzbl (%eax),%eax
810059ec:	84 c0                	test   %al,%al
810059ee:	75 07                	jne    810059f7 <__ascii_mbtowc+0x51>
810059f0:	b8 00 00 00 00       	mov    $0x0,%eax
810059f5:	eb 05                	jmp    810059fc <__ascii_mbtowc+0x56>
810059f7:	b8 01 00 00 00       	mov    $0x1,%eax
810059fc:	c9                   	leave  
810059fd:	c3                   	ret    
810059fe:	66 90                	xchg   %ax,%ax

81005a00 <memmove>:
81005a00:	55                   	push   %ebp
81005a01:	89 e5                	mov    %esp,%ebp
81005a03:	56                   	push   %esi
81005a04:	57                   	push   %edi
81005a05:	53                   	push   %ebx
81005a06:	8b 7d 08             	mov    0x8(%ebp),%edi
81005a09:	8b 4d 10             	mov    0x10(%ebp),%ecx
81005a0c:	8b 75 0c             	mov    0xc(%ebp),%esi
81005a0f:	fc                   	cld    
81005a10:	39 fe                	cmp    %edi,%esi
81005a12:	73 43                	jae    81005a57 <memmove+0x57>
81005a14:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81005a18:	39 df                	cmp    %ebx,%edi
81005a1a:	77 3b                	ja     81005a57 <memmove+0x57>
81005a1c:	01 ce                	add    %ecx,%esi
81005a1e:	01 cf                	add    %ecx,%edi
81005a20:	fd                   	std    
81005a21:	83 f9 08             	cmp    $0x8,%ecx
81005a24:	76 2b                	jbe    81005a51 <memmove+0x51>
81005a26:	89 fa                	mov    %edi,%edx
81005a28:	89 cb                	mov    %ecx,%ebx
81005a2a:	83 e2 03             	and    $0x3,%edx
81005a2d:	74 0c                	je     81005a3b <memmove+0x3b>
81005a2f:	89 d1                	mov    %edx,%ecx
81005a31:	4e                   	dec    %esi
81005a32:	4f                   	dec    %edi
81005a33:	29 cb                	sub    %ecx,%ebx
81005a35:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005a37:	89 d9                	mov    %ebx,%ecx
81005a39:	46                   	inc    %esi
81005a3a:	47                   	inc    %edi
81005a3b:	c1 e9 02             	shr    $0x2,%ecx
81005a3e:	83 ee 04             	sub    $0x4,%esi
81005a41:	83 ef 04             	sub    $0x4,%edi
81005a44:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81005a46:	83 c6 04             	add    $0x4,%esi
81005a49:	83 c7 04             	add    $0x4,%edi
81005a4c:	89 d9                	mov    %ebx,%ecx
81005a4e:	83 e1 03             	and    $0x3,%ecx
81005a51:	4e                   	dec    %esi
81005a52:	4f                   	dec    %edi
81005a53:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005a55:	eb 2a                	jmp    81005a81 <memmove+0x81>
81005a57:	83 f9 08             	cmp    $0x8,%ecx
81005a5a:	76 23                	jbe    81005a7f <memmove+0x7f>
81005a5c:	89 fa                	mov    %edi,%edx
81005a5e:	89 cb                	mov    %ecx,%ebx
81005a60:	83 e2 03             	and    $0x3,%edx
81005a63:	74 10                	je     81005a75 <memmove+0x75>
81005a65:	b9 04 00 00 00       	mov    $0x4,%ecx
81005a6a:	29 d1                	sub    %edx,%ecx
81005a6c:	83 e1 03             	and    $0x3,%ecx
81005a6f:	29 cb                	sub    %ecx,%ebx
81005a71:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005a73:	89 d9                	mov    %ebx,%ecx
81005a75:	c1 e9 02             	shr    $0x2,%ecx
81005a78:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81005a7a:	89 d9                	mov    %ebx,%ecx
81005a7c:	83 e1 03             	and    $0x3,%ecx
81005a7f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005a81:	8b 45 08             	mov    0x8(%ebp),%eax
81005a84:	fc                   	cld    
81005a85:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005a88:	5b                   	pop    %ebx
81005a89:	5f                   	pop    %edi
81005a8a:	5e                   	pop    %esi
81005a8b:	c9                   	leave  
81005a8c:	c3                   	ret    

81005a8d <__sputc_r>:
81005a8d:	55                   	push   %ebp
81005a8e:	89 e5                	mov    %esp,%ebp
81005a90:	83 ec 08             	sub    $0x8,%esp
81005a93:	8b 45 10             	mov    0x10(%ebp),%eax
81005a96:	8b 40 08             	mov    0x8(%eax),%eax
81005a99:	8d 50 ff             	lea    -0x1(%eax),%edx
81005a9c:	8b 45 10             	mov    0x10(%ebp),%eax
81005a9f:	89 50 08             	mov    %edx,0x8(%eax)
81005aa2:	8b 45 10             	mov    0x10(%ebp),%eax
81005aa5:	8b 40 08             	mov    0x8(%eax),%eax
81005aa8:	85 c0                	test   %eax,%eax
81005aaa:	79 17                	jns    81005ac3 <__sputc_r+0x36>
81005aac:	8b 45 10             	mov    0x10(%ebp),%eax
81005aaf:	8b 50 08             	mov    0x8(%eax),%edx
81005ab2:	8b 45 10             	mov    0x10(%ebp),%eax
81005ab5:	8b 40 18             	mov    0x18(%eax),%eax
81005ab8:	39 c2                	cmp    %eax,%edx
81005aba:	7c 21                	jl     81005add <__sputc_r+0x50>
81005abc:	8b 45 0c             	mov    0xc(%ebp),%eax
81005abf:	3c 0a                	cmp    $0xa,%al
81005ac1:	74 1a                	je     81005add <__sputc_r+0x50>
81005ac3:	8b 45 10             	mov    0x10(%ebp),%eax
81005ac6:	8b 00                	mov    (%eax),%eax
81005ac8:	8d 48 01             	lea    0x1(%eax),%ecx
81005acb:	8b 55 10             	mov    0x10(%ebp),%edx
81005ace:	89 0a                	mov    %ecx,(%edx)
81005ad0:	8b 55 0c             	mov    0xc(%ebp),%edx
81005ad3:	88 10                	mov    %dl,(%eax)
81005ad5:	0f b6 00             	movzbl (%eax),%eax
81005ad8:	0f b6 c0             	movzbl %al,%eax
81005adb:	eb 14                	jmp    81005af1 <__sputc_r+0x64>
81005add:	83 ec 04             	sub    $0x4,%esp
81005ae0:	ff 75 10             	pushl  0x10(%ebp)
81005ae3:	ff 75 0c             	pushl  0xc(%ebp)
81005ae6:	ff 75 08             	pushl  0x8(%ebp)
81005ae9:	e8 c1 ed ff ff       	call   810048af <__swbuf_r>
81005aee:	83 c4 10             	add    $0x10,%esp
81005af1:	c9                   	leave  
81005af2:	c3                   	ret    

81005af3 <_putc_r>:
81005af3:	55                   	push   %ebp
81005af4:	89 e5                	mov    %esp,%ebp
81005af6:	53                   	push   %ebx
81005af7:	83 ec 14             	sub    $0x14,%esp
81005afa:	8b 5d 10             	mov    0x10(%ebp),%ebx
81005afd:	8b 45 08             	mov    0x8(%ebp),%eax
81005b00:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005b03:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005b07:	74 18                	je     81005b21 <_putc_r+0x2e>
81005b09:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b0c:	8b 40 38             	mov    0x38(%eax),%eax
81005b0f:	85 c0                	test   %eax,%eax
81005b11:	75 0e                	jne    81005b21 <_putc_r+0x2e>
81005b13:	83 ec 0c             	sub    $0xc,%esp
81005b16:	ff 75 f4             	pushl  -0xc(%ebp)
81005b19:	e8 1e b5 ff ff       	call   8100103c <__sinit>
81005b1e:	83 c4 10             	add    $0x10,%esp
81005b21:	83 ec 04             	sub    $0x4,%esp
81005b24:	53                   	push   %ebx
81005b25:	ff 75 0c             	pushl  0xc(%ebp)
81005b28:	ff 75 08             	pushl  0x8(%ebp)
81005b2b:	e8 5d ff ff ff       	call   81005a8d <__sputc_r>
81005b30:	83 c4 10             	add    $0x10,%esp
81005b33:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005b36:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005b39:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005b3c:	c9                   	leave  
81005b3d:	c3                   	ret    

81005b3e <putc>:
81005b3e:	55                   	push   %ebp
81005b3f:	89 e5                	mov    %esp,%ebp
81005b41:	53                   	push   %ebx
81005b42:	83 ec 14             	sub    $0x14,%esp
81005b45:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005b48:	a1 24 73 00 81       	mov    0x81007324,%eax
81005b4d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005b50:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b53:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005b56:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005b5a:	74 18                	je     81005b74 <putc+0x36>
81005b5c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005b5f:	8b 40 38             	mov    0x38(%eax),%eax
81005b62:	85 c0                	test   %eax,%eax
81005b64:	75 0e                	jne    81005b74 <putc+0x36>
81005b66:	83 ec 0c             	sub    $0xc,%esp
81005b69:	ff 75 f0             	pushl  -0x10(%ebp)
81005b6c:	e8 cb b4 ff ff       	call   8100103c <__sinit>
81005b71:	83 c4 10             	add    $0x10,%esp
81005b74:	83 ec 04             	sub    $0x4,%esp
81005b77:	53                   	push   %ebx
81005b78:	ff 75 08             	pushl  0x8(%ebp)
81005b7b:	ff 75 f4             	pushl  -0xc(%ebp)
81005b7e:	e8 0a ff ff ff       	call   81005a8d <__sputc_r>
81005b83:	83 c4 10             	add    $0x10,%esp
81005b86:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005b89:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005b8c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005b8f:	c9                   	leave  
81005b90:	c3                   	ret    

81005b91 <_read_r>:
81005b91:	55                   	push   %ebp
81005b92:	89 e5                	mov    %esp,%ebp
81005b94:	83 ec 18             	sub    $0x18,%esp
81005b97:	c7 05 74 7d 00 81 00 	movl   $0x0,0x81007d74
81005b9e:	00 00 00 
81005ba1:	83 ec 04             	sub    $0x4,%esp
81005ba4:	ff 75 14             	pushl  0x14(%ebp)
81005ba7:	ff 75 10             	pushl  0x10(%ebp)
81005baa:	ff 75 0c             	pushl  0xc(%ebp)
81005bad:	e8 74 ab ff ff       	call   81000726 <read>
81005bb2:	83 c4 10             	add    $0x10,%esp
81005bb5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005bb8:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005bbc:	75 14                	jne    81005bd2 <_read_r+0x41>
81005bbe:	a1 74 7d 00 81       	mov    0x81007d74,%eax
81005bc3:	85 c0                	test   %eax,%eax
81005bc5:	74 0b                	je     81005bd2 <_read_r+0x41>
81005bc7:	8b 15 74 7d 00 81    	mov    0x81007d74,%edx
81005bcd:	8b 45 08             	mov    0x8(%ebp),%eax
81005bd0:	89 10                	mov    %edx,(%eax)
81005bd2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005bd5:	c9                   	leave  
81005bd6:	c3                   	ret    

81005bd7 <_realloc_r>:
81005bd7:	55                   	push   %ebp
81005bd8:	89 e5                	mov    %esp,%ebp
81005bda:	83 ec 78             	sub    $0x78,%esp
81005bdd:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005be1:	75 16                	jne    81005bf9 <_realloc_r+0x22>
81005be3:	83 ec 08             	sub    $0x8,%esp
81005be6:	ff 75 10             	pushl  0x10(%ebp)
81005be9:	ff 75 08             	pushl  0x8(%ebp)
81005bec:	e8 1a cd ff ff       	call   8100290b <_malloc_r>
81005bf1:	83 c4 10             	add    $0x10,%esp
81005bf4:	e9 b6 08 00 00       	jmp    810064af <_realloc_r+0x8d8>
81005bf9:	83 ec 0c             	sub    $0xc,%esp
81005bfc:	ff 75 08             	pushl  0x8(%ebp)
81005bff:	e8 e4 d6 ff ff       	call   810032e8 <__malloc_lock>
81005c04:	83 c4 10             	add    $0x10,%esp
81005c07:	8b 45 0c             	mov    0xc(%ebp),%eax
81005c0a:	83 e8 08             	sub    $0x8,%eax
81005c0d:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81005c10:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005c13:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005c16:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005c19:	8b 40 04             	mov    0x4(%eax),%eax
81005c1c:	83 e0 fc             	and    $0xfffffffc,%eax
81005c1f:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005c22:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005c25:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005c28:	8b 45 10             	mov    0x10(%ebp),%eax
81005c2b:	83 c0 0b             	add    $0xb,%eax
81005c2e:	83 f8 16             	cmp    $0x16,%eax
81005c31:	76 0b                	jbe    81005c3e <_realloc_r+0x67>
81005c33:	8b 45 10             	mov    0x10(%ebp),%eax
81005c36:	83 c0 0b             	add    $0xb,%eax
81005c39:	83 e0 f8             	and    $0xfffffff8,%eax
81005c3c:	eb 05                	jmp    81005c43 <_realloc_r+0x6c>
81005c3e:	b8 10 00 00 00       	mov    $0x10,%eax
81005c43:	89 45 bc             	mov    %eax,-0x44(%ebp)
81005c46:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005c49:	85 c0                	test   %eax,%eax
81005c4b:	78 08                	js     81005c55 <_realloc_r+0x7e>
81005c4d:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005c50:	3b 45 10             	cmp    0x10(%ebp),%eax
81005c53:	73 13                	jae    81005c68 <_realloc_r+0x91>
81005c55:	8b 45 08             	mov    0x8(%ebp),%eax
81005c58:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81005c5e:	b8 00 00 00 00       	mov    $0x0,%eax
81005c63:	e9 47 08 00 00       	jmp    810064af <_realloc_r+0x8d8>
81005c68:	8b 55 c0             	mov    -0x40(%ebp),%edx
81005c6b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005c6e:	39 c2                	cmp    %eax,%edx
81005c70:	0f 8d 8b 07 00 00    	jge    81006401 <_realloc_r+0x82a>
81005c76:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81005c79:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005c7c:	01 d0                	add    %edx,%eax
81005c7e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005c81:	b8 40 73 00 81       	mov    $0x81007340,%eax
81005c86:	8b 40 08             	mov    0x8(%eax),%eax
81005c89:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005c8c:	74 1e                	je     81005cac <_realloc_r+0xd5>
81005c8e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005c91:	8b 40 04             	mov    0x4(%eax),%eax
81005c94:	83 e0 fe             	and    $0xfffffffe,%eax
81005c97:	89 c2                	mov    %eax,%edx
81005c99:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005c9c:	01 d0                	add    %edx,%eax
81005c9e:	8b 40 04             	mov    0x4(%eax),%eax
81005ca1:	83 e0 01             	and    $0x1,%eax
81005ca4:	85 c0                	test   %eax,%eax
81005ca6:	0f 85 ca 00 00 00    	jne    81005d76 <_realloc_r+0x19f>
81005cac:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005caf:	8b 40 04             	mov    0x4(%eax),%eax
81005cb2:	83 e0 fc             	and    $0xfffffffc,%eax
81005cb5:	89 45 e8             	mov    %eax,-0x18(%ebp)
81005cb8:	b8 40 73 00 81       	mov    $0x81007340,%eax
81005cbd:	8b 40 08             	mov    0x8(%eax),%eax
81005cc0:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005cc3:	75 71                	jne    81005d36 <_realloc_r+0x15f>
81005cc5:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005cc8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005ccb:	01 d0                	add    %edx,%eax
81005ccd:	89 c2                	mov    %eax,%edx
81005ccf:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005cd2:	83 c0 10             	add    $0x10,%eax
81005cd5:	39 c2                	cmp    %eax,%edx
81005cd7:	0f 8c a9 00 00 00    	jl     81005d86 <_realloc_r+0x1af>
81005cdd:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005ce0:	01 45 f0             	add    %eax,-0x10(%ebp)
81005ce3:	ba 40 73 00 81       	mov    $0x81007340,%edx
81005ce8:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81005ceb:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005cee:	01 c8                	add    %ecx,%eax
81005cf0:	89 42 08             	mov    %eax,0x8(%edx)
81005cf3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005cf6:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005cf9:	89 c2                	mov    %eax,%edx
81005cfb:	b8 40 73 00 81       	mov    $0x81007340,%eax
81005d00:	8b 40 08             	mov    0x8(%eax),%eax
81005d03:	83 ca 01             	or     $0x1,%edx
81005d06:	89 50 04             	mov    %edx,0x4(%eax)
81005d09:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005d0c:	8b 40 04             	mov    0x4(%eax),%eax
81005d0f:	83 e0 01             	and    $0x1,%eax
81005d12:	0b 45 bc             	or     -0x44(%ebp),%eax
81005d15:	89 c2                	mov    %eax,%edx
81005d17:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005d1a:	89 50 04             	mov    %edx,0x4(%eax)
81005d1d:	83 ec 0c             	sub    $0xc,%esp
81005d20:	ff 75 08             	pushl  0x8(%ebp)
81005d23:	e8 c6 d5 ff ff       	call   810032ee <__malloc_unlock>
81005d28:	83 c4 10             	add    $0x10,%esp
81005d2b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005d2e:	83 c0 08             	add    $0x8,%eax
81005d31:	e9 79 07 00 00       	jmp    810064af <_realloc_r+0x8d8>
81005d36:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005d39:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005d3c:	01 d0                	add    %edx,%eax
81005d3e:	89 c2                	mov    %eax,%edx
81005d40:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005d43:	39 c2                	cmp    %eax,%edx
81005d45:	7c 3f                	jl     81005d86 <_realloc_r+0x1af>
81005d47:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005d4a:	8b 40 0c             	mov    0xc(%eax),%eax
81005d4d:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005d50:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005d53:	8b 40 08             	mov    0x8(%eax),%eax
81005d56:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005d59:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005d5c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005d5f:	89 50 0c             	mov    %edx,0xc(%eax)
81005d62:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005d65:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005d68:	89 50 08             	mov    %edx,0x8(%eax)
81005d6b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005d6e:	01 45 f0             	add    %eax,-0x10(%ebp)
81005d71:	e9 8c 06 00 00       	jmp    81006402 <_realloc_r+0x82b>
81005d76:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81005d7d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81005d84:	eb 01                	jmp    81005d87 <_realloc_r+0x1b0>
81005d86:	90                   	nop
81005d87:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005d8a:	8b 40 04             	mov    0x4(%eax),%eax
81005d8d:	83 e0 01             	and    $0x1,%eax
81005d90:	85 c0                	test   %eax,%eax
81005d92:	0f 85 d6 04 00 00    	jne    8100626e <_realloc_r+0x697>
81005d98:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005d9b:	8b 00                	mov    (%eax),%eax
81005d9d:	f7 d8                	neg    %eax
81005d9f:	89 c2                	mov    %eax,%edx
81005da1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005da4:	01 d0                	add    %edx,%eax
81005da6:	89 45 b0             	mov    %eax,-0x50(%ebp)
81005da9:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005dac:	8b 40 04             	mov    0x4(%eax),%eax
81005daf:	83 e0 fc             	and    $0xfffffffc,%eax
81005db2:	89 45 ac             	mov    %eax,-0x54(%ebp)
81005db5:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005db9:	0f 84 4a 03 00 00    	je     81006109 <_realloc_r+0x532>
81005dbf:	b8 40 73 00 81       	mov    $0x81007340,%eax
81005dc4:	8b 40 08             	mov    0x8(%eax),%eax
81005dc7:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005dca:	0f 85 b0 01 00 00    	jne    81005f80 <_realloc_r+0x3a9>
81005dd0:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005dd3:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005dd6:	01 c2                	add    %eax,%edx
81005dd8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005ddb:	01 d0                	add    %edx,%eax
81005ddd:	89 c2                	mov    %eax,%edx
81005ddf:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005de2:	83 c0 10             	add    $0x10,%eax
81005de5:	39 c2                	cmp    %eax,%edx
81005de7:	0f 8c 1c 03 00 00    	jl     81006109 <_realloc_r+0x532>
81005ded:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005df0:	8b 40 0c             	mov    0xc(%eax),%eax
81005df3:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005df6:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005df9:	8b 40 08             	mov    0x8(%eax),%eax
81005dfc:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005dff:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005e02:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005e05:	89 50 0c             	mov    %edx,0xc(%eax)
81005e08:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005e0b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005e0e:	89 50 08             	mov    %edx,0x8(%eax)
81005e11:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e14:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005e17:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005e1a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005e1d:	01 d0                	add    %edx,%eax
81005e1f:	01 45 f0             	add    %eax,-0x10(%ebp)
81005e22:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005e25:	83 c0 08             	add    $0x8,%eax
81005e28:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005e2b:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005e2e:	83 e8 04             	sub    $0x4,%eax
81005e31:	89 45 a0             	mov    %eax,-0x60(%ebp)
81005e34:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81005e38:	0f 87 de 00 00 00    	ja     81005f1c <_realloc_r+0x345>
81005e3e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005e41:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005e44:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005e47:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005e4a:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81005e4e:	0f 86 90 00 00 00    	jbe    81005ee4 <_realloc_r+0x30d>
81005e54:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005e57:	8d 42 04             	lea    0x4(%edx),%eax
81005e5a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005e5d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005e60:	8d 48 04             	lea    0x4(%eax),%ecx
81005e63:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005e66:	8b 12                	mov    (%edx),%edx
81005e68:	89 10                	mov    %edx,(%eax)
81005e6a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005e6d:	8d 42 04             	lea    0x4(%edx),%eax
81005e70:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005e73:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005e76:	8d 48 04             	lea    0x4(%eax),%ecx
81005e79:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005e7c:	8b 12                	mov    (%edx),%edx
81005e7e:	89 10                	mov    %edx,(%eax)
81005e80:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81005e84:	76 5e                	jbe    81005ee4 <_realloc_r+0x30d>
81005e86:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005e89:	8d 42 04             	lea    0x4(%edx),%eax
81005e8c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005e8f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005e92:	8d 48 04             	lea    0x4(%eax),%ecx
81005e95:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005e98:	8b 12                	mov    (%edx),%edx
81005e9a:	89 10                	mov    %edx,(%eax)
81005e9c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005e9f:	8d 42 04             	lea    0x4(%edx),%eax
81005ea2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005ea5:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005ea8:	8d 48 04             	lea    0x4(%eax),%ecx
81005eab:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005eae:	8b 12                	mov    (%edx),%edx
81005eb0:	89 10                	mov    %edx,(%eax)
81005eb2:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81005eb6:	76 2c                	jbe    81005ee4 <_realloc_r+0x30d>
81005eb8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005ebb:	8d 42 04             	lea    0x4(%edx),%eax
81005ebe:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005ec1:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005ec4:	8d 48 04             	lea    0x4(%eax),%ecx
81005ec7:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005eca:	8b 12                	mov    (%edx),%edx
81005ecc:	89 10                	mov    %edx,(%eax)
81005ece:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005ed1:	8d 42 04             	lea    0x4(%edx),%eax
81005ed4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005ed7:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005eda:	8d 48 04             	lea    0x4(%eax),%ecx
81005edd:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005ee0:	8b 12                	mov    (%edx),%edx
81005ee2:	89 10                	mov    %edx,(%eax)
81005ee4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005ee7:	8d 42 04             	lea    0x4(%edx),%eax
81005eea:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005eed:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005ef0:	8d 48 04             	lea    0x4(%eax),%ecx
81005ef3:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005ef6:	8b 12                	mov    (%edx),%edx
81005ef8:	89 10                	mov    %edx,(%eax)
81005efa:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005efd:	8d 42 04             	lea    0x4(%edx),%eax
81005f00:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005f03:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005f06:	8d 48 04             	lea    0x4(%eax),%ecx
81005f09:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005f0c:	8b 12                	mov    (%edx),%edx
81005f0e:	89 10                	mov    %edx,(%eax)
81005f10:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005f13:	8b 10                	mov    (%eax),%edx
81005f15:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005f18:	89 10                	mov    %edx,(%eax)
81005f1a:	eb 14                	jmp    81005f30 <_realloc_r+0x359>
81005f1c:	83 ec 04             	sub    $0x4,%esp
81005f1f:	ff 75 a0             	pushl  -0x60(%ebp)
81005f22:	ff 75 0c             	pushl  0xc(%ebp)
81005f25:	ff 75 a8             	pushl  -0x58(%ebp)
81005f28:	e8 d3 fa ff ff       	call   81005a00 <memmove>
81005f2d:	83 c4 10             	add    $0x10,%esp
81005f30:	ba 40 73 00 81       	mov    $0x81007340,%edx
81005f35:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81005f38:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005f3b:	01 c8                	add    %ecx,%eax
81005f3d:	89 42 08             	mov    %eax,0x8(%edx)
81005f40:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005f43:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005f46:	89 c2                	mov    %eax,%edx
81005f48:	b8 40 73 00 81       	mov    $0x81007340,%eax
81005f4d:	8b 40 08             	mov    0x8(%eax),%eax
81005f50:	83 ca 01             	or     $0x1,%edx
81005f53:	89 50 04             	mov    %edx,0x4(%eax)
81005f56:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005f59:	8b 40 04             	mov    0x4(%eax),%eax
81005f5c:	83 e0 01             	and    $0x1,%eax
81005f5f:	0b 45 bc             	or     -0x44(%ebp),%eax
81005f62:	89 c2                	mov    %eax,%edx
81005f64:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005f67:	89 50 04             	mov    %edx,0x4(%eax)
81005f6a:	83 ec 0c             	sub    $0xc,%esp
81005f6d:	ff 75 08             	pushl  0x8(%ebp)
81005f70:	e8 79 d3 ff ff       	call   810032ee <__malloc_unlock>
81005f75:	83 c4 10             	add    $0x10,%esp
81005f78:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005f7b:	e9 2f 05 00 00       	jmp    810064af <_realloc_r+0x8d8>
81005f80:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005f83:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005f86:	01 c2                	add    %eax,%edx
81005f88:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005f8b:	01 d0                	add    %edx,%eax
81005f8d:	89 c2                	mov    %eax,%edx
81005f8f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005f92:	39 c2                	cmp    %eax,%edx
81005f94:	0f 8c 6f 01 00 00    	jl     81006109 <_realloc_r+0x532>
81005f9a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005f9d:	8b 40 0c             	mov    0xc(%eax),%eax
81005fa0:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005fa3:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005fa6:	8b 40 08             	mov    0x8(%eax),%eax
81005fa9:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005fac:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005faf:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005fb2:	89 50 0c             	mov    %edx,0xc(%eax)
81005fb5:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005fb8:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005fbb:	89 50 08             	mov    %edx,0x8(%eax)
81005fbe:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005fc1:	8b 40 0c             	mov    0xc(%eax),%eax
81005fc4:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005fc7:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005fca:	8b 40 08             	mov    0x8(%eax),%eax
81005fcd:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005fd0:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005fd3:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005fd6:	89 50 0c             	mov    %edx,0xc(%eax)
81005fd9:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005fdc:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005fdf:	89 50 08             	mov    %edx,0x8(%eax)
81005fe2:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005fe5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005fe8:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005feb:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005fee:	01 d0                	add    %edx,%eax
81005ff0:	01 45 f0             	add    %eax,-0x10(%ebp)
81005ff3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005ff6:	83 c0 08             	add    $0x8,%eax
81005ff9:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005ffc:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005fff:	83 e8 04             	sub    $0x4,%eax
81006002:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81006005:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81006009:	0f 87 e1 00 00 00    	ja     810060f0 <_realloc_r+0x519>
8100600f:	8b 45 0c             	mov    0xc(%ebp),%eax
81006012:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006015:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006018:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100601b:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
8100601f:	0f 86 90 00 00 00    	jbe    810060b5 <_realloc_r+0x4de>
81006025:	8b 55 dc             	mov    -0x24(%ebp),%edx
81006028:	8d 42 04             	lea    0x4(%edx),%eax
8100602b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100602e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006031:	8d 48 04             	lea    0x4(%eax),%ecx
81006034:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81006037:	8b 12                	mov    (%edx),%edx
81006039:	89 10                	mov    %edx,(%eax)
8100603b:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100603e:	8d 42 04             	lea    0x4(%edx),%eax
81006041:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006044:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006047:	8d 48 04             	lea    0x4(%eax),%ecx
8100604a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100604d:	8b 12                	mov    (%edx),%edx
8100604f:	89 10                	mov    %edx,(%eax)
81006051:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81006055:	76 5e                	jbe    810060b5 <_realloc_r+0x4de>
81006057:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100605a:	8d 42 04             	lea    0x4(%edx),%eax
8100605d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006060:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006063:	8d 48 04             	lea    0x4(%eax),%ecx
81006066:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81006069:	8b 12                	mov    (%edx),%edx
8100606b:	89 10                	mov    %edx,(%eax)
8100606d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81006070:	8d 42 04             	lea    0x4(%edx),%eax
81006073:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006076:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006079:	8d 48 04             	lea    0x4(%eax),%ecx
8100607c:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100607f:	8b 12                	mov    (%edx),%edx
81006081:	89 10                	mov    %edx,(%eax)
81006083:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81006087:	76 2c                	jbe    810060b5 <_realloc_r+0x4de>
81006089:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100608c:	8d 42 04             	lea    0x4(%edx),%eax
8100608f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006092:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006095:	8d 48 04             	lea    0x4(%eax),%ecx
81006098:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100609b:	8b 12                	mov    (%edx),%edx
8100609d:	89 10                	mov    %edx,(%eax)
8100609f:	8b 55 dc             	mov    -0x24(%ebp),%edx
810060a2:	8d 42 04             	lea    0x4(%edx),%eax
810060a5:	89 45 dc             	mov    %eax,-0x24(%ebp)
810060a8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810060ab:	8d 48 04             	lea    0x4(%eax),%ecx
810060ae:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810060b1:	8b 12                	mov    (%edx),%edx
810060b3:	89 10                	mov    %edx,(%eax)
810060b5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810060b8:	8d 42 04             	lea    0x4(%edx),%eax
810060bb:	89 45 dc             	mov    %eax,-0x24(%ebp)
810060be:	8b 45 d8             	mov    -0x28(%ebp),%eax
810060c1:	8d 48 04             	lea    0x4(%eax),%ecx
810060c4:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810060c7:	8b 12                	mov    (%edx),%edx
810060c9:	89 10                	mov    %edx,(%eax)
810060cb:	8b 55 dc             	mov    -0x24(%ebp),%edx
810060ce:	8d 42 04             	lea    0x4(%edx),%eax
810060d1:	89 45 dc             	mov    %eax,-0x24(%ebp)
810060d4:	8b 45 d8             	mov    -0x28(%ebp),%eax
810060d7:	8d 48 04             	lea    0x4(%eax),%ecx
810060da:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810060dd:	8b 12                	mov    (%edx),%edx
810060df:	89 10                	mov    %edx,(%eax)
810060e1:	8b 45 dc             	mov    -0x24(%ebp),%eax
810060e4:	8b 10                	mov    (%eax),%edx
810060e6:	8b 45 d8             	mov    -0x28(%ebp),%eax
810060e9:	89 10                	mov    %edx,(%eax)
810060eb:	e9 12 03 00 00       	jmp    81006402 <_realloc_r+0x82b>
810060f0:	83 ec 04             	sub    $0x4,%esp
810060f3:	ff 75 a4             	pushl  -0x5c(%ebp)
810060f6:	ff 75 0c             	pushl  0xc(%ebp)
810060f9:	ff 75 a8             	pushl  -0x58(%ebp)
810060fc:	e8 ff f8 ff ff       	call   81005a00 <memmove>
81006101:	83 c4 10             	add    $0x10,%esp
81006104:	e9 f9 02 00 00       	jmp    81006402 <_realloc_r+0x82b>
81006109:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
8100610d:	0f 84 5b 01 00 00    	je     8100626e <_realloc_r+0x697>
81006113:	8b 55 ac             	mov    -0x54(%ebp),%edx
81006116:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006119:	01 d0                	add    %edx,%eax
8100611b:	89 c2                	mov    %eax,%edx
8100611d:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006120:	39 c2                	cmp    %eax,%edx
81006122:	0f 8c 46 01 00 00    	jl     8100626e <_realloc_r+0x697>
81006128:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100612b:	8b 40 0c             	mov    0xc(%eax),%eax
8100612e:	89 45 b8             	mov    %eax,-0x48(%ebp)
81006131:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006134:	8b 40 08             	mov    0x8(%eax),%eax
81006137:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100613a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100613d:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006140:	89 50 0c             	mov    %edx,0xc(%eax)
81006143:	8b 45 b8             	mov    -0x48(%ebp),%eax
81006146:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81006149:	89 50 08             	mov    %edx,0x8(%eax)
8100614c:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100614f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006152:	8b 45 ac             	mov    -0x54(%ebp),%eax
81006155:	01 45 f0             	add    %eax,-0x10(%ebp)
81006158:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100615b:	83 c0 08             	add    $0x8,%eax
8100615e:	89 45 a8             	mov    %eax,-0x58(%ebp)
81006161:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006164:	83 e8 04             	sub    $0x4,%eax
81006167:	89 45 9c             	mov    %eax,-0x64(%ebp)
8100616a:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
8100616e:	0f 87 e1 00 00 00    	ja     81006255 <_realloc_r+0x67e>
81006174:	8b 45 0c             	mov    0xc(%ebp),%eax
81006177:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100617a:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100617d:	89 45 d0             	mov    %eax,-0x30(%ebp)
81006180:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81006184:	0f 86 90 00 00 00    	jbe    8100621a <_realloc_r+0x643>
8100618a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100618d:	8d 42 04             	lea    0x4(%edx),%eax
81006190:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006193:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006196:	8d 48 04             	lea    0x4(%eax),%ecx
81006199:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100619c:	8b 12                	mov    (%edx),%edx
8100619e:	89 10                	mov    %edx,(%eax)
810061a0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810061a3:	8d 42 04             	lea    0x4(%edx),%eax
810061a6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810061a9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810061ac:	8d 48 04             	lea    0x4(%eax),%ecx
810061af:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810061b2:	8b 12                	mov    (%edx),%edx
810061b4:	89 10                	mov    %edx,(%eax)
810061b6:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
810061ba:	76 5e                	jbe    8100621a <_realloc_r+0x643>
810061bc:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810061bf:	8d 42 04             	lea    0x4(%edx),%eax
810061c2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810061c5:	8b 45 d0             	mov    -0x30(%ebp),%eax
810061c8:	8d 48 04             	lea    0x4(%eax),%ecx
810061cb:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810061ce:	8b 12                	mov    (%edx),%edx
810061d0:	89 10                	mov    %edx,(%eax)
810061d2:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810061d5:	8d 42 04             	lea    0x4(%edx),%eax
810061d8:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810061db:	8b 45 d0             	mov    -0x30(%ebp),%eax
810061de:	8d 48 04             	lea    0x4(%eax),%ecx
810061e1:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810061e4:	8b 12                	mov    (%edx),%edx
810061e6:	89 10                	mov    %edx,(%eax)
810061e8:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
810061ec:	76 2c                	jbe    8100621a <_realloc_r+0x643>
810061ee:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810061f1:	8d 42 04             	lea    0x4(%edx),%eax
810061f4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810061f7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810061fa:	8d 48 04             	lea    0x4(%eax),%ecx
810061fd:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006200:	8b 12                	mov    (%edx),%edx
81006202:	89 10                	mov    %edx,(%eax)
81006204:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006207:	8d 42 04             	lea    0x4(%edx),%eax
8100620a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100620d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006210:	8d 48 04             	lea    0x4(%eax),%ecx
81006213:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006216:	8b 12                	mov    (%edx),%edx
81006218:	89 10                	mov    %edx,(%eax)
8100621a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100621d:	8d 42 04             	lea    0x4(%edx),%eax
81006220:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006223:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006226:	8d 48 04             	lea    0x4(%eax),%ecx
81006229:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100622c:	8b 12                	mov    (%edx),%edx
8100622e:	89 10                	mov    %edx,(%eax)
81006230:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006233:	8d 42 04             	lea    0x4(%edx),%eax
81006236:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006239:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100623c:	8d 48 04             	lea    0x4(%eax),%ecx
8100623f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006242:	8b 12                	mov    (%edx),%edx
81006244:	89 10                	mov    %edx,(%eax)
81006246:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81006249:	8b 10                	mov    (%eax),%edx
8100624b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100624e:	89 10                	mov    %edx,(%eax)
81006250:	e9 ad 01 00 00       	jmp    81006402 <_realloc_r+0x82b>
81006255:	83 ec 04             	sub    $0x4,%esp
81006258:	ff 75 9c             	pushl  -0x64(%ebp)
8100625b:	ff 75 0c             	pushl  0xc(%ebp)
8100625e:	ff 75 a8             	pushl  -0x58(%ebp)
81006261:	e8 9a f7 ff ff       	call   81005a00 <memmove>
81006266:	83 c4 10             	add    $0x10,%esp
81006269:	e9 94 01 00 00       	jmp    81006402 <_realloc_r+0x82b>
8100626e:	83 ec 08             	sub    $0x8,%esp
81006271:	ff 75 10             	pushl  0x10(%ebp)
81006274:	ff 75 08             	pushl  0x8(%ebp)
81006277:	e8 8f c6 ff ff       	call   8100290b <_malloc_r>
8100627c:	83 c4 10             	add    $0x10,%esp
8100627f:	89 45 a8             	mov    %eax,-0x58(%ebp)
81006282:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81006286:	75 18                	jne    810062a0 <_realloc_r+0x6c9>
81006288:	83 ec 0c             	sub    $0xc,%esp
8100628b:	ff 75 08             	pushl  0x8(%ebp)
8100628e:	e8 5b d0 ff ff       	call   810032ee <__malloc_unlock>
81006293:	83 c4 10             	add    $0x10,%esp
81006296:	b8 00 00 00 00       	mov    $0x0,%eax
8100629b:	e9 0f 02 00 00       	jmp    810064af <_realloc_r+0x8d8>
810062a0:	8b 45 a8             	mov    -0x58(%ebp),%eax
810062a3:	83 e8 08             	sub    $0x8,%eax
810062a6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810062a9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810062ac:	8b 40 04             	mov    0x4(%eax),%eax
810062af:	83 e0 fe             	and    $0xfffffffe,%eax
810062b2:	89 c2                	mov    %eax,%edx
810062b4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810062b7:	01 d0                	add    %edx,%eax
810062b9:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810062bc:	75 17                	jne    810062d5 <_realloc_r+0x6fe>
810062be:	8b 45 f4             	mov    -0xc(%ebp),%eax
810062c1:	8b 40 04             	mov    0x4(%eax),%eax
810062c4:	83 e0 fc             	and    $0xfffffffc,%eax
810062c7:	01 45 f0             	add    %eax,-0x10(%ebp)
810062ca:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810062cd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810062d0:	e9 2d 01 00 00       	jmp    81006402 <_realloc_r+0x82b>
810062d5:	8b 45 c0             	mov    -0x40(%ebp),%eax
810062d8:	83 e8 04             	sub    $0x4,%eax
810062db:	89 45 98             	mov    %eax,-0x68(%ebp)
810062de:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
810062e2:	0f 87 de 00 00 00    	ja     810063c6 <_realloc_r+0x7ef>
810062e8:	8b 45 0c             	mov    0xc(%ebp),%eax
810062eb:	89 45 cc             	mov    %eax,-0x34(%ebp)
810062ee:	8b 45 a8             	mov    -0x58(%ebp),%eax
810062f1:	89 45 c8             	mov    %eax,-0x38(%ebp)
810062f4:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
810062f8:	0f 86 90 00 00 00    	jbe    8100638e <_realloc_r+0x7b7>
810062fe:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006301:	8d 42 04             	lea    0x4(%edx),%eax
81006304:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006307:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100630a:	8d 48 04             	lea    0x4(%eax),%ecx
8100630d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006310:	8b 12                	mov    (%edx),%edx
81006312:	89 10                	mov    %edx,(%eax)
81006314:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006317:	8d 42 04             	lea    0x4(%edx),%eax
8100631a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100631d:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006320:	8d 48 04             	lea    0x4(%eax),%ecx
81006323:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006326:	8b 12                	mov    (%edx),%edx
81006328:	89 10                	mov    %edx,(%eax)
8100632a:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
8100632e:	76 5e                	jbe    8100638e <_realloc_r+0x7b7>
81006330:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006333:	8d 42 04             	lea    0x4(%edx),%eax
81006336:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006339:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100633c:	8d 48 04             	lea    0x4(%eax),%ecx
8100633f:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006342:	8b 12                	mov    (%edx),%edx
81006344:	89 10                	mov    %edx,(%eax)
81006346:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006349:	8d 42 04             	lea    0x4(%edx),%eax
8100634c:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100634f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006352:	8d 48 04             	lea    0x4(%eax),%ecx
81006355:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006358:	8b 12                	mov    (%edx),%edx
8100635a:	89 10                	mov    %edx,(%eax)
8100635c:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81006360:	76 2c                	jbe    8100638e <_realloc_r+0x7b7>
81006362:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006365:	8d 42 04             	lea    0x4(%edx),%eax
81006368:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100636b:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100636e:	8d 48 04             	lea    0x4(%eax),%ecx
81006371:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006374:	8b 12                	mov    (%edx),%edx
81006376:	89 10                	mov    %edx,(%eax)
81006378:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100637b:	8d 42 04             	lea    0x4(%edx),%eax
8100637e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006381:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006384:	8d 48 04             	lea    0x4(%eax),%ecx
81006387:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100638a:	8b 12                	mov    (%edx),%edx
8100638c:	89 10                	mov    %edx,(%eax)
8100638e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006391:	8d 42 04             	lea    0x4(%edx),%eax
81006394:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006397:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100639a:	8d 48 04             	lea    0x4(%eax),%ecx
8100639d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810063a0:	8b 12                	mov    (%edx),%edx
810063a2:	89 10                	mov    %edx,(%eax)
810063a4:	8b 55 cc             	mov    -0x34(%ebp),%edx
810063a7:	8d 42 04             	lea    0x4(%edx),%eax
810063aa:	89 45 cc             	mov    %eax,-0x34(%ebp)
810063ad:	8b 45 c8             	mov    -0x38(%ebp),%eax
810063b0:	8d 48 04             	lea    0x4(%eax),%ecx
810063b3:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810063b6:	8b 12                	mov    (%edx),%edx
810063b8:	89 10                	mov    %edx,(%eax)
810063ba:	8b 45 cc             	mov    -0x34(%ebp),%eax
810063bd:	8b 10                	mov    (%eax),%edx
810063bf:	8b 45 c8             	mov    -0x38(%ebp),%eax
810063c2:	89 10                	mov    %edx,(%eax)
810063c4:	eb 14                	jmp    810063da <_realloc_r+0x803>
810063c6:	83 ec 04             	sub    $0x4,%esp
810063c9:	ff 75 98             	pushl  -0x68(%ebp)
810063cc:	ff 75 0c             	pushl  0xc(%ebp)
810063cf:	ff 75 a8             	pushl  -0x58(%ebp)
810063d2:	e8 29 f6 ff ff       	call   81005a00 <memmove>
810063d7:	83 c4 10             	add    $0x10,%esp
810063da:	83 ec 08             	sub    $0x8,%esp
810063dd:	ff 75 0c             	pushl  0xc(%ebp)
810063e0:	ff 75 08             	pushl  0x8(%ebp)
810063e3:	e8 b6 ad ff ff       	call   8100119e <_free_r>
810063e8:	83 c4 10             	add    $0x10,%esp
810063eb:	83 ec 0c             	sub    $0xc,%esp
810063ee:	ff 75 08             	pushl  0x8(%ebp)
810063f1:	e8 f8 ce ff ff       	call   810032ee <__malloc_unlock>
810063f6:	83 c4 10             	add    $0x10,%esp
810063f9:	8b 45 a8             	mov    -0x58(%ebp),%eax
810063fc:	e9 ae 00 00 00       	jmp    810064af <_realloc_r+0x8d8>
81006401:	90                   	nop
81006402:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006405:	2b 45 bc             	sub    -0x44(%ebp),%eax
81006408:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100640b:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
8100640f:	76 5d                	jbe    8100646e <_realloc_r+0x897>
81006411:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006414:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006417:	01 d0                	add    %edx,%eax
81006419:	89 45 90             	mov    %eax,-0x70(%ebp)
8100641c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100641f:	8b 40 04             	mov    0x4(%eax),%eax
81006422:	83 e0 01             	and    $0x1,%eax
81006425:	0b 45 bc             	or     -0x44(%ebp),%eax
81006428:	89 c2                	mov    %eax,%edx
8100642a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100642d:	89 50 04             	mov    %edx,0x4(%eax)
81006430:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006433:	83 c8 01             	or     $0x1,%eax
81006436:	89 c2                	mov    %eax,%edx
81006438:	8b 45 90             	mov    -0x70(%ebp),%eax
8100643b:	89 50 04             	mov    %edx,0x4(%eax)
8100643e:	8b 55 90             	mov    -0x70(%ebp),%edx
81006441:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006444:	01 d0                	add    %edx,%eax
81006446:	8b 50 04             	mov    0x4(%eax),%edx
81006449:	8b 4d 90             	mov    -0x70(%ebp),%ecx
8100644c:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100644f:	01 c8                	add    %ecx,%eax
81006451:	83 ca 01             	or     $0x1,%edx
81006454:	89 50 04             	mov    %edx,0x4(%eax)
81006457:	8b 45 90             	mov    -0x70(%ebp),%eax
8100645a:	83 c0 08             	add    $0x8,%eax
8100645d:	83 ec 08             	sub    $0x8,%esp
81006460:	50                   	push   %eax
81006461:	ff 75 08             	pushl  0x8(%ebp)
81006464:	e8 35 ad ff ff       	call   8100119e <_free_r>
81006469:	83 c4 10             	add    $0x10,%esp
8100646c:	eb 2d                	jmp    8100649b <_realloc_r+0x8c4>
8100646e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006471:	8b 40 04             	mov    0x4(%eax),%eax
81006474:	83 e0 01             	and    $0x1,%eax
81006477:	0b 45 f0             	or     -0x10(%ebp),%eax
8100647a:	89 c2                	mov    %eax,%edx
8100647c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100647f:	89 50 04             	mov    %edx,0x4(%eax)
81006482:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006485:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006488:	01 d0                	add    %edx,%eax
8100648a:	8b 50 04             	mov    0x4(%eax),%edx
8100648d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81006490:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006493:	01 c8                	add    %ecx,%eax
81006495:	83 ca 01             	or     $0x1,%edx
81006498:	89 50 04             	mov    %edx,0x4(%eax)
8100649b:	83 ec 0c             	sub    $0xc,%esp
8100649e:	ff 75 08             	pushl  0x8(%ebp)
810064a1:	e8 48 ce ff ff       	call   810032ee <__malloc_unlock>
810064a6:	83 c4 10             	add    $0x10,%esp
810064a9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810064ac:	83 c0 08             	add    $0x8,%eax
810064af:	c9                   	leave  
810064b0:	c3                   	ret    

810064b1 <cleanup_glue>:
810064b1:	55                   	push   %ebp
810064b2:	89 e5                	mov    %esp,%ebp
810064b4:	83 ec 08             	sub    $0x8,%esp
810064b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810064ba:	8b 00                	mov    (%eax),%eax
810064bc:	85 c0                	test   %eax,%eax
810064be:	74 14                	je     810064d4 <cleanup_glue+0x23>
810064c0:	8b 45 0c             	mov    0xc(%ebp),%eax
810064c3:	8b 00                	mov    (%eax),%eax
810064c5:	83 ec 08             	sub    $0x8,%esp
810064c8:	50                   	push   %eax
810064c9:	ff 75 08             	pushl  0x8(%ebp)
810064cc:	e8 e0 ff ff ff       	call   810064b1 <cleanup_glue>
810064d1:	83 c4 10             	add    $0x10,%esp
810064d4:	83 ec 08             	sub    $0x8,%esp
810064d7:	ff 75 0c             	pushl  0xc(%ebp)
810064da:	ff 75 08             	pushl  0x8(%ebp)
810064dd:	e8 bc ac ff ff       	call   8100119e <_free_r>
810064e2:	83 c4 10             	add    $0x10,%esp
810064e5:	90                   	nop
810064e6:	c9                   	leave  
810064e7:	c3                   	ret    

810064e8 <_reclaim_reent>:
810064e8:	55                   	push   %ebp
810064e9:	89 e5                	mov    %esp,%ebp
810064eb:	83 ec 28             	sub    $0x28,%esp
810064ee:	a1 24 73 00 81       	mov    0x81007324,%eax
810064f3:	39 45 08             	cmp    %eax,0x8(%ebp)
810064f6:	0f 84 49 01 00 00    	je     81006645 <_reclaim_reent+0x15d>
810064fc:	8b 45 08             	mov    0x8(%ebp),%eax
810064ff:	8b 40 4c             	mov    0x4c(%eax),%eax
81006502:	85 c0                	test   %eax,%eax
81006504:	74 64                	je     8100656a <_reclaim_reent+0x82>
81006506:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100650d:	eb 3e                	jmp    8100654d <_reclaim_reent+0x65>
8100650f:	8b 45 08             	mov    0x8(%ebp),%eax
81006512:	8b 50 4c             	mov    0x4c(%eax),%edx
81006515:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006518:	c1 e0 02             	shl    $0x2,%eax
8100651b:	01 d0                	add    %edx,%eax
8100651d:	8b 00                	mov    (%eax),%eax
8100651f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006522:	eb 1f                	jmp    81006543 <_reclaim_reent+0x5b>
81006524:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006527:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100652a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100652d:	8b 00                	mov    (%eax),%eax
8100652f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006532:	83 ec 08             	sub    $0x8,%esp
81006535:	ff 75 e8             	pushl  -0x18(%ebp)
81006538:	ff 75 08             	pushl  0x8(%ebp)
8100653b:	e8 5e ac ff ff       	call   8100119e <_free_r>
81006540:	83 c4 10             	add    $0x10,%esp
81006543:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81006547:	75 db                	jne    81006524 <_reclaim_reent+0x3c>
81006549:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100654d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006550:	83 f8 1f             	cmp    $0x1f,%eax
81006553:	76 ba                	jbe    8100650f <_reclaim_reent+0x27>
81006555:	8b 45 08             	mov    0x8(%ebp),%eax
81006558:	8b 40 4c             	mov    0x4c(%eax),%eax
8100655b:	83 ec 08             	sub    $0x8,%esp
8100655e:	50                   	push   %eax
8100655f:	ff 75 08             	pushl  0x8(%ebp)
81006562:	e8 37 ac ff ff       	call   8100119e <_free_r>
81006567:	83 c4 10             	add    $0x10,%esp
8100656a:	8b 45 08             	mov    0x8(%ebp),%eax
8100656d:	8b 40 40             	mov    0x40(%eax),%eax
81006570:	85 c0                	test   %eax,%eax
81006572:	74 15                	je     81006589 <_reclaim_reent+0xa1>
81006574:	8b 45 08             	mov    0x8(%ebp),%eax
81006577:	8b 40 40             	mov    0x40(%eax),%eax
8100657a:	83 ec 08             	sub    $0x8,%esp
8100657d:	50                   	push   %eax
8100657e:	ff 75 08             	pushl  0x8(%ebp)
81006581:	e8 18 ac ff ff       	call   8100119e <_free_r>
81006586:	83 c4 10             	add    $0x10,%esp
81006589:	8b 45 08             	mov    0x8(%ebp),%eax
8100658c:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81006592:	85 c0                	test   %eax,%eax
81006594:	74 50                	je     810065e6 <_reclaim_reent+0xfe>
81006596:	8b 45 08             	mov    0x8(%ebp),%eax
81006599:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100659f:	8b 55 08             	mov    0x8(%ebp),%edx
810065a2:	81 c2 4c 01 00 00    	add    $0x14c,%edx
810065a8:	39 d0                	cmp    %edx,%eax
810065aa:	74 3a                	je     810065e6 <_reclaim_reent+0xfe>
810065ac:	8b 45 08             	mov    0x8(%ebp),%eax
810065af:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810065b5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810065b8:	eb 1f                	jmp    810065d9 <_reclaim_reent+0xf1>
810065ba:	8b 45 ec             	mov    -0x14(%ebp),%eax
810065bd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810065c0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810065c3:	8b 00                	mov    (%eax),%eax
810065c5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810065c8:	83 ec 08             	sub    $0x8,%esp
810065cb:	ff 75 e4             	pushl  -0x1c(%ebp)
810065ce:	ff 75 08             	pushl  0x8(%ebp)
810065d1:	e8 c8 ab ff ff       	call   8100119e <_free_r>
810065d6:	83 c4 10             	add    $0x10,%esp
810065d9:	8b 45 08             	mov    0x8(%ebp),%eax
810065dc:	05 4c 01 00 00       	add    $0x14c,%eax
810065e1:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810065e4:	75 d4                	jne    810065ba <_reclaim_reent+0xd2>
810065e6:	8b 45 08             	mov    0x8(%ebp),%eax
810065e9:	8b 40 54             	mov    0x54(%eax),%eax
810065ec:	85 c0                	test   %eax,%eax
810065ee:	74 15                	je     81006605 <_reclaim_reent+0x11d>
810065f0:	8b 45 08             	mov    0x8(%ebp),%eax
810065f3:	8b 40 54             	mov    0x54(%eax),%eax
810065f6:	83 ec 08             	sub    $0x8,%esp
810065f9:	50                   	push   %eax
810065fa:	ff 75 08             	pushl  0x8(%ebp)
810065fd:	e8 9c ab ff ff       	call   8100119e <_free_r>
81006602:	83 c4 10             	add    $0x10,%esp
81006605:	8b 45 08             	mov    0x8(%ebp),%eax
81006608:	8b 40 38             	mov    0x38(%eax),%eax
8100660b:	85 c0                	test   %eax,%eax
8100660d:	74 36                	je     81006645 <_reclaim_reent+0x15d>
8100660f:	8b 45 08             	mov    0x8(%ebp),%eax
81006612:	8b 40 3c             	mov    0x3c(%eax),%eax
81006615:	83 ec 0c             	sub    $0xc,%esp
81006618:	ff 75 08             	pushl  0x8(%ebp)
8100661b:	ff d0                	call   *%eax
8100661d:	83 c4 10             	add    $0x10,%esp
81006620:	8b 45 08             	mov    0x8(%ebp),%eax
81006623:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81006629:	85 c0                	test   %eax,%eax
8100662b:	74 18                	je     81006645 <_reclaim_reent+0x15d>
8100662d:	8b 45 08             	mov    0x8(%ebp),%eax
81006630:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81006636:	83 ec 08             	sub    $0x8,%esp
81006639:	50                   	push   %eax
8100663a:	ff 75 08             	pushl  0x8(%ebp)
8100663d:	e8 6f fe ff ff       	call   810064b1 <cleanup_glue>
81006642:	83 c4 10             	add    $0x10,%esp
81006645:	90                   	nop
81006646:	c9                   	leave  
81006647:	c3                   	ret    

81006648 <strncmp>:
81006648:	55                   	push   %ebp
81006649:	89 e5                	mov    %esp,%ebp
8100664b:	83 ec 10             	sub    $0x10,%esp
8100664e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006652:	75 0a                	jne    8100665e <strncmp+0x16>
81006654:	b8 00 00 00 00       	mov    $0x0,%eax
81006659:	e9 cb 00 00 00       	jmp    81006729 <strncmp+0xe1>
8100665e:	8b 55 08             	mov    0x8(%ebp),%edx
81006661:	8b 45 0c             	mov    0xc(%ebp),%eax
81006664:	09 d0                	or     %edx,%eax
81006666:	83 e0 03             	and    $0x3,%eax
81006669:	85 c0                	test   %eax,%eax
8100666b:	0f 85 85 00 00 00    	jne    810066f6 <strncmp+0xae>
81006671:	8b 45 08             	mov    0x8(%ebp),%eax
81006674:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006677:	8b 45 0c             	mov    0xc(%ebp),%eax
8100667a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100667d:	eb 36                	jmp    810066b5 <strncmp+0x6d>
8100667f:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
81006683:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006687:	74 1d                	je     810066a6 <strncmp+0x5e>
81006689:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100668c:	8b 00                	mov    (%eax),%eax
8100668e:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81006694:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006697:	8b 00                	mov    (%eax),%eax
81006699:	f7 d0                	not    %eax
8100669b:	21 d0                	and    %edx,%eax
8100669d:	25 80 80 80 80       	and    $0x80808080,%eax
810066a2:	85 c0                	test   %eax,%eax
810066a4:	74 07                	je     810066ad <strncmp+0x65>
810066a6:	b8 00 00 00 00       	mov    $0x0,%eax
810066ab:	eb 7c                	jmp    81006729 <strncmp+0xe1>
810066ad:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
810066b1:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
810066b5:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
810066b9:	76 0e                	jbe    810066c9 <strncmp+0x81>
810066bb:	8b 45 fc             	mov    -0x4(%ebp),%eax
810066be:	8b 10                	mov    (%eax),%edx
810066c0:	8b 45 f8             	mov    -0x8(%ebp),%eax
810066c3:	8b 00                	mov    (%eax),%eax
810066c5:	39 c2                	cmp    %eax,%edx
810066c7:	74 b6                	je     8100667f <strncmp+0x37>
810066c9:	8b 45 fc             	mov    -0x4(%ebp),%eax
810066cc:	89 45 08             	mov    %eax,0x8(%ebp)
810066cf:	8b 45 f8             	mov    -0x8(%ebp),%eax
810066d2:	89 45 0c             	mov    %eax,0xc(%ebp)
810066d5:	eb 1f                	jmp    810066f6 <strncmp+0xae>
810066d7:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810066db:	74 0a                	je     810066e7 <strncmp+0x9f>
810066dd:	8b 45 08             	mov    0x8(%ebp),%eax
810066e0:	0f b6 00             	movzbl (%eax),%eax
810066e3:	84 c0                	test   %al,%al
810066e5:	75 07                	jne    810066ee <strncmp+0xa6>
810066e7:	b8 00 00 00 00       	mov    $0x0,%eax
810066ec:	eb 3b                	jmp    81006729 <strncmp+0xe1>
810066ee:	83 45 08 01          	addl   $0x1,0x8(%ebp)
810066f2:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
810066f6:	8b 45 10             	mov    0x10(%ebp),%eax
810066f9:	8d 50 ff             	lea    -0x1(%eax),%edx
810066fc:	89 55 10             	mov    %edx,0x10(%ebp)
810066ff:	85 c0                	test   %eax,%eax
81006701:	74 10                	je     81006713 <strncmp+0xcb>
81006703:	8b 45 08             	mov    0x8(%ebp),%eax
81006706:	0f b6 10             	movzbl (%eax),%edx
81006709:	8b 45 0c             	mov    0xc(%ebp),%eax
8100670c:	0f b6 00             	movzbl (%eax),%eax
8100670f:	38 c2                	cmp    %al,%dl
81006711:	74 c4                	je     810066d7 <strncmp+0x8f>
81006713:	8b 45 08             	mov    0x8(%ebp),%eax
81006716:	0f b6 00             	movzbl (%eax),%eax
81006719:	0f b6 d0             	movzbl %al,%edx
8100671c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100671f:	0f b6 00             	movzbl (%eax),%eax
81006722:	0f b6 c8             	movzbl %al,%ecx
81006725:	89 d0                	mov    %edx,%eax
81006727:	29 c8                	sub    %ecx,%eax
81006729:	c9                   	leave  
8100672a:	c3                   	ret    

8100672b <__get_global_locale>:
8100672b:	55                   	push   %ebp
8100672c:	89 e5                	mov    %esp,%ebp
8100672e:	b8 60 77 00 81       	mov    $0x81007760,%eax
81006733:	5d                   	pop    %ebp
81006734:	c3                   	ret    

81006735 <__get_current_locale>:
81006735:	55                   	push   %ebp
81006736:	89 e5                	mov    %esp,%ebp
81006738:	e8 ee ff ff ff       	call   8100672b <__get_global_locale>
8100673d:	5d                   	pop    %ebp
8100673e:	c3                   	ret    

8100673f <_wcrtomb_r>:
8100673f:	55                   	push   %ebp
81006740:	89 e5                	mov    %esp,%ebp
81006742:	83 ec 18             	sub    $0x18,%esp
81006745:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100674c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006750:	75 21                	jne    81006773 <_wcrtomb_r+0x34>
81006752:	e8 de ff ff ff       	call   81006735 <__get_current_locale>
81006757:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100675d:	ff 75 14             	pushl  0x14(%ebp)
81006760:	6a 00                	push   $0x0
81006762:	8d 55 ea             	lea    -0x16(%ebp),%edx
81006765:	52                   	push   %edx
81006766:	ff 75 08             	pushl  0x8(%ebp)
81006769:	ff d0                	call   *%eax
8100676b:	83 c4 10             	add    $0x10,%esp
8100676e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006771:	eb 1f                	jmp    81006792 <_wcrtomb_r+0x53>
81006773:	e8 bd ff ff ff       	call   81006735 <__get_current_locale>
81006778:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100677e:	ff 75 14             	pushl  0x14(%ebp)
81006781:	ff 75 10             	pushl  0x10(%ebp)
81006784:	ff 75 0c             	pushl  0xc(%ebp)
81006787:	ff 75 08             	pushl  0x8(%ebp)
8100678a:	ff d0                	call   *%eax
8100678c:	83 c4 10             	add    $0x10,%esp
8100678f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006792:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006796:	75 19                	jne    810067b1 <_wcrtomb_r+0x72>
81006798:	8b 45 14             	mov    0x14(%ebp),%eax
8100679b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810067a1:	8b 45 08             	mov    0x8(%ebp),%eax
810067a4:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810067aa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810067af:	eb 03                	jmp    810067b4 <_wcrtomb_r+0x75>
810067b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810067b4:	c9                   	leave  
810067b5:	c3                   	ret    

810067b6 <wcrtomb>:
810067b6:	55                   	push   %ebp
810067b7:	89 e5                	mov    %esp,%ebp
810067b9:	83 ec 28             	sub    $0x28,%esp
810067bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810067c3:	a1 24 73 00 81       	mov    0x81007324,%eax
810067c8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810067cb:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810067cf:	75 21                	jne    810067f2 <wcrtomb+0x3c>
810067d1:	e8 5f ff ff ff       	call   81006735 <__get_current_locale>
810067d6:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810067dc:	ff 75 10             	pushl  0x10(%ebp)
810067df:	6a 00                	push   $0x0
810067e1:	8d 55 e6             	lea    -0x1a(%ebp),%edx
810067e4:	52                   	push   %edx
810067e5:	ff 75 f0             	pushl  -0x10(%ebp)
810067e8:	ff d0                	call   *%eax
810067ea:	83 c4 10             	add    $0x10,%esp
810067ed:	89 45 f4             	mov    %eax,-0xc(%ebp)
810067f0:	eb 1f                	jmp    81006811 <wcrtomb+0x5b>
810067f2:	e8 3e ff ff ff       	call   81006735 <__get_current_locale>
810067f7:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810067fd:	ff 75 10             	pushl  0x10(%ebp)
81006800:	ff 75 0c             	pushl  0xc(%ebp)
81006803:	ff 75 08             	pushl  0x8(%ebp)
81006806:	ff 75 f0             	pushl  -0x10(%ebp)
81006809:	ff d0                	call   *%eax
8100680b:	83 c4 10             	add    $0x10,%esp
8100680e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006811:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006815:	75 19                	jne    81006830 <wcrtomb+0x7a>
81006817:	8b 45 10             	mov    0x10(%ebp),%eax
8100681a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81006820:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006823:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81006829:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100682e:	eb 03                	jmp    81006833 <wcrtomb+0x7d>
81006830:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006833:	c9                   	leave  
81006834:	c3                   	ret    

81006835 <__get_global_locale>:
81006835:	55                   	push   %ebp
81006836:	89 e5                	mov    %esp,%ebp
81006838:	b8 60 77 00 81       	mov    $0x81007760,%eax
8100683d:	5d                   	pop    %ebp
8100683e:	c3                   	ret    

8100683f <__get_current_locale>:
8100683f:	55                   	push   %ebp
81006840:	89 e5                	mov    %esp,%ebp
81006842:	e8 ee ff ff ff       	call   81006835 <__get_global_locale>
81006847:	5d                   	pop    %ebp
81006848:	c3                   	ret    

81006849 <_wctomb_r>:
81006849:	55                   	push   %ebp
8100684a:	89 e5                	mov    %esp,%ebp
8100684c:	83 ec 08             	sub    $0x8,%esp
8100684f:	e8 eb ff ff ff       	call   8100683f <__get_current_locale>
81006854:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100685a:	ff 75 14             	pushl  0x14(%ebp)
8100685d:	ff 75 10             	pushl  0x10(%ebp)
81006860:	ff 75 0c             	pushl  0xc(%ebp)
81006863:	ff 75 08             	pushl  0x8(%ebp)
81006866:	ff d0                	call   *%eax
81006868:	83 c4 10             	add    $0x10,%esp
8100686b:	c9                   	leave  
8100686c:	c3                   	ret    

8100686d <__ascii_wctomb>:
8100686d:	55                   	push   %ebp
8100686e:	89 e5                	mov    %esp,%ebp
81006870:	83 ec 10             	sub    $0x10,%esp
81006873:	8b 45 10             	mov    0x10(%ebp),%eax
81006876:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006879:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100687d:	75 07                	jne    81006886 <__ascii_wctomb+0x19>
8100687f:	b8 00 00 00 00       	mov    $0x0,%eax
81006884:	eb 28                	jmp    810068ae <__ascii_wctomb+0x41>
81006886:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
8100688d:	76 10                	jbe    8100689f <__ascii_wctomb+0x32>
8100688f:	8b 45 08             	mov    0x8(%ebp),%eax
81006892:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81006898:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100689d:	eb 0f                	jmp    810068ae <__ascii_wctomb+0x41>
8100689f:	8b 45 fc             	mov    -0x4(%ebp),%eax
810068a2:	89 c2                	mov    %eax,%edx
810068a4:	8b 45 0c             	mov    0xc(%ebp),%eax
810068a7:	88 10                	mov    %dl,(%eax)
810068a9:	b8 01 00 00 00       	mov    $0x1,%eax
810068ae:	c9                   	leave  
810068af:	c3                   	ret    

810068b0 <__env_lock>:
810068b0:	55                   	push   %ebp
810068b1:	89 e5                	mov    %esp,%ebp
810068b3:	90                   	nop
810068b4:	5d                   	pop    %ebp
810068b5:	c3                   	ret    

810068b6 <__env_unlock>:
810068b6:	55                   	push   %ebp
810068b7:	89 e5                	mov    %esp,%ebp
810068b9:	90                   	nop
810068ba:	5d                   	pop    %ebp
810068bb:	c3                   	ret    

810068bc <_fstat_r>:
810068bc:	55                   	push   %ebp
810068bd:	89 e5                	mov    %esp,%ebp
810068bf:	83 ec 18             	sub    $0x18,%esp
810068c2:	c7 05 74 7d 00 81 00 	movl   $0x0,0x81007d74
810068c9:	00 00 00 
810068cc:	83 ec 08             	sub    $0x8,%esp
810068cf:	ff 75 10             	pushl  0x10(%ebp)
810068d2:	ff 75 0c             	pushl  0xc(%ebp)
810068d5:	e8 15 9f ff ff       	call   810007ef <fstat>
810068da:	83 c4 10             	add    $0x10,%esp
810068dd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810068e0:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810068e4:	75 14                	jne    810068fa <_fstat_r+0x3e>
810068e6:	a1 74 7d 00 81       	mov    0x81007d74,%eax
810068eb:	85 c0                	test   %eax,%eax
810068ed:	74 0b                	je     810068fa <_fstat_r+0x3e>
810068ef:	8b 15 74 7d 00 81    	mov    0x81007d74,%edx
810068f5:	8b 45 08             	mov    0x8(%ebp),%eax
810068f8:	89 10                	mov    %edx,(%eax)
810068fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810068fd:	c9                   	leave  
810068fe:	c3                   	ret    

810068ff <_isatty_r>:
810068ff:	55                   	push   %ebp
81006900:	89 e5                	mov    %esp,%ebp
81006902:	83 ec 18             	sub    $0x18,%esp
81006905:	c7 05 74 7d 00 81 00 	movl   $0x0,0x81007d74
8100690c:	00 00 00 
8100690f:	83 ec 0c             	sub    $0xc,%esp
81006912:	ff 75 0c             	pushl  0xc(%ebp)
81006915:	e8 b4 9e ff ff       	call   810007ce <isatty>
8100691a:	83 c4 10             	add    $0x10,%esp
8100691d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006920:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006924:	75 14                	jne    8100693a <_isatty_r+0x3b>
81006926:	a1 74 7d 00 81       	mov    0x81007d74,%eax
8100692b:	85 c0                	test   %eax,%eax
8100692d:	74 0b                	je     8100693a <_isatty_r+0x3b>
8100692f:	8b 15 74 7d 00 81    	mov    0x81007d74,%edx
81006935:	8b 45 08             	mov    0x8(%ebp),%eax
81006938:	89 10                	mov    %edx,(%eax)
8100693a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100693d:	c9                   	leave  
8100693e:	c3                   	ret    
